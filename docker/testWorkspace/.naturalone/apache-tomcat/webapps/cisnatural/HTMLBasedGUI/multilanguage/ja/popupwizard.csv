Auto-generated text file from Localization Framework 7.7.9.36 Version=trunk Locale=ja DO NOT EDIT BY HAND!;
njx_chart_attr_rcharttypeprop;Name of the adapter parameter that provides as value the type of the chart. Valid values are line, bar, horizontalBar 
chart_attr_labels;Comma separated list. Example: 2015;2016;2017 In a bar chart these are the labels shown for the x-axis. In a horizontal bar chart these are the labels shown for the y-axis. 
njx_chart_attr_labelsprop;Name of the adapter parameter, which contains the label values. The field is generated as child of the valueprop field.
_attr_align;
_attr_aligncontent;Horizontal alignment of the control's content. Default is "center".
_attr_aligncontrol;Horizontal alignment of control in its column.<br><br>Each control is "packaged" into a column. The column itself is part of a row (e.g. ITR or TR). Sometimes the size of the column is bigger than the size of the control itself. In this case the "align" property specifies the position of the control inside the column. In most cases you do not require the align control to be explicitly defined because the size of the column around the controls exactly is sized in the same way as the contained control.<br><br>If you want to directly control the alignment of text: in most text based controls there is an explicit property "textalign" in which you align the control's contained text.
_attr_aligntext;Horizontal alignment of the text that is shown.
_attr_borderwidth;Border size of control in pixels. Specify "0" not to render any border at all.
_attr_class;CSS style class definition that is directly passed into this control.<br><br>The style class can be either one which is part of the "normal" CIS style sheet files (i.e. the ones that you maintain with the style sheet editor) - or it can be one of an other style sheet file that you may reference via the ADDSTYLESHEET property of the PAGE tag.
_attr_color;Color of the control. Value must follow format "#rrggbb", e.g. #000000 for black.
_attr_colspan;Column spanning of control.<br><br>If you use TR table rows then you may sometimes want to control the number of columns your control occupies. By default it is "1" - but you may want to define the control to span over more than one columns.<br><br>The property only makes sense in table rows that are snychronized within one container (i.e. TR, STR table rows). It does not make sense in ITR rows, because these rows are explicitly not synched.
_attr_comment;Comment without any effect on rendering and behaviour. The comment is shown in the layout editor's tree view.
_attr_datatype;By default, the control is managing its content as string. By explicitly setting a datatype you can define that the control will format the data coming from the server: if the field has datatype "date" and the user inputs "010304" then the input will be translated into "01.03.2004" (or other representation, dependent on date format settings).<br><br>Please note: the datatype "float" is named a bit misleading - it represents any decimal format number. The server side representation may be a float value, but also can be a double or a BigDecimal property.
_attr_directselectevent;Event that represents a tree node selection. A tree node selection is done when the user clicks/doubleclicks on the tree node text. In this case the select() method is called in the corresponding node object on server side.
_attr_displayonly;If set to true, the FIELD will not be accessible for input. It is just used as an output field.
_attr_dropinfo;String containing any kind of information that is passed to the adapter when dropping this control over another DROPICON. Use property DROPINFOPROP to dynamically return this information. Do not use this property (or property DROPINFOPROP respectively) if you do not want the user to drag this control. 
_attr_dropmethod;Method of your adapter object that is executed when the user is dragging another DROPICON control over this control and drops it there. Do not use this attribute if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). 
_attr_enabledrag;If set to true then drag & drop is enabled within the tree.
_attr_fixlayout;The fixlayout property is important for saving rendering performance inside your browser. To become effective it requires to have specified the height and the width (if available as property) of the control.<br><br>If setting fixlayout to "true" then the control's area is defined as area which is not sized dependent on its content (as normally done with table rendering). Instead the size is predefined from outside without letting the browser "look" into the content of the area. If the content is not fitting into the area then it is cut.<br><br>You typically use this control if the content of the control's area is flexibly sizable. E.g. if the content (e.g. a TEXTGRID control) is following the size of the container.<br><br>When using vertical percentage based sizing you should pay attention to set the fixlayout-property to "true" as often as possible. - The browser as consequence will be much faster in doing its rendering because a screen consists out of "building blocks" with simple to calculate sizes.
_attr_flush;Flushing behaviour of the input control.<br><br>By default an input into the control is registered within the browser client - and communicated to the server adapter object when a user e.g. presses a button. By using the FLUSH property you can change this behaviour.<br><br>Setting FLUSH to "server" means that directly after changing the input a synchronization with the server adapter is triggered. As consequence you directly can react inside your adapter logic onto the change of the corresponding value. - Please be aware of that during the synchronization always all changed properties - also the ones that were changed before - are transferred to the adapter object, not only the one that triggered the synchonization.<br><br>Setting FLUSH to "screen" means that the changed value is populated inside the page. You use this option if you have redundant usage of the same property inside one page and if you want to pass one changed value to all its representaion directly after changing the value.
_attr_height;Height of the control.<br><br>There are three possibilities to define the height:<br><br>(A) You do not define a height at all. As consequence the control will be rendered with its default height. If the control is a container control (containing) other controls then the height of the control will follow the height of its content.<br>(B) Pixel sizing: just input a number value (e.g. "20").<br>(C) Percentage sizing: input a percentage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element of the control properly defines a height this control can reference. If you specify this control to have a height of 50% then the parent element (e.g. an ITR-row) may itself define a height of "100%". If the parent element does not specify a width then the rendering result may not represent what you expect.
_attr_helpid;Help id that is passed to the online help management in case the user presses F1 on the control.
_attr_hotkeys;Comma separated list of hot keys. A hotkey consists of a list of keys and a method name. Separate the keys by "-" and the method name again with a comma<br><br>Example:<br>ctrl-alt-65\;onCtrlAltA\;13\;onEnter ...defines two hot keys. Method onCtrlAltA is invoked if the user presses Ctrl-Alt-A. Method "onEnter" is called if the user presses the ENTER key.<br><br>Use the popup help within the Layout Painter to input hot keys.
_attr_hscroll;Definition of the horizontal scrollbar's appearance.<br><br>You can define that the scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "auto".
_attr_hscrolltruefalse;Indicates if to show a horizontal scrollbar ("true") or not ("false").<br><br>If no scrollbar is shown then the control occupies the horizontal space that is required by its content.
_attr_image;URL of image that is displayed inside the control. Any image type (.gif, .jpg, ...) that your browser does understand is valid.<br><br>Use the following options to specify the URL:<br>(A) Define the URL relative to your page. Your page is generated directly into your project's folder. Specifiying "images/xyz.gif" will point into a directory parallel to your page. Specifying "../HTMLBasedGUI/images/new.gif" will point to an image of a neighbour project.<br>(B) Define a complete URL, like "http://www.softwareag.com/images/logo.gif".
_attr_imageclosed;Image of a tree node that has subnodes and that is currently not showing its nodes. The image either is defined statically by this property or also may be defined dynamically - see the corresponding properties defined with this control.
_attr_imagedisabled;URL of image that is displayed if the control is disabled. Use properties VISIBLEPROP and INVISIBLEMODE to disable the control.<br>
When specifying IMAGEDISABLED you must also specify an IMAGE value.
_attr_imageendnode;Image of a tree node that is an end node (leaf node). The image either is defined statically by this property or also may be defined dynamically - see the corresponding properties defined with this control.
_attr_imageopened;Image of a tree node that has subnodes and that is currently showing its nodes. The image either is defined statically by this property or also may be defined dynamically - see the corresponding properties defined with this control.
_attr_invisiblemode;If the visibility of the control is determined dynamically by an adapter property then there are two rendering modes if the visibility is "false":<br><br>(1) "invisible": the control is not visible.<br>(2)"cleared": the control is not visible but it still occupies space.
_attr_left;Left position of control. Either define a pixel value ("100") or a percentatge value ("30%").
_attr_leftindent;Inserts a horizontal distance left of the first "tab" and shifts the "tabs" to the right as consequence. The value you may define represents the number of pixels that are inserted.
_attr_method;Method of your adapter object that is executed when clicking on the control.
_attr_name;Text that is displayed inside the control. Please do not specify the name when using the multi language management - but specify a "textid" instead.
_attr_nameprop;Name of adapter property that provides as value the text that is shown inside the control.
_attr_noborder;Boolean value defining if the control has a border. Default is "false".
_attr_nocellspacing;Flag that indicates if there is space between controls within the the header table. Default is FALSE.
_attr_nowrap;If the textual content of the control exceeds the size of the control then the browser automatically breaks the line and arranges the text accordingly.<br><br>You can avoid this behaviour by setting NOWRAP to "true". No line break will be performed by the browser.
_attr_onclickmethod;Adapter method that is called when the user selects a row.<br><br>Inside the adapter you can find the selected rows by iterating through the row objects and finding out which one's selection-property is switched to "true". In case of multiple row selection you can also use the method "findLastSelectedItem()" of your corresponding TEXTGRIDCollection object.
_attr_ondblclickmethod;
_attr_pagestyle;
_attr_pixeldistance;Pixel distance between the links that are rendered.
_attr_pixelheight;Height of the control in pixels.
_attr_pixelshift;Number of pixels that each hierarchy level is indented. If not defined then a standard is used.
_attr_pixelshiftendnode;Number of pixels that end nodes are indented. If not defined then a standard is used.
_attr_pixelwidth;Width of the control in pixels.
_attr_propref;If the grid column visualizes data input the name of the property here. This property is located within the row item class. Example: if you use a FIELD or CHECKBOX control input the value of property VALUEPROP here. If the grid column does not visualize any data (e.g. you use a BUTTON control) input an unique column identifier. The PROPREF property is used as key when flushing 'column change events' to the application.
_attr_requiredheight;Minimum height of the control in pixels. Use this property to ensure a minimum height if the overall control's height is a percentage of the available space - i.e. if value of property HEIGHT is a percentage (e.g. 100%).<br><br>Please note:You must not use FIXLAYOUT at the surrounding row container (ITR and ROWAREA). Otherwise: if the available space is less than the required height the end of the control is just cut off.
_attr_rowcount;Number of rows that are rendered inside the control.<br><br>There are two ways of using this property - dependent on whether you in addition define the HEIGHT property:<br><br>If you do NOT define the HEIGHT property then the control is rendered with exactly the number of rows that are defined as ROWCOUNT value.<br><br>If a HEIGHT value is defined in addition (e.g. as percentage value "100%") then the number of rows depend on the actual height of the control. The ROWCOUNT value in this case indicates the maximum number of rows that are picked from the server. You should define this value in a way so that it is not too low - otherwise your grid will not be fully filled. On the other hand it should not be defined too high ("100") because this causes more communication traffic and more rendering effort inside the browser.
_attr_rowspan;Row spanning of control.<br><br>If you use TR table rows then you may sometimes want to control the number of rows your control occupies. By default it is "1" - but you may want to define the control to span over more than one columns.<br><br>The property only makes sense in table rows that are snychronized within one container (i.e. TR, STR table rows). It does not make sense in ITR rows, because these rows are explicitly not synched.
_attr_scroll;Definition of the scrollbar's appearance.<br><br>You can define that the scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "auto".
_attr_singleselect;If set to "true" then only one item can be selected. If set to "false" then multiple icons can be selected.
_attr_sorttitle;Text that is shown as tooltip for the sort indicator.<br><br>Either input text by using this SORTTITLE property - or use the SORTTITLETEXTID in order to define a language dependent literal.
_attr_sorttitlesprop;Name of adapter property provding a semicolon-separated string containing the titles to be displayed.<br><br>Example for a value that is passed back by the property:<br>"Click here to sort column First Name\" Click here to sort column Last Name\; Click here to sort column Street""
_attr_sorttitletextid;Text ID that is passed to the multi lanaguage management - representing the tooltip text for the sort indicator.
_attr_statusprop;Name of the adapter property that dynamically passes information how the field should be rendered and how it should act.
_attr_straighttext;If the text of the control contains HTML tags then these are by default interpreted by the browser. Specifiying STRAIGHTTEXT as "true" means that the browser will directly render the characters without HTML interpretation.<br><br>Example: if you want to output the source of an HTML text then STRAIGHTTEXT should be set to "true".
_attr_style;CSS style definition that is directly passed into this control.<br><br>With the style you can individually influence the rendering of the control. You can specify any style sheet expressions. Examples are:<br><br>border: 1px solid #FF0000<br>background-color: #808080<br><br>You can combine expressions by appending and separating them with a semicolon.<br><br>Sometimes it is useful to have a look into the generated HTML code in order to know where direct style definitions are applied. Press right mouse-button in your browser and select the "View source" or "View frame's source" function.
_attr_styleprop;Name of adapter property that dynamically provides explicit style information for the control.
_attr_stylevariant;Some controls offer the possibility to define style variants. By this style variant you can address different styles inside your style sheet definition file (.css). If not defined "normal" styles are chosen, if defined (e.g. "VAR1") then other style definitions (xxxVAR1xxx) are chosen.<br><br>Purpose: you can set up style variants in the style sheet defintion and use them multiple times by addressing them via the "stylevariant" property. CIS currently offerst two variants "VAR1" and "VAR2" but does not predefine any semantics behind - this is up to you!
_attr_subcispageprop;Name of adapter property representing the control on server side.<br><br>The property must be of type "TABSUBPAGESInfo". View the Java API Documentation for further information.
_attr_tabindex;Index that defines the tab order of the control. Controls are selected in increasing index order and in source order to resolve duplicates. 
_attr_takefullheight;Indicates if the content of the control's area gets the full available height.<br><br>If you use percentage sizing inside the control's area then this property must be switched to 'true'. If you use no explicit vertical sizing at all - or you use vertical pixel sizing for your controls - the property must be switched to 'false'. <br><br>Background information: container control's internally open up a table in which you place rows (ITR/TR) which then hold controls (e.g. LABEL/FIELD). The table that is opened up normally has no explicit height and grows with its content as consequence. By specifying "takefullheight=true" the table itself is sized to fill the maximum height of the available area.
_attr_takefullwidth;If set to "true" then the control takes all available horizontal width as its width. If set to "false" then the control does not have a predefined width but grows with its content.
_attr_textalign;Alignment of text inside the control.
_attr_textid;Multi language dependent text that is displayed inside the control. The "textid" is translated into a corresponding string at runtime.<br><br>Do not specify a "name" inside the control if specifying a "textid".
_attr_title;Text that is shown as tooltip for the control.<br><br>Either specify the text "hard" by using this TITLE property - or use the TITLETEXTID in order to define a language dependent literal.
_attr_titleimageprop;Name of adapter property that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
_attr_titleprop;Property of adapter that dynamically defines the title of the control. The title is displayed as tool tip when ther user moves the mouse onto the control.
_attr_titletextid;Text ID that is passed to the multi lanaguage management - representing the tooltip text that is used for the control.
_attr_tooltiptitlesprop;Name of adapter property provding a semicolon-separated string containing the tooltip tip texts to be displayed when the mouse is moved over the column headers.
_attr_top;Top position of control. Either define a pixel value ("100") or a percentatge value ("30%").
_attr_transparentbackground;Boolean value defining if the control is rendered with a transparent background. Default is "false".
_attr_valigncontrol;Vertical alignment of control in its column.<br><br>Each control is "packaged" into a column. The column itself is part of a row (e.g. ITR or TR). Sometimtes the size of the column is bigger than the size of the control. In this case the "align" property specify the position of the control inside the column.
_attr_valueprop;Server side property representation of the control.
_attr_visibleprop;Name of an adapter property that provides the information if this control is displayed or not. As consequence you can control the visibility of the control dynamically.<br><br>The server side property needs to be of type "boolean".
_attr_vscroll;Definition of the vertical scrollbar's appearance.<br><br>You can define that scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "auto".
_attr_width;Width of the control.<br><br>There are three possibilities to define the width:<br><br>(A) You do not define a width at all. In this case the width of the control will either be a default width or - in case of container controls - it will follow the width that is occupied by its content.<br>(B) Pixel sizing: just input a number value (e.g. "100").<br>(C) Percentage sizing: input a percantage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element of the control properly defines a width this control can reference. If you specify this control to have a width of 50% then the parent element (e.g. an ITR-row) may itself define a width of "100%". If the parent element does not specify a width then the rendering result may not represent what you expect.
_attr_withblockscrolling;If switched to "true" then the grid will show small scroll icons by which the user can scroll the grid's content. Scrolling typically is done by using the grid's scrollbar - the scroll icons that are switched on by this property are an additional possibility to scroll.
_attr_withleftpadding;Flag that indicates if the control has a 10 pixel padding on left side. Default is true.
_attr_withlines;If set to "true" then the tree elements are connected with one another by gray lines.<br><br>Please pay attention: PAGE layouts (Java),  if switching this property to "true" then you have to create the instance of your server side TREECollection object with a special constructor:<br><br>Example:<br>TREECollection m_tree = new TREECollection(true)
_attr_withplusminus;If set to "true" then +/- Icons will be rendered in front of the tree items.
_attr_withtooltip;If set to "true" then the text of an item is also available as tool tip. Use this option in case you expect that the horizontal space of the item will not be sufficient to display the whole text of the item.
_attr_zindex;Z-index of the control. If two controls overlap then the one with the higher z-index is drawn in front of the other one.
_dateinput_attr_valueprop;Name of an adapter property to provide for the control's value. This is an object of type CDATE or CTIMESTAMP - depending on the control's datatype.
_desc_Deprecated;Outdated Properties.
_desc_Selector;
_desc_appearance;Appearance of control in browser.
_desc_basic;Basic properties for this control.
_desc_binding;Binding to adapter.
_desc_contextmenu;Contxt Menu Properties.
_desc_deprecated;Deprecated properties. Please do not use it.
_desc_hotkeys;
_desc_label;
_desc_loading;
_desc_onlinehelp;Binding to context sensitive online help.
_desc_selection;Row Selection.
_desc_view;
_desc_visibility;Dynamic control of visibility.
_icon_attr_imageprop;Name of adapter property that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
_mfattr_bordercolor;Sets the border color of the frame set.
_mfattr_border;Space between frames contained in the frameset that is internally built up.
_mfattr_casaurl;URL of the page to be shown inside. Use /project/page.html as syntax, e.g. "/HTMLBasedGUI/empty.html".<br><br>Do NOT use only page.html believing that you do not have to specify the project because the multi frame page runs in the same project than the page you want to open - you ALWAYS have to specify the project!
_mfattr_frameborder;Defines if to display a border around the contained frames. Valid values are "true" or "false".
_mfattr_framesetstyle;Style passed to the HTML-frameset definition that is internally generated.
_mfattr_framespacing;Defines the amount of additional space between the frames. Value is a pixel value.
_mfattr_framestyle;Style that is passed to the HTML-FRAME definition that is internally generated.
_mfattr_marginheight;Defines top and bottom margin height. Value is a pixel value. Default is "0".
_mfattr_marginwidth;Defines left and right margin width. Value is a pixel value. Default is "0".
_mfattr_resizable;Decision if the user is able to resize the frame. This property must be in synch with the definition in the "neighbour frames". If the neighbour frames do not support resizing then it will not be offered to the user as consequence.<br><br>Valid values are "true" and "false". Default is "true".
_mfattr_scrolling;Boolean that indicates whether the frame can be scrolled. Default is true.
_mfattr_separation;Specifies how the corresponding internally used frameset is subdivided: choose "rows" for subdividing into rows, "cols" for subdividing into columns.
_mfattr_sizing;Defines the size of the contained sub-frames. If you have three sub-frames to show up inside the page then you might specify "200,200,*" to specify how the height (if SEPARATION is "rows") or the width (if SEPARATION is "cols") is distributed among the frames.<br><br>You can speficy per frame either a pixel value or a "*".
_mfattr_target;Id of the frame. Must be unique inside the frameset page. Must only contain alphanumeric characters.<br><br>The id is important! CIS offers certain methods inside the Model-class that allow an adapter to start operations for a certain frame (e.g. openeCIPageInFrame(...)). As part of the parameters of these methods a target-id is passed. The target-id is exactly the id you specifiy with the TARGET property.
_mfattr_unloadbehaviour;Reaction that CIS should take if the page inside the frame is closed. Possible values are "NOTHING" for doing nothing and "REMOVESESSION" for removing the session on server side.<br><br>Do not define this property just "by accident" but leave it to the default ("NOTHING").<br><br>You only switch to "REMOVESESSION" if you want that the server side session is destroyed when leaving the page. This is the case if you have one page that clearly indicates the closing of a session at the point of time when the page is closed.
_mfattr_url;URL to be opened inside the frame. The URL can be defined relative to the multi frame page or can be defined in an absolute way..<br>Example: You can define "../HTMLBasedGUI/workplace/header2.html" - or "http://www.softwareag.com".
_mfattr_withborder;Boolean value defining if the frame has a border on its own. Default is "false".
_mfpageactivitytimeout_attr_method;Name of adapter method that is called after a period of user inactivity. If the method does not exist for the adapter of the target frame then the standard method "processAsDefault" is called.
_mfpageactivitytimeout_attr_target;Id of the frame within that the method is invoked.
_mfpageactivitytimeout_attr_timeout;Time in seconds after which the application is called if there is no user interaction (e.g. a mouse click) within this period.
_tr_attr_height;Height of the control.<br><br>There are three possibilities to define the height:<br><br>(A) You do not define a height at all. As consequence the height of the control will follow the height of its content.<br>(B) Pixel sizing: just input a number value (e.g. "20"). Please note: the row content may overrule this setting. The height setting "100px" of an embedded textbox will beat a row height of "50px".<br>(C) Percentage sizing: input a percantage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element of the control properly defines a height this control can reference. If you specify this control to have a height of 50% then the parent element may itself define a height of "100%". If the parent element does not specify a width then the rendering result may not represent what you expect.
_tree_attr_tooltipprop;Name of property of the item objects that provides for a text that is shown if the user moves the mouse over the tree item (tooltip). 
absarea_attr_xprop;Name of adapter properties for the x-coordinates.
absarea_attr_x;X-coordinate (in pixels) of the left top corner of the area.
absarea_attr_y;Y-coordinate (in pixels) of the left top corner of the area.
absarea_attr_yprop;Name of adapter properties for the y-coordinates.
absarea_attr_z;Z-coordinate (in pixels) of the left top corner of the area.
absarea_attr_zprop;Name of adapter properties for the z-coordinates.
absdynicon_attr_height;Height of icon in pixels.
absdynicon_attr_heightprop;Name of property returning the height.
absdynicon_attr_method;Method being called inside the adapter when clicking on the icon. You do not have to define a value but can also use the icon just as a dynamic image display.
absdynicon_attr_title;Text that is shown as tooltip for the control.<br><br>Either specify the text "hard" by using this TITLE property - or use the TITLETEXTID in order to define a language dependent literal.
absdynicon_attr_valueprop;Name of the adapter property providing the URL of the image to be displayed as an icon.
absdynicon_attr_width;Width of icon in pixels.
absdynicon_attr_widthprop;Name of property returning the width.
absdynicon_attr_x;X position in pixels.
absdynicon_attr_xprop;Name of property returning the X position.
absdynicon_attr_y;Y position in pixels.
absdynicon_attr_yprop;Name of property returning the Y position.
absdynicon_attr_z;Z position.
absdynicon_attr_zprop;Name of property returning the Z position.
absfield_attr_datatype;By default, the FIELD control is managing its content as string. By explicitly setting a datatype you can define that the control...<br><br>...will check the user input if it reflects the datatype. E.g. if the user inputs "abc" into a field with datatype "int" then a corresponding error message will popup when the user leaves the field.<br><br>...will format the data coming from the server or coming form the user input: if the field has datatype "date" and the user inputs "010304" then the input will be translated into "01.03.2004" (or other representation, dependent on date format settings).<br><br>In addition value popups are offered for the user automatically for some datatypes: e.g. when specifying datatype "date" the automatically the field provides a calendar input popup.<br><br>Please note: the datatype "float" is named a bit misleading - it represents any decimal format number. The server side representation may be a float value, but also can be a double or a BigDecimal property.
absfield_attr_displayonly;If set to true, the FIELD will not be accessible for input. It is just used as an output field.
absfield_attr_fieldstyle;CSS style definition that is directly passed into this control.<br><br>With the style you can individually influence the rendering of the control. You can specify any style sheet expressions. Examples are:<br><br>border: 1px solid #FF0000<br>background-color: #808080<br><br>You can combine expressions by appending and separating them with a semicolon.<br><br>Sometimes it is useful to have a look into the generated HTML code in order to know where direct style definitions are applied. Press right mouse-button in your browser and select the "View source" or "View frame's source" function.
absfield_attr_flush;Flushing behaviour of the input control.<br><br>By default an input into the control is registered within the browser client - and communicated to the server adapter object when a user e.g. presses a button. By using the FLUSH property you can change this behaviour.<br><br>Setting FLUSH to "server" means that directly after changeing the input a synchronization with the server adapter is triggered. As consequence you directly can react inside your adapter logic onto the change of the corresponding value. - Please be aware of that during the synchronization always all changed properties - also the ones that were changed before - are transferred to the adapter object, not only the one that triggered the synchonization.<br><br>Setting FLUSH to "screen" means that the changed value is populated inside the page. You use this option if you have redundant usage of the same property inside one page and if you want to pass one changed value to all its representaion directly after changing the value.
absfield_attr_length;Width of FIELD in amount of characters. WIDTH and LENGTH should not be used together. Note that the actual size of the control depends on the font definition if using the LENGTH property.
absfield_attr_password;If set to "true", each entered character is displayed as a '*'.
absfield_attr_popupmethod;Name of the adapter's method that is called when the user requests value help by pressing F4 or F7 or by clicking into the FIELD with the right mouse button. See at chapter 'Popup Dialog Management' for more details. If the POPUPMETHOD is defined, a small icon is shown inside the field to indicate to the user that there is some value help available.
absfield_attr_statusprop;Name of the adapter property that dynamically passes information how the field should be rendered and how it should act.
absfield_attr_valueprop;Property of the adapter object to provide the content of the control.
absfield_attr_x;X-coordinated (in pixels) of the left top corner of the control.
absfield_attr_y;Y-coordinated (in pixels) of the left top corner of the control.
absfield_attr_z;Z-coordinated (in pixels) of the left top corner of the control.<br>
absicon_attr_image;Name of the image to be displayed as an icon. The value must be a valid URL.
absicon_attr_method;Name of the adapter method to be called by clicking on the icon. If the name is not specified, the data of the page is synchronized with the server by clicking on the icon.
absicon_attr_title;Title of the icon to be displayed as a "tool tip". If the mouse cursor stays on the icon for some time, the title will appear.
absicon_attr_titletextid;Text id of the icon's title, replaced by a literal by the multi language management at runtime.
absicon_attr_x;X-coordinated (in pixels) of the left top corner of the control.
absicon_attr_y;Y-coordinated (in pixels) of the left top corner of the control.
absicon_attr_z;Z-coordinated (in pixels) of the left top corner of the control.
abslabel_attr_labelstyle;CSS style definition that is directly passed into this control.<br><br>With the style you can individually influence the rendering of the control. You can specify any style sheet expressions. Examples are:<br><br>border: 1px solid #FF0000<br>background-color: #808080<br><br>You can combine expressions by appending and separating them with a semicolon.<br><br>Sometimes it is useful to have a look into the generated HTML code in order to know where direct style definitions are applied. Press right mouse-button in your browser and select the "View source" or "View frame's source" function.
abslabel_attr_name;Static text which is displayed.
abslabel_attr_textcolor;Colour in which the text is displayed.
abslabel_attr_textid;Text id, replaced by a literal of the multi language management.
abslabel_attr_textsize;Font size of the text as defined by the HTML font size specification.
abslabel_attr_x;X-coordinated (in pixels) of the left top corner of the area.
abslabel_attr_y;Y-coordinated (in pixels) of the left top corner of the area.
abslabel_attr_z;Z-coordinated (in pixels) of the left top corner of the area.
abstable0_attr_fixlayout;The fixlayout property is important for saving rendering performance inside your browser. To become effective it requires to have specified the height and the width (if available as property) of the control.<br><br>If setting fixlayout to "true" then the control's area is defined as area which is not sized dependent on its content (as normally done with table rendering). Instead the size is predefined from outside without letting the browser "look" into the content of the area. If the content is not fitting into the area then it is cut.<br><br>You typically use this control if the content of the control's area is flexibly sizable. E.g. if the content (e.g. a TEXTGRID control) is following the size of the container.<br><br>When using vertical percentage based sizing you should pay attention to set the fixlayout-property to "true" as often as possible. - The browser as consequence will be much faster in doing its rendering because a screen consists out of "building blocks" with simple to calculate sizes.
abstable0_attr_height;Height in pixels. Only required if you use percentage sizing inside the ABSTABLE0. Otherwise the height of the table follows the height of its content.
abstable0_attr_tablestyle;CSS style definition that is directly passed into this control.<br><br>With the style you can individually influence the rendering of the control. You can specify any style sheet expressions. Examples are:<br><br>border: 1px solid #FF0000<br>background-color: #808080<br><br>You can combine expressions by appending and separating them with a semicolon.<br><br>Sometimes it is useful to have a look into the generated HTML code in order to know where direct style definitions are applied. Press right mouse-button in your browser and select the "View source" or "View frame's source" function.
abstable0_attr_takefullheight;Indicates if the content of the control's area gets the full available height.<br><br>If you use percentage sizing inside the control's area then this property must be switched to 'true'. If you use no explicit vertical sizing at all - or you use vertical pixel sizing for your controls - the property must be switched to 'false'. <br><br>Background information: container control's internally open up a table in which you place rows (ITR/TR) which then hold controls (e.g. LABEL/FIELD). The table that is opened up normally has no explicit height and grows with its content as consequence. By specifying "takefullheight=true" the table itself is sized to fill the maximum height of the available area.
abstable0_attr_width;Width in pixels. If not defined then ABSTABLE0 will be as wide as required by its content.
abstable0_attr_x;X-coordinated (in pixels) of the left top corner of the area.
abstable0_attr_xprop;Name of adapter properties for the x-coordinate.
abstable0_attr_y;Y-coordinated (in pixels) of the left top corner of the area.
abstable0_attr_yprop;Name of adapter properties for the y-coordinate.
abstable0_attr_z;Z-coordinated (in pixels) of the left top corner of the area.
abstable0_attr_zprop;Name of adapter properties for the z-coordinate.
abstextout_attr_datatype;By default, the control is managing its content as string. By explicitly setting a datatype you can define that the control will format the data coming from the server: if the field has datatype "date" and the user inputs "010304" then the input will be translated into "01.03.2004" (or other representation, dependent on date format settings).<br><br>Please note: the datatype "float" is named a bit misleading - it represents any decimal format number. The server side representation may be a float value, but also can be a double or a BigDecimal property.
abstextout_attr_textcolor;Colour in which the text is displayed. Must be a valid colour code, e.g. #FF0000 for "red".
abstextout_attr_textoutstyle;CSS style definition that is directly passed into this control.<br><br>With the style you can individually influence the rendering of the control. You can specify any style sheet expressions. Examples are:<br><br>border: 1px solid #FF0000<br>background-color: #808080<br><br>You can combine expressions by appending and separating them with a semicolon.<br><br>Sometimes it is useful to have a look into the generated HTML code in order to know where direct style definitions are applied. Press right mouse-button in your browser and select the "View source" or "View frame's source" function.
abstextout_attr_textsize;The HTML font size of the text. Corresponding to the HTML definition "1" means "smallest" and "6" means "biggest".
abstextout_attr_valueprop;Name of the adapter property providing the text to be displayed.
abstextout_attr_x;X-coordinated (in pixels) of the left top corner of the control.
abstextout_attr_y;Y-coordinated (in pixels) of the left top corner of the control.
abstextout_attr_z;Z-coordinated (in pixels) of the left top corner of the control.
abstr_attr_visibleprop;Name of an adapter property that provides the information if this control is displayed or not. As consequence you can control the visibility of the control dynamically.<br><br>The server side property needs to be of type "boolean".
abstr_attr_x;X-coordinated (in pixels) of the left top corner of the area.
abstr_attr_xprop;Name of adapter properties for the x-coordinates.
abstr_attr_y;Y-coordinated (in pixels) of the left top corner of the area.
abstr_attr_yprop;Name of adapter properties for the y-coordinates.
abstr_attr_z;Z-coordinated (in pixels) of the left top corner of the area.
abstr_attr_zprop;Name of adapter properties for the z-coordinates.
activex_attr_classid;Class id of the ActiveX control. A string in the format "8E27C92B-1264-101C-8A2F-040224009C02" representing the UUID of the ActiveX component. The CLASSID is used inside the HTML client to reference the ActiveX control.
activex_attr_getxparams;Semicolon separated list of which ActiveX control are linked with which adapter properties. The format is: activeXProperty\;adapterProperty\;activeXProperty\;adapterProperty etc.<br><br>With each request send from the browser the ActiveX properties are collected in from the ActiveX control and are transferred (if they have changed) into the corresponding adapter properties.activex_attr_progid"Program id of the ActiveX control. E.g. "MSCAL.Calendar" for the Microsoft calendar. 
activex_attr_progid;The unique program identifier which has been registered for this ActiveX Control like "Shell.Explorer"
activex_attr_reloadprop;Inidicates that the ActiveX component is reloaded with every repsonse from the server that changed data of the ActiveX component.
activex_attr_setxparams;Same as GETXPARAMS but now the other direction. Adapter properties that are transferred (on change) into corresponding ActiveX properties with each repsonse. The string format is the same: activeXProperty\;adapterProperty\;activeXProperty\;adapterProperty etc.
activex_attr_xinitparams;Init parameters that are used for creating an instance of the ActiveX control. Values are passed as semicolon separated string: property\;value\;property\;value etc.<br><br>The property is the name of the ActiveX control's property that is initialized with the corresponding value.
area_attr_foldable;The "folding"-function that is available by clicking on the title of the area can be switched off ("false"). "True" is the default.
area_attr_foldedprop;Name of adapter property that controls whether the content of the ROWAREA is folded (true) or displayed (false).<br><br>By using this property you can dynamically control the "folded"-status of the control by your adapter object.
area_attr_notabstop;The title of the area by default can be used by the user to hide/show the area's content. In order to also reach this title with the tab-key is is part of the normal tab-sequence of a page.<br><br>Set this property to "true" if you do not want to make the title reachable by tab-key. As consequnece hiding/showing will only be available by mouse-clicking on the title.
area_attr_paddingleft;Number of pixels between the left border and the area's content. Default is 5 pixels. 
area_attr_paddingright;Number of pixels between the right border and the area's content. Default is 5 pixels. 
area_attr_withbottomborder;See description of WITHLEFTBORDER property.
area_attr_withleftborder;The control normally renders a black border around its area. With the properties WITHLEFTBORDER, WITHRIGHTBORDER and WITHBOTTOMBORDER you can avoid this.<br><br>Reason behing: somtimes you want a ROWAREA/COLAREA to be used as "neighbour" of other ROWAERA/COLAREA controls. In this case one of the "neighbours" has to avoid the rendering of border lines - otherwise two border lines will be rendered.
area_attr_withrightborder;See description of WITHLEFTBORDER property.
area_attr_withtopborder;See description of WITHLEFTBORDER property. 
area_attr_withtoppadding;The control by default renders some blank vertical space (2 pixels) on top of its area. Reason: if you vertically arrange one ROW/COLAREA after the other then automatically some distance is put between.<br><br>By specifying "false" you can avoid this behaviour. "
backBttn;Back
breadcrumb_attr_breadcrumbprop;Name of the adapter property that represents the control on adapter side.<br><br>The property must be of name BREADCRUMBInfo. Please view the Java API Documentation for more information. <br>
button_attr_imageheight;Pixel height of image inside button.
button_attr_imagewidth;Pixel width of image inside button.
button_attr_invisiblemode;This property has three possible values:<br><br>(1) "invisible": the control is not visible without occupying any space.<br>(2) "disabled": the control is deactivated: it is "grayed" and does not show any roll over effects any more.<br>(3)"cleared": the control is not visible but it still occupies space. 
button_attr_method;Name of the adapter object's method that is called when the user presses the button.<br>Following JAVA coding conventions a method name typically starts with a non-capital character, e.g. "onSave" instead of "ONSave".
button_attr_nameprop;Name of adapter property that provides the text to be displayed inside the button. Typically buttons have static texts either defined by the property "name" or "textid". Via "nameprop" you can dynamically set the button's text by your application. Use the nameprop in cases the button's text should change dependent on your logic.<br><br>Example: you may want to define the button's text to reflect the next status the user can set to a business object.
button_attr_textstyle;CSS style definition that is directly passed into the text of this control.<br><br>With the style you can individually influence the text of the button. You can specify any style sheet expressions. Examples are:<br>font-weight: bold<br>color: #FF0000
buttonlist_attr_buttonlistprop;Name of the adapter property that rerpesents the control on adapter side.<br><br>The property must be of name BUTTONLISTInfo. Please view the Java API Documentation for more information. 
buttonlist_attr_pixeldistance;Pixel distance between the buttons that are rendered.
cancelBttn;Cancel
checkbox_attr_pixelwidth;Witdh of the distance between checkbox and label in pixel. 
checkbox_attr_valueprop;Name of adapter property that is represented by checkbox.<br><br>The property must be of type "boolean" or "Boolean" (or "String").
clienttree_attr_dynamicloading;If set to "true" then you indicate to the tree control that not all tree information may be loaded when initializing the tree (i.e. the tree collection on server side). As consequence the tree control will pass the "toggle-event" to the server - in case the subnodes of a certain nodes are not yet loaded.<br><br>In the case the toggle event is passed to the server, the method onToggle() is called inside the tree item.
clienttree_attr_imageclosedprop;Property of the tree item object that provides for the image URL which is shown for closed tree nodes. The value may be different from tree node to tree node -each tree node may have an own image.
clienttree_attr_imageopenedprop;Property of the tree item object that provides for the image URL which is shown for opened tree nodes or end tree nodes. The value may be different from tree node to tree node -each tree node may have an own image.
clienttree_attr_oncontextmenumethod;Name of the method on adapter level that is called if the user presses the right mouse button in an empty area of the client tree.<br><br>Note: if the user presses right mouse button on a node then the method "reactOnContextMenuRequest()" is called in the item object.
clienttree_attr_selectionvisible;If set to "true" then the clicked item will also marked with a certain background color. The background color is defined by the style sheet settings.
clienttree_attr_treeclassprop;Name of adapter property that passes back the name of a style sheet class that is taken to render the client tree's background area. - Similar to the property TREESTYLEPROP, but now a style class is passed, not the style itself.
clienttree_attr_treecollectionprop;Name of adapter property representing the tree of items on server side.<br><br>The property must be of type "TREECollection". Please view in Java API Documentation for more information.
clienttree_attr_treestyle;Style (following cascading style sheet definitions) that is directly passed to the background area of the client tree. You can manipulate e.g. the colour of the tree's background.<br><br>The style can also be set dynamically by specifying the property TREESTYLEPROP.
clienttree_attr_treestyleprop;Property of the adapter object that dynamically provides for a style value that is passed to the control's area (background of the client tree). You can as consequence e.g. define the background-colour of the tree dependent on your server side logic.
clipboardicon_attr_type;Clipboard action that is associated with the icon. Either "export" to clipboard or "import" from clipboard.
clipboardicon_attr_valueprop;Name of adapter property into which the clipboard content of the client is passed or from which the clipboard content on client side is filled (dependent on property "type").
colarea_attr_contenttablestyle;CSS style that is applied to the content are of the COLAREA control.
colinfo_attr_visibleprop;Name of property that tells if the corresponding column that is associated with the colinfo-control is displayed or not. Property must be of type "boolean".
coltable0_attr_widthprop;Name of adapter property that dynamically defined the height of the control. Must return a valid width.
column_attr_convertspaces;If switched to "true" then all spaces inside the text that is rendered into the column are converted to non breakable spaces. <br><br>Use this option if you have "meaningful" spaces inside the values you return from the server adapter object, e.g. if outputting some ASCII protocol inside a column.
column_attr_cuttextline;If switched to "false" then the content of the column is broken if it excceeds the column's width definition. Default is "true" i.e. if the content is too big for the column cell then it is cut.
column_attr_imageprop;Name of the property of the row item object passing back an image URL. The image is rendered at the very left of the column's area - in front of the text (PROPERTY property definition).
column_attr_linkmethod;Name of a method within the row item object that is called if user clicks the column's text. 
column_attr_property;Property of the row item object that represents the column's content.<br><br>The content typically is straight text but can also be "complex HTML".
column_attr_textclassprop;Name of the property of the row item object that defines a style class to be used for rendering the content.<br><br>You can set up a limited number of style classes inside your style sheet definition - and dynamically reference them per grid cell.
column_attr_textstyleprop;Name of the property of the row item object that passes back a style-string that is used for rendering the column's content.<br><br>As consequence you can indiviudally assign a CSS-style to each cell of your text grid.
combo_attr_renderasfield;If set to "true" then the combo box is rendered like a FIELD control that offers valid value support.<br><br>Default is "false".<br><br>The normal translation of COMBODYN2 into HTML renders an HTML-select control. This control has certain limitations inside Internet Explorer: it only offers a very reduced set of styles to manipulate its look and feel and - much worse: it always occupies z-index "0" i.e. if you other areas overlapping the COMBODYN2 area then COMBODYN2 is always on the top. This is quite ugly if e.g. a menu is opened and parts of the menu overlap a COMBODYN2 control.
combo_attr_size;Number of rows that are displayed inside the control. If specified as "1" (default) then the control is rendered as combo box - if ">1" then the control is rendered as multi line selection.
combo_attr_validvaluesprop;Adapter property that provides for the valid values that are available as selectable options.<br><br>The adapter property must be of type "COMBODYNValidValues".
combooption_attr_name;Name that is displayed as selectable option. Either use the NAME property to specify the text in a "hard" way or use the TEXTID property to define the text in a language dependent way.
combooption_attr_textid;Text ID that is used for this option. The text id is passed to the multi language management in order to find a language dependent text.
combooption_attr_value;Actual value of the option that is passed into the adapter property specified by VALUEPROP inside the COMBOFIX control.
csvcolumn_attr_alignsprop;Name of adapter property provding a semicolon-separated string containing the horizontal alignment of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"left\"center\;right""
csvcolumn_attr_backgroundsprop;Name of adapter property provding a semicolon-separated string containing the background color of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"\"#C0C0C0\;#FF0000""
csvcolumn_attr_linkmethodsprop;Name of the property of the row item object that passes back (comma separated) names of row item methods. The corresponding columns will show the text as method links. On click the provided row item method is called.
csvcolumn_attr_proprefsprop;Name of adapter property provding a semicolon-separated string containing the row item properties that are internally used to build up the value string.<br><br>The property names are used for sorting: if the user invoke the sorting of the grid by clicking on the corresponding icons inside the title cell then this column needs to be associated with an internal property that is used for sorting.<br><br>Example: "firstName\"lastName\;street""
csvcolumn_attr_titlesprop;Name of adapter property provding a semicolon-separated string containing the titles to be displayed.<br><br>Example for a value that is passed back by the property:<br>"First Name\;Last Name\;Street""
csvcolumn_attr_valuesprop;Name of row item property that passes back the content of the cells - as semicolon-separated string.
csvcolumn_attr_widthsprop;Name of adapter property provding a semicolon-separated string containing the widths of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"100\;200\;100%""
csvcolumn_attr_withgridcolheaders;Flag that indicates if the user can resize column widths and re-order columns by drag and drop. Default is false. If set to true the corresponding adapter program must register as "column change event" listener. Use method TEXTGRIDCollection.registerGridColHeaderChangeListener for that.
dateinput_attr_align;
dateinput_attr_datatype;By default, the DATEINPUT control is managing a day. By explicitly setting a datatype you can define that the control is managing a day and time. In the first use type CDATE within your adapter program - in the second case use type CTIMESTAMP.
dateinput_attr_fromprop;Name of an adapter property to provide for a lower limit. Property must return an object of type CDATE. The value is used for client side validation of user input.
dateinput_attr_infoprop;Name of an adapter property to provide for style information that is used inside the date popup. The property must return an object of type DATEINPUTInfo.
dateinput_attr_secondsvisprop;Name of an adapter property to provide for a boolean that indicates if to show additional seconds. This property make sense only if property DATATYPE is set to "daytime".
dateinput_attr_toprop;Name of an adapter property to provide for a upper limit. Property must return an object of type CDATE. The value is used for client side validation of user input.
dbcheckbox_attr_align;Explicit Alignment
dbcheckbox_attr_colspan;Number of columns occupied by this control.
dbcheckbox_attr_displayonly;If set to "true", the displayed checkbox can not be changed. The default is "false".
dbcheckbox_attr_flush;Flush reaction as described in "Common Rules"
dbcheckbox_attr_helpid;Identifier that is used for building the URL of the online help page. Please refer to "Online Help Management" for details.
dbcheckbox_attr_querycolumn;Name of the column in the query to that the filter criteria belongs to. This column may differ from the value help table/column (properties VALUEHELPTABLE, VALUEHELPCOLUMN). The name is used to build a SQL string in method "toSQLString".
dbcheckbox_attr_rowspan;Number of rows occupied by this control.
dbcheckbox_attr_valign;Explicit Alignment
dbcheckbox_attr_valueprop;Property that returns a DBCHECKBOXInfo-instance. With class DBUtil this instance provides for a convenient way to append the filter value to query string.
dbcheckbox_attr_width;Width of the control in pixels or as percentage value. This does not change the size of the "box" of the CHECKBOX, but the size of the column in which the CHECKBOX is located.
dbcombo_attr_align;Explicit Alignment
dbcombo_attr_colspan;Number of columns occupied by this control.
dbcombo_attr_combostyle;Explicit style information passed to the DBCOMBO.<br><br>Example: if you want the text inside the DBCOMBO to be right aligned, define "text-align: right".<br>
dbcombo_attr_datasource;Logical identifier of the data source to use. This name is passed to the connection provider in method "IDBQUERYConnectionProvider.getDBConnection".
dbcombo_attr_displayonly;If set to "true", the DBCOMBO will not be accessible for input. It is just used as an output field.
dbcombo_attr_flush;Flushing behaviour\\; please view "Common Rules" for details
dbcombo_attr_helpid;Identifier that is used for building the URL of the online help page. Please refer to "Online Help Management" for details.
dbcombo_attr_querycolumn;Name of the column in the query to that the filter criteria is belongs to. This column may differ from the value help table/column (properties VALUEHELPTABLE, VALUEHELPCOLUMN). This name is used to build a SQL string in method "toSQLString".
dbcombo_attr_rowspan;Number of rows occupied by this control.
dbcombo_attr_size;Integer value that defines the number of lines being displayed. If the SIZE is set to "1", the selection is displayed as combo box. If it is set to ">1", it is displayed as multi line selection.
dbcombo_attr_valign;Explicit Alignment
dbcombo_attr_valuehelpcolumn;Name of the column from there the list of valid values can be read.
dbcombo_attr_valuehelpcolumndescr;Name of a column where an additional description of the valid values is stored. The name must identify a column inside the "value help table" (property VALUEHELPTABLE).
dbcombo_attr_valuehelptable;Name of the table from there the list of valid values can be read.
dbcombo_attr_valueprop;Property that returns a DBCOMBOInfo -instance. This instance provides for the combo box options that are read from database as well as for a convenient way to append the filter value to query string.
dbcombo_attr_width;Width of DBCOMBO in pixels or as percentage value.
dbfield_attr_align;Explicit Alignment
dbfield_attr_colspan;Number of columns occupied by this control.
dbfield_attr_datasource;Logical identifier of the data source to use. This name is passed to the connection provider in method "IDBQUERYConnectionProvider.getDBConnection".
dbfield_attr_datatype;By default, the DBFIELD is managing its content as a string. By the DATATYPE property, force the type of the data that is represented. As a consequence the DBFIELD is checking the data during input (e.g. if the DATATYPE is "int", it is not allowed to enter alphabetic characters) and adds a logic to transfer the data into various output formats (e.g. if the DATATYPE is "date", the date is formatted into the right date format).
dbfield_attr_displayonly;If set to "true", the DBFIELD will not be accessible for input. It is just used as an output field.
dbfield_attr_fieldstyle;Explicit style information passed to the DBFIELD.<br><br>Example: if you want the text inside the DBFIELD to be right aligned, define "text-align: right".<br>
dbfield_attr_flush;Flushing behaviour, please view "Common Rules" for details
dbfield_attr_helpid;Identifier that is used for building the URL of the online help page. Please refer to "Online Help Management" for details.
dbfield_attr_length;Width of DBFIELD in amount of characters. WIDTH and LENGTH should not be used together.
dbfield_attr_querycolumn;Name of the column in the query to that the filter criteria is belongs to. This column may differ from the value help table/column (properties VALUEHELPTABLE, VALUEHELPCOLUMN). This name is used to build a SQL string in method "toSQLString".
dbfield_attr_rowspan;Number of rows occupied by this control.
dbfield_attr_valign;Explicit Alignment
dbfield_attr_valuehelpcolumn;Name of the column from there the list of valid values can be read.
dbfield_attr_valuehelpcolumncond;Name of the column inside the "value help table" (property VALUEHELPTABLE) that defines the "to-one" dependency to another DBFIELD control.
dbfield_attr_valuehelpcolumndescr;Name of a column where an additional description of the valid values is stored. The name must identify a column inside the "value help table" (property VALUEHELPTABLE).
dbfield_attr_valuehelptable;Name of the table from there the list of valid values can be read.
dbfield_attr_valueprop;Property that returns a DBFIELDInfo-instance. This instance provides for the value help read from database as well as for a convenient way to append the filter value to query string.
dbfield_attr_width;Width of DBFIELD in pixels or as percentage value.
dbparamdoublevalue_attr_operator;Name of the operator to use to append the value to WHERE clause of the SQL statement. The operator specified here must work on two operands. At the moment "between" and "not between" are supported.
dbparamdoublevalue_attr_querycolumn;Name of the column the DBPARAMSINGLEVALUE control refers to. This name is used to add the parameters value to the SQL statement prior the reports execution. The SQL statement is defined in the property QUERY of the DBQUERY control.<br>Example:<br>If you define the SQL statement like "SELECT STREET, ZIPCODE, TOWN FROM ADDRESS" in property QUERY of the DBQUERY control you can specify any column name of table "ADDRESS" here.<br>
dbparamdoublevalue_attr_value1;The first parameter value. You can either enter a fixed value or you can specify the name with that a value can be looked up from the session context when executing the report. <br>Example:<br>If you enter "$FROMDATE$" here, the DBPARAMSINGLEVALUE will try to lookup a value bound to the name "FROMDATE" from the session context. An exception will be raised if nothing is found.<br>
dbparamdoublevalue_attr_value2;The second parameter value.
dbparamsinglevalue_attr_operator;Name of the operator to use to append the value to WHERE clause of the SQL statement.
dbparamsinglevalue_attr_querycolumn;Name of the column the DBPARAMSINGLEVALUE control refers to. This name is used to add the parameters value to the SQL statement prior the reports execution. The SQL statement is defined in the property QUERY of the DBQUERY control.
dbparamsinglevalue_attr_value;The parameter value. You can either enter a fixed value or you can specify the name with that a value can be looked up from the session context when executing the report. 
dbquery_attr_showpdf;If set to "true" then a PDF icon is rendered in the right top corner of the control. When the user clicks on the icon then the report is automatically rendered as pdf - and the result will show up in a popup window.<br><br>Pay attention: if setting this property to "true" then you also have to choose a special constructor when creating the REPORTInfo instance on server side, in which the instance of the model is passed as argument.
dbquery_attr_showprintversion;If switched to "true" then a small print icon will appear right from the grid. The print icon opens up a modal popup from which the HTML produced inside the report can be directly sent to the printer.<br><br>Pay attention: if specifying "true" then the adapter property holding the REPORTInfo object must create the REPORTInfo instance with passing "this" in the constructor.
dbradiobutton_attr_align;Explicit Alignment
dbradiobutton_attr_colspan;Number of columns occupied by this control.
dbradiobutton_attr_displayonly;If set to "true", the displayed checkbox can not be changed. The default is "false".
dbradiobutton_attr_flush;Flush reaction as described in "Common Rules"
dbradiobutton_attr_helpid;Identifier that is used for building the URL of the online help page. Please refer to "Online Help Management" for details.
dbradiobutton_attr_querycolumn;Name of the column in the query to that the filter criteria belongs to. This column may differ from the value help table/column (properties VALUEHELPTABLE, VALUEHELPCOLUMN). The name is used to build a SQL string in method "toSQLString".
dbradiobutton_attr_rowspan;Number of rows occupied by this control.
dbradiobutton_attr_valign;Explicit Alignment
dbradiobutton_attr_valueprop;Property that returns a DBRADIOBUTTONInfo -instance. With class DBUtil this instance provides for a convenient way to append the filter value to query string.
dbradiobutton_attr_width;Width of the control in pixels or as percentage value. This does not change the size of the "box" of the CHECKBOX, but the size of the column in which the CHECKBOX is located.
dbselectoption_attr_align;Explicit Alignment
dbselectoption_attr_colspan;Number of columns occupied by this control.
dbselectoption_attr_datasource;Logical identifier of the data source to use. This name is passed to the connection provider in method "IDBQUERYConnectionProvider.getDBConnection".
dbselectoption_attr_datatype;The DBSELECTOPTION control manages multiple "operator-value"-pairs. <br>By default, each is managed as string. By the DATATYPE property, force the type of the data that is represented. As a consequence the DBFIELD controls inside the "operator-value"-popup is checking the data during input (e.g. if the DATATYPE is "int", it is not allowed to enter alphabetic characters) and adds a logic to transfer the data into various output formats (e.g. if the DATATYPE is "date", the date is formatted into the right date format). In addition it displays a standard "value help" popup dialog for some data types (e.g. if the DATATYPE is "date" then automatically a date input dialog pops up if invoking "value help").
dbselectoption_attr_displayonly;If set to "true", the DBFIELD will not be accessible for input. It is just used as an output field.
dbselectoption_attr_fieldstyle;Explicit style information passed to the DBFIELD.<br><br>Example: if you want the text inside the DBFIELD to be right aligned, define "text-align: right".<br>
dbselectoption_attr_flush;Flushing behaviour, please view "Common Rules" for details
dbselectoption_attr_helpid;Identifier that is used for building the URL of the online help page. Please refer to "Online Help Management" for details.
dbselectoption_attr_length;Width of DBFIELD in amount of characters. WIDTH and LENGTH should not be used together.
dbselectoption_attr_querycolumn;Name of the column in the query to that the filter criteria belongs to. This column may differ from the value help table/column (properties VALUEHELPTABLE, VALUEHELPCOLUMN). This name is used to build a SQL string in method "toSQLString".
dbselectoption_attr_rowspan;Number of rows occupied by this control.
dbselectoption_attr_valign;Explicit Alignment
dbselectoption_attr_valuehelpcolumn;Name of the column from where the valid values of the DBSELECTOPTION control are stored.
dbselectoption_attr_valuehelpcolumndescr;Name of a column where an additional description of the valid values is stored. The column must be inside the "value help table" (property VALUEHELPTABLE).
dbselectoption_attr_valuehelptable;Name of the table from where the valid values of the DBSELECTOPTION control are stored.
dbselectoption_attr_valueprop;Property that returns a DBSELECTOPTIONInfo -instance. This instance provides for the value help read from database as well as for a convenient way to append the filter value to query string.
dbselectoption_attr_width;Width of DBFIELD in pixels or as percentage value.
dlmenu_attr_menuprop;Name of the adapter property that represents the control on server side.<br><br>The property must be of type "DLMENUInfo". See detailed information inside the Java API Documentation.
dlmenu_attr_onlyoneline;If set to "true" then the DLMENU control only contains its top line - there is no second line below. Default is "false".
dropicon_attr_draginfo;String containing any kind of application data to identify the source DROPINFO control within a drag and drop process. Use property DROPINFOPROP to return this data on runtime.
dropicon_attr_draginfoprop;Name of an adapter property that provides for information that is passed to the adapter when dropping this control over another DROPICON. Do not use this property (or property DROPINFO respectively) if you do not want the user to drag this control. <br><br>The server side property needs to be of type "String".
dropicon_attr_dropinfo;String containing any kind of application data to identify the source DROPINFO control within a drag and drop process. Use property DROPINFOPROP to return this data on runtime.
dropicon_attr_dropinfoprop;Name of an adapter property to that the "drag info" of the dragged DROPICON control is set. Do not use this property if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). <br><br>The server side property needs to be of type "String".
dropicon_attr_dropmethod;Method of your adapter object that is executed if the user is dragging another DROPICON control over this control and drops it there. 
dynavis_attr_valueprop;Name of adapter property that defines if the area is visible ("true") or invisible ("false"). Must be of type "boolean" / "Boolean".
field_attr_align;
field_attr_bgcolorprop;Property of the adapter object to provide the background color of the control.
field_attr_datatype;By default, the FIELD control is managing its content as string. By explicitly setting a datatype you can define that the control...<br><br>...will check the user input if it reflects the datatype. E.g. if the user inputs "abc" into a field with datatype "int" then a corresponding error message will popup when the user leaves the field.<br><br>...will format the data coming from the server or coming form the user input: if the field has datatype "date" and the user inputs "010304" then the input will be translated into "01.03.2004" (or other representation, dependent on date format settings).<br><br>In addition valeu popups are offered for the user automatically for some datatypes: e.g. when specifying datatype "date" the automatically the field provides a calendar input popup.<br><br>Please note: the datatype "float" is named a bit misleading - it represents any decimal format number. The server side representation may be a float value, but also can be a double or a BigDecimal property.
field_attr_decimaldigits;Specifies the number of displayed decimal digits. If using this feature then the DATATYPE property must be set to 'float'.
field_attr_decimaldigitsprop;Property of the adapter that passes back information how many decimal digits are to be displayed. If using this feature then the DATATYPE property must be set to 'float'.
field_attr_fgcolorprop;Name of adapter property that passes back a color value (e.g. "#FF0000" for red color). The color value is used as text color in the control. - The background color is automatically chosen dependent from the text color: for light text colors the background color is black, for dark text colors the color is default. Use BGCOLORPROP to choose both - text and background color.
field_attr_length;Width of FIELD in amount of characters. WIDTH and LENGTH should not be used together. Note that the actual size of the control depends on the font definition if using the LENGTH property.
field_attr_maxlength;Maximum number of characters that a user may enter. This property is not depending on the LENGTH property - please do not get confused by the similar naming. MAXLENGTH has nothing to do with the optical sizing of the control but only with the number of characters you may input.
field_attr_maxlengthprop;Name of adapter property that passes back the maximum number of characters that a user may enter. Consider to use MAXLENGTH to define this number in a static way.
field_attr_password;If set to "true", each entered character is displayed as a '*'.
field_attr_popupcombowidth;Pixel width of the standard "openIdValueCombo" popup dialog. Default is field width or at least 150 pixel.
field_attr_popupicon;URL of image that is displayed inside the right corner of the field to indicate to the user that there is some value help available.. Any image type (.gif, .jpg, ...) that your browser does understand is valid.<br><br>Use the following options to specify the URL:<br>(A) Define the URL relative to your page. Your page is generated directly into your project's folder. Specifiying "images/xyz.gif" will point into a directory parallel to your page. Specifying "../HTMLBasedGUI/images/new.gif" will point to an image of a neighbour project.<br>(B) Define a complete URL, like "http://www.softwareag.com/images/logo.gif".
field_attr_popupinputonly;Boolean property that control if a field with POPUPMETHOD defined is still usable for keyboard input. If "false" (= default) then the user can input a value either directly via keyboard or by using the popupmethod's help. If set to "true" then no keyboard input is possible - but only selection from the popup-method's help.
field_attr_popupmethod;Name of the adapter's method that is called when the user requests value help by pressing F4 or F7 or by clicking into the FIELD with the right mouse button. See at chapter 'Popup Dialog Management' for more details. If the POPUPMETHOD is defined, a small icon is shown inside the field to indicate to the user that there is some value help available.
field_attr_popuponalt40;Value help in a field is triggered either by clicking with the mouse or by pressing a certain key inside the field. The "traditional" keys are "cusrsor-down", "F7" or "F4". Sometimes you do not want to mix other "cursor-down" behaviour (e.g. scrolling in lists) with the value help behaviour. In this case switch this property to "true" - and the value help will only come up anymore when "alt-cursor-down" is pressed.
field_attr_popupprop;Name of an adapter's boolean property to provide information whether a POPUPMETHOD is available (true) or not (false). This feature is used in scenarios in which a FIELD offers e.g. value help or not, depending on business logic inside the adapter.
field_attr_textidmode;If using property "valuetextprop" then a field knows an id and a text for a certain value. There are three types of display: either both are shown together, separated by an "-" (e.g. "id - text"). Or only text is shown or only the id is shown. If not defined at all then the system's default text id-mode will be chosen. The default mode can be defined as part of the CIS session context.
field_attr_touchpadinput;Boolean property that decides if touch pad support is offered for the FIELD control. The default is "false". If switched to "true" then you can input data into the field via a touch pad. As consequence you can use this control for making inputs through a touch terminal.
field_attr_uppercase;If "true" then all input is automatically transferred to upper case characters.
field_attr_validation;Regular expression against which the content of the field is checked on client side when the user changes the field. If the validation fails then an error message popup up and informs the user about the wrong input.
field_attr_validationprop;Property out of which the regular expression is dynamically read. Works the same way as VALIDATION but in a dynamic way.
field_attr_validationuserhint;If a client side validation fails due to wrong user input then an error popup is opened. If you define a hint inside this property then the hint is output to the user in order to tell in which way to input the value. The hint is not language dependent.
field_attr_validationuserhintprop;If using validation expressions (either property "validation" or "validationprop") then a popup comes up if the user inputs wrong values into a field. Inside this popup a certain text may be added in order to explain to the user what he/she did not correctly input. This text can be either statically defined or dynamically - by using this property reference.
field_attr_valuetextprop;Name of the adapter property that provides a "human understandable" description for the value: in some cases you enter an id into a FIELD but want to display the id and a description to the user. At runtime, the values provided by the VALUEPROP- and the VALUETEXTPROP-property are combined into one text (string) that is returned into the FIELD.
field_desc_valuehelp;Value help for field.
fileupload_attr_cfileprop;Name of adapter property in which the client's file name is passed at upload time.
fileupload_attr_method;Method called inside the adapter when a file is uploaded. The file's data is available at the point of time this method is called.
fileupload_attr_sfileprop;Name of adapter property, in which at upload time - the name of the file is written - which is a copy of the client file but in the server's file system. Please pay attention that this file name is a unique one and has nothing to do with the client's file name!
finishBttn;Finish
flexgrid_attr_infoprop;Name of the adapter property that provide a FLEXGRIDInfo object that serves the control on server side. The structure of columns is defined within this object using a JAVA API.
flexgrid_attr_selectprop;Name of the item property that indicates if a grid line is selected.
flexgrid_attr_showemptylines;Flag that indicates if a line that is not used at the moment is visible. Example: if set to false a grid with rowcount of ten and collection size of seven the last three remaining lines become invisible.<br><br>Default is true.
flexline_attr_infoprop;Name of the adapter property that provides the server side information for this control. The adapter property must be of type "FLEXLINEInfo". Inside the property the sequence of controls is defined.
flexline_attr_withborder;Flag that indicates if a border is drawn between the controls that are rendered inside the FLEXLINE control. Default is "false", i.e. no border is drawn.
googlemap_attr_apikeypagename;Name of the Maps API Key page. Example: mygooglemapsapikey.html. Keep this file within the project directory (directory within the CIS HTML pages are kept). The GOOGLEMAP-control expects this file within certain Javascript includes and content. Have look into chapter "Google Map - Before You Start" within the Developers Guide 
googlemap_attr_controltype;Lets you toggle between a small and large pan/zoom control 
googlemap_attr_infotextprop;Name of adapter property that provides for an additional help text. If used the text is displayed within an info window that points to the center of the map. 
googlemap_attr_latitudeprop;Name of adapter property that returns the latitude within decimal format. Example: in order to display Palo Alto (United States) return "34.4419". Return "1000.0" in order to hide the map.
googlemap_attr_longitudeprop;Name of adapter property that returns the longitude within decimal format. Example: in order to display Palo Alto (United States) return "-122.1419". Return "1000.0" in order to hide the map. 
googlemap_attr_mapmode;Lets you toggle between map types (e.g., Map and Satellite) 
googlemap_attr_pixelheight;Height of the control in pixel. Please note: Google inserts a certain margin around the visible map (about 20 pixel). Use this property to specify the overall height. The height of the visible map will be (some pixel) less. 
googlemap_attr_pixelwidth;Width of the control in pixel. Please note: Google inserts a certain margin around the visible map (about 20 pixel). Use this property to specify the overall width. The width of the visible map will be (some pixel) less. 
googlemap_attr_zoomlevelprop;Name of adapter property that provides for the zoom level (integer). Default value is 4. 
grid_attr_focusprop;Name of property of the item objects - representing the individual rows of the collection - that indicates if the row receives the keyboard focus.<br><br>Must be of type "boolean"/ "Boolean".<br><br>If more than one lines are returning "true" the first of them is receiving the focus.
gridcolheader_attr_comment;Comment without any effect on rendering and behaviour. The comment is shown in the layout editor's tree view.
gridcolheader_attr_title;Text that is shown as tooltip for the control.<br><br>Either specify the text "hard" by using this TITLE property - or use the TITLETEXTID in order to define a language dependent literal.
gridcolheader_attr_titletextid;Text ID that is passed to the multi lanaguage management - representing the tooltip text that is used for the control.
gridcolheader_attr_width;Width of the control.<br><br>There are three possibilities to define the width:<br><br>(A) You do not define a width at all. In this case the width of the control will either be a default width or - in case of container controls - it will follow the width that is occupied by its content.<br>(B) Pixel sizing: just input a number value (e.g. "100").<br>(C) Percentage sizing: input a percantage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element of the control properly defines a width this control can reference. If you specify this control to have a width of 50% then the parent element (e.g. an ITR-row) may itself define a width of "100%". If the parent element does not specify a width then the rendering result may not represent what you expect.
gridcolheader_attr_withsorticon;Flag that indicates if a small sort indicator is shown within the right corner of the control. Default is TRUE.
hdist_attr_width;Width of the HDIST control, either in pixels or as percentage value.<br><br>If no width is defined then a default width of 2 pixels is assigned.
helpicon_attr_helpid;Help id that is passed to the online help management when the user clicks onto the icon.
hotkey_attr_altkey;If set to "true" then the alt-key needs to be pressed in order to invoke this hotkey. Default is "false".
hotkey_attr_ctrlkey;If set to "true" then the ctrl-key needs to be pressed in order to invoke this hotkey. Default is "false".
hotkey_attr_keycode;Key Code of the key that is pressed by the user.<br><br>Each keystroke onto the keyboard is associated with a key code that represents the character that is currently input.<br><br>Examples:<br>Return ==> 13<br>"a" ==> 65<br>"b" ==> 66<br>...<br>F2 ==> 113<br>F3 ==> 114"
hotkey_attr_shiftkey;If set to "true" then the shift-key needs to be pressed in order to invoke this hotkey. Default is "false".
hsplit_attr_heighttop;Definition of the initial height of the top split area.<br><br>The height either is a pixel value ("100") or a percentage value ("50%").<br><br>You can also define the height dynamically by your adapter - see documentation for HEIGHTTOPPROP property.
hsplit_attr_heighttopprop;Name of adapter property that specifies the height of the top split area.<br><br>The adapter property must return either a pixel value ("100") or a percentatge value ("50%").
icon_attr_image;URL that points to the image that is shown as icon.<br><br>The URL either is an absolute URL or a relative URL. If using a relative URL then be aware of that the generated page is located directly inside your project's directory.<br><br>Example: "images/icon.gif" points to an icon in an images-folder that is parallel to the page itself. "../HTMLBasedGUI/images/new.gif" point to a URL that is located inside a different project.
icon_attr_imageheight;Pixel height of the image that is shown inside the icon. If not defined then the icon is rendered with its normal height.
icon_attr_imageinactive;If the visibility is dynamically controlled by using the INVISIBLEPROP then there are two ways the icon reacts if the corresponding property passes back "false".<br><br>If you want the icon to switch into an inactive status then define inside this property the URL of the image that is the inactive counter part to the normal icon image. Maybe the image is a grayed version of the normal icon image.<br><br>If you do not define a value for this property then the icon is made invisible.
icon_attr_imagewidth;Pixel width of the image that is shown inside the icon. If not defined then the icon is rendered with its normal width.
icon_attr_withdistance;If set to "true" then 2 pixels of distance are kept on the left and on the right of the icon.<br><br>Reason behing: if arranging several icons inside one table row (ITR, TR) then a certain distance is kept between the icons when this property is set to "true".
iconlist_attr_additionaltextposition;Position of the text that is displayed inside the control. Use method ICONLISTItem.setName to set the text.
iconlist_attr_cellspacing;An icons of the ICONLIST control is embedded into an internal cell. The CELLSPACING property defined the number of pixels that are kept between the icon an the border of this cell.<br><br>Use the CELLSPACING in order to define a certain distance each icon keeps from the next item.
iconlist_attr_cellstyle;Style definition (following CSS style sheet definitions) that is used for each cell area of the ICONLIST control in which an icon is kept.
iconlist_attr_iconlistprop;Name of adapter property representing the control on server side.<br><br>The property must be of type ICONLISTInfo. Read further information inside the Java API Documentation.
iconlist_attr_tablestyle;Style definition (following CSS style sheet definitions) that is used for the background area of the ICONLIST control.
iconlist_attr_vertical;Direction of the icon list.<br><br>If not specified (or set to "true") then the icons are arranged in one column, one below the other. If specified as "false" then the icons are arrange in one row, one aside the other.
imageout_attr_valueprop;Name of adapter property that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
innerdiv_attr_leftdistance;If set to "true" then a small distance (3px) is kept between the left border of the control and its content. Default is "false".
innerdiv_attr_rightdistance;If set to "true" then a small distance (3px) is kept between the right border of the control and its content. Default is "false".
itr_attr_align;Alignment of the content of the ITR row.<br><br>Background: the ITR as independent table row renders a table into its content area. Inside this table a row is opened in which the controls are placed.<br><br>This table normally is starting on the left of the ITR row. With this ALIGN property you can explicitly define the alignement of the table.
label_attr_asheadline;If set to true, the label has a dark background and the text is written in white (if using the standard style sheet).<br><br>You may use this rendering style is you use labels as headlines of control grids (ROWTABLEAREA2 control).
label_attr_asplaintext;If set to true, no white line is drawn under the label text (if using the standard style sheet).<br><br>You may use this rendering style if the label is used to name a RADIOBUTTON control or a CHECKBOX control.
label_attr_cuttext;Boolean property defining the rendering if the text of the label does not fit into the defined width. If "true" then the text is cut - the part that does not fit is hidden. If "false" then the browser opens a second line. <br><br>Default is "false".
menu_attr_menucollectionprop;Name of adapter property that represents the menu's item hierarchy on server side.<br><br>The property must be of type "TREECollection". Each menu item is represented by a tree node (subclassed from "NODEInfo") within the collection.
menu_attr_toggleimage;URL of the image that is shown on the right end of a menu item, if this item contains subitems. If not explicitly defined then a default icon is used.
menu_attr_toggleimageprop;Name of adapter property that provides a URL-string that defines the toggle image. The toggle icon is shown on the right end of a menu item that has subitems.
menubutton_attr_menuposition;above if the menu should popup above the base menu button - below if the menu should popup below the base menu button.<br><br>The default is below.
methodlink_attr_valueprop;Name of adapter property providing the text that is shown as link.
mfcasaframe_attr_withownborder;Flag that indicates if started pages show an own border. Default is false.
mfpageactivitytimeout_attr_activitytimeout;Time in seconds after which the application is called if there is no user interaction (e.g. a mouse click) within this period.
mfpageactivitytimeout_attr_method;Name of adapter method that is called after a period of user inactivity. If the method does not exist for the adapter of the target frame then the same happens "as usual". The data of the target frame is synchronized and the standard method "processAsDefault" is called.
mfpageactivitytimeout_attr_target;Id of the frame within that the method is invoked.
mfwpactivefunctions_attr_control;Defines how the MFWPACTIVEFUNCTIONS frame displays the list of started pages. You can either use a STRIPSEL or TABSTRIP control. Default is "tabstrip".
mfwpbootstrapinfo_attr_defaultcontentpage;The workplace consists out of several frames, one of it the content frame. If there is no active activity in the workplace then the defaultContentPage is displayed inside the content frame. You can use this in two ways:<br>(1) Either create one "background page" which always is shown in an "empty" workplace. <br>(2) Or create one "background page" which the workplace opens by default. E.g. you want in a start-workplace to first present to the user a logon page.<br>EXAMPLE: "/HTMLBasedGUI/empty.html"
mfwpbootstrapinfo_attr_mfworkplaceeventlistener;Use this interface to react on workplace events.<br><br>(1) Create an implementation of this interface<br><br>(2) Use method <code>MFWorkplaceInfo.registerMFWorkplaceEventListener</code> to register your class<br><br>(3) Use method <code>NODEInfo.setDropInfo</code> on each tree item to be able to drag that item <br><br>Step two and three are typically done within the "bootstrap info provider"-class <br><br>A CISworkplace is a certain arrangement of frames in a multi frame page. The "functions"-frame (MFWPFUNCTIONS) holds the available functions to be selected by the user (click with the left mouse Button). In addition you can provide for right mouse button menu or drag and drop within the function tree. With that you may allow users to add/remove/shift menu items (personalization).
mfwpbootstrapinfo_attr_showdustbin;Flag that indicates wether the dustbin (have a look at the DEMO WORKPLACE) is shown or not.<br>Boolean value, default is false.
mfwpbootstrapinfo_attr_synchtabnavigation;Set flag that decides if the tree "on the left" is synchronized with the tab navigation "on the top". If the user selects an opened activity in the tab strip then the corresponsding tree node and topic is shown as consequence.<br> Pay attention: the base of the synchronization is the naming of nodes. There is currently no naming concept beyond (that e.g. assigns ids to nodes). Make sure, your tree nodes are set in a way that each one holds a unique name. Use the tabText (setTabText) in order to make nodes unique!<br>true ==> synchronization is done\; false ==> synchronization is not done\;<br>default is false.
mfwpbootstrapinfo_attr_targetnameofresizableleftpart;The workplace may contain a favourite list. At the bottom of the favourite list there are some items by which you can influence the size of the corresponding left part of the workplace. The name of the target frame to be resized is passed with this method.
mfwpbootstrapinfo_attr_withcloseallwindowsicon;Flag that indicates whether the CloseAllWindowsIcon is shown in the workplace or not.<br>Boolean value, default is false.
mfwpbootstrapinfo_attr_withtakeouttopopup;Flag that indicates 
mfwpbootstrapinfo_attr_workplacestylesheet;The stlye sheet which is used for the left and top frame of the workplace. If no style sheet is specified then the workplace adapts to the standard style sheet which is kept in the CISsession context. You typically want to use one fix child for a workplace - because the workplace is typically embedded in some other frames arranging some graphics/etc. around, and you do not want the workplace colour's to change independent from this.<br>EXAMPLE: "/cis/styles/XYZ_STLYE.css"
mfwpcallback_attr_class;Command that is executed if the node is selected.
mfwpcallback_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpcallback_attr_iconurl;Icon of the node. Must be something like "../project/... - the workplace itself is running in project "HTMLBasedGUI", you have to move up first as consequence.
mfwpcallback_attr_text;Text of the item.
mfwpfolder_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpfolder_attr_opened;Flag that indicates whether the folder is opened or not.<br>Boolean value
mfwpfolder_attr_text;Text of the tree node folder.
mfwpfunctions_attr_bootstrapclass;Name of the class that is responsible for passing the initial workplace configuration. The class must support interface "IMFWorkplace2" and must support a constructor without parameters.<br><br>When being displayed the workplace creates an instance of this class and asks for an object that represents the workplace setup. Have a look into the javadoc-documentation for interface "IMFWorkplace2" for more information.
mfwpfunctions_attr_bootstrapinfourl;URL to an .xml file that holds the initial workplace configuration. Do not use BOOTSTRAPINFOURL and BOOSTRAPCLASS at the same time!<br> Use /project/directory/doc.xml as syntax, e.g. /HTMLBasedGUI/workplace/bootstrapworkplaceinfo.xml.
mfwpfunctions_attr_contentstylesheet;Style sheet that should be used for the content that is started inside the workplace.
mfwpfunctions_attr_serversidescrolling;Flag that decides if the function tree providing the available workplaces functions support client side scrolling (default, "false") or supports server side scrolling ("true"). Server side scrolling should be used if a function tree containes more than 100 nodes.
mfwpfunctions_attr_withownborder;Flag that indicates if the functions page shows an additional border. Default is false.
mfwpopencispage_attr_activityurl;URL to be started when user clicks on node. You can append parameters to the URL by appending them via "&amp\;param1=value1&amp\;param2=value2"
mfwpopencispage_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopencispage_attr_followpageswitches;If the user navigates inside the called page (e.g. switches from one page to the other) then this navigation is registered. True means:<br><br>when reinvoking the page through the tree then the user come back exactly to the page where he/she stayed. False means: the user is brought back to the starting page always.<br><br> For  HTML pages: Registering of the navigation is only supported for HTML pages in the framebuffer. This means you need to set the framebuffersize attribute in the cisconfig.xml file correspondingly. 
mfwpopencispage_attr_iconurl;URL for the icon in front of the text. The workplace iself is running in project "HTMLBasedGUI" - you have to go up first "../" to address your icons.
mfwpopencispage_attr_onlyoneinstance;A page with the corresponding text is only started once inside the workplace. If the page already exists no new pages is started but the existing one is picked.
mfwpopencispage_attr_text;Text of the node.
mfwpopencispopup_attr_activityurl;URL to be started when user clicks on node. You can append parameters to the URL by appending them via "&amp\;param1=value1&amp\;param2=value2"
mfwpopencispopup_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopencispopup_attr_height;Set the dimension of the popup in pixels. (height)
mfwpopencispopup_attr_iconurl;URL for the icon in front of the text. Must start with "../project".
mfwpopencispopup_attr_left;Set the dimension of the popup in pixels. (left)
mfwpopencispopup_attr_text;Text of the node.
mfwpopencispopup_attr_top;Set the dimension of the popup in pixels. (top)
mfwpopencispopup_attr_width;Set the dimension of the popup in pixels. (width)
mfwpopencistarget_attr_activityurl;URL to be started when user clicks on node. You can append parameters to the URL by appending them via "&amp\;param1=value1&amp\;param2=value2".
mfwpopencistarget_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopencistarget_attr_iconurl;URL for the icon in front of the text. Must start with "../project".
mfwpopencistarget_attr_target;Name of the target Frame in which the CIS page is going to be opened.<br> During workplace definition each frame you define gets assigned a target-id.
mfwpopencistarget_attr_text;Text of the node.
mfwpopenhtmlpage_attr_activityurl;URL to be started when user clicks on node.
mfwpopenhtmlpage_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopenhtmlpage_attr_iconurl;URL for the icon in front of the text. Must start with "../project"
mfwpopenhtmlpage_attr_onlyoneinstance;A page with the corresponding text is only started once inside the workplace. If the page already exists no new pages is started but the existing one is picked.
mfwpopenhtmlpage_attr_text;Text of the node.
mfwpopenhtmlpopup_attr_activityurl;URL to be started when user clicks on node.
mfwpopenhtmlpopup_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopenhtmlpopup_attr_height;Set the dimension of the popup in pixels. (height)
mfwpopenhtmlpopup_attr_iconurl;URL for the icon in front of the text. Must start with "../project"
mfwpopenhtmlpopup_attr_left;Set the dimension of the popup in pixels. (left)
mfwpopenhtmlpopup_attr_text;Text of the node.
mfwpopenhtmlpopup_attr_top;Set the dimension of the popup in pixels. (top)
mfwpopenhtmlpopup_attr_width;Set the dimension of the popup in pixels. (width)
mfwpopenhtmltarget_attr_activityurl;URL to be started when user clicks on node.
mfwpopenhtmltarget_attr_draginfo;Any information that is useful to react on a drop event. Characters ' and \ are not allowed.
mfwpopenhtmltarget_attr_iconurl;URL for the icon in front of the text Must start with "../project".
mfwpopenhtmltarget_attr_target;Name of the target Frame in which the HTML Page is going to be opened. <br>When defining a workplace page you assign a target-id per frame. 
mfwpopenhtmltarget_attr_text;Text of the node.
mfwptopic_attr_buttonstyle;Style info that is passed to the button representing the topic.
mfwptopic_attr_iconurl;The button that represents this topic may have an additional icon in front of the text. Use this parameter to set the icon URL.
mfwptopic_attr_text;Text of the topic.
mfwptopic_attr_treeclass;Sets the style class for rendering the tree area of the topic. There are 10 standard style classes available in the default style sheet: PLACETOPIC1ClientTree to WORKPLACETOPIC10ClientTree. These style sheets can be maintained within the CISstyle sheet editor.
mfwptopic_attr_treestyle;Background style for the tree. You can e.g. define background colors and background pictures. Avoid the usage of ' and " characters.<br>Please also have a look onto the method "setStyleClass" - via this method you can pass a reference to a CSS class.
multiselect_attr_valueprop;Name of the adapter property representing this control on server side.<br><br>The property must be of type MULTISELECTInfo. Please view corresponding documentation inside the Java API Documentation.<br><br>The MULTISELECT control does not offer a STATUSPROP property in the way other controls (FIELD, ...) allow you to manipulate there input status at runtime. Instead you can set the status as method of the MULTISELECTInfo object that you create inside your adapter.
nextBttn;Next
page_attr_addjavascriptlibs;Comma separated list of URLs of additional javascript libraries. Example: "../yourproject/js/yourlib.js". Used to include non-CIS javascript. Example of Usage: with the DATEINPUT control you can run own rules to convert and validate user input.
page_attr_addstylesheetfile;URL of an additional style sheet file.<br><br>You may use this additional style sheet file in order to define more styles than are provided in the "normal" style sheet file. Typical situations are:<br><br>(A) Some controls offer the possibility to render defined content by style-class definitions (e.g. inside a TEXTGRID you can dynamically define which style-class is used for a certain cell).<br>(B) If you define own controls by using the control extension framework and if these controls require own style classes then these style classes may be provided inside the additional style sheet file.<br><br>By using the additional style sheet file you are able to avoid doing manipulations to the "normal" style sheet files that come from CIS or that are generated inside the tool "Style Sheet Editor".
page_attr_contextmenumethod;Name of an adapter method that is invoked if the user clicks into the page with the right mouse button and no other control (e.g. texgrid, tree,...) handled the click so far.
page_attr_darkbackground;Normally a page background is in light colour (white if using CIS_DEFAULT style sheet). CIS style sheets also have a dark(er) grey colour to be used.<br><br>If DARKBACKGROUND is set to true then the darker background colour is chosen. This property typically is used if using the SUBCISPAGE tag or ROWTABSUBPAGES tag to seamlessly integrate inner pages into darker container areas.
page_attr_helpid;This is the id that is passed into the help management for the page.<br><br>If a user clicks F1 inside the page and if there is no specific context sensitive control help available (e.g. help for field) then the help for the page is popped up.
page_attr_imagestopreload;Semicolon separated list of image-URLs that are directly preloaded in an invisible area of the page. If images are used inside a tree or a text grid then they are loaded by dynamically generated HTML that is placed into a corresponding area of the page. In order to optimise the loading you can preload such images by listing them in this property.<br>The URL of the images must be relative to your generated HTML page.<br><br>Example: if your page has a tree with certain node images then you may define: "images/nodeopened.gif" images/nodeclosed.gif\; images/nodeendnode.gif".
page_attr_immediatedisplay;Flag that indicates if the screen is visible within the initial loading phase. Default is false. When using the default you see a light HTML page showing a "just loading" image. Use property "justloadingurl" to specify a page of choice.
page_attr_justloadingurl;URL of the page that is displayed to indicate that screen is just loading. Typically this is a light HTML page showing a loading image of choice. Use plain HTML - not a generated CIS page.
page_attr_model;This is the name of the Java class that is the logical counter part of the page on server side. The name must include the full class name e.g. including the package name.<br><br><b>Example</b>: if you have a class DemoAdapter inside the package com.xyz.demo, the MODEL value is: com.xyz.demo.DemoAdapter.<br><br>The class must be a valid adapter class i.e. it must support the interface "com.softwareag.cis.server.IModel". This is implicitly done when deriving your adapter class from "com.softwareag.cis.server.Model". The class source code may be generated by using the Code Assistant - or may be directly coded in a development environment of your choice.<br><br>You may use the class "DummyAdapter" for testing your layout - before specifying your "real" class.
page_attr_occupiedimage;URL of the image that is displayed to indicate that the screen is just communicating to the server. This is the image that is located in the top left corner and which by default is a flashing hour glass.<br><br>You can specify any image, e.g. also animated GIF files. If you want your image not to be visible in the top left corner but "somewhere" in the screen then draw an image with some transparent area on the left and above the image that you want to show.
page_attr_occupiedpixelheight;When the screen is busy, because the client is exchanging information with the server, an hour glass image is displayed at the top left corner. With this property you define the pixel height of this hour glass image.
page_attr_occupiedpixelwidth;When the screen is busy, because the client is exchanging information with the server, an hour glass image is displayed at the top left corner. With this property you define the pixel width of this hour glass image.
page_attr_popupfeatures;In addition to POPUPWIDTH and POPUPHEIGHT you can control the appearance of the popup dialog in which the current page may be displayed. You define a string to maintain different feature aspects, separated by semi-colon.<br><br>center:yes|no<br>edge:sunken|raised<br>resizable:yes|no<br>scroll:yes|no<br>status:yes|no (to display or hide a status bar)<br><br>An example string looks as follows: "dialogLeft:100px"<br><br>There is one special function built in by which you can position a popup relative to its caller's window (the dialogLeft and dialogTop definition normally refer to absolute coordinates of the screen): by specifying "dialogLeft: SCRX(100)px" you define that the position is 100 pixels right from the left top corner of the current window. - Use "dialogTop: SCRY(100)px" in the same way for vertical positioning.<br><br>Please also pay attention to the methods "setPopupTitle()" and "setPopupPageFeatures()" in the com.casabac.server.Model class. By using these method you can define popup parameters in a dynamic way inside your adapter implementation.
page_attr_popupheight;Each CIS page can be opened as a popup dialog. This property defines the pixel height preferred for the page.<br><br>A popup is typically opened by calling the "openPopup"-method in your adapter code. If no further definition is done then the popup will open in the height that is defined by this value. You can also dynamically manipulate the size and position of the popup by using the Model-method "setPopupFeatures" - please read corresponding documentation inside the Java API documentation.
page_attr_popupwidth;Each CIS page can be opened as a popup dialog. This properties define the pixel width preferred for the page. - See the property "popupheight" for more information.
page_attr_stylesheetfile;URL of a style sheet file used for control rendering.<br><br>Typically the style sheet file used for control rendering is set dynamically e.g. the style depends on the user who is currently logged on. When defining the style sheet file by this property, the style sheet file is not set dynamically but defined in a fix way for this page.<br><br>The style sheet file must be defined as URL, relative to the generated page. A valid value may be "../softwareag/styles/CIS_DEFAULT.css".<br><br><br>If not using the "hard setting" of the style sheet file via this property then the style sheet is determined by the runtime in the following way:<br><br><b>(1)</b> The adapter object provides for a "String getStyle()" method that return the URL. You can override the default method and pass back your own URL.<br><b>(2)</b> When using the default implementation derived from com.softwareag.cis.server.Model then the getStyle() method accesses the CIS session context. You can set the session's style by calling "findCISessionContext()" in your adapter and calling "setStyle()" in the session context's object.
page_attr_translationreference;This is the "translation reference" that is passed to the multi language management.<br><br>The "tranlation reference" is a logical term representing a group of textids together with their translation. If using the standard file based multi language management that comes with CIS as default then a "translation reference" represents one file containing text-ids and translations in a comma separated format.<br><br>Translation information is loaded by the multi language management "per translation reference". I.e. if a page links to a certain translation reference then all the translation information that is avaible through this reference is loaded in one step and is also buffered.<br><br>You can set up different scenarios: either each page may address an own translation reference. E.g. if your page is named "abc.xml" then it references to "abc" - as consequence there is (per language) one abc.csv file holding translation information for this page. If you have a second page "def.xml" then you may define "def" accordingly. In this case each page is independent from the other. - On the other side you are required to translate certain "common text-ids" mulitple times.<br>If you on the other hand define one translation reference for multiple pages then you can share text-ids throughout the various pages.<br><br>Please set up a <b>strategy for using translation references</b> when starting using the multi language management. The strategy should also include a structured way of naming text-ids. Text-ids may only be shared in an efficient way if it is clear what they stand for. E.g. you may names of buttons in the following way: "btn_save" and "btn_saveas".
page_attr_visiblevalueifundefined;Several CIS controls support a VISIBLEPROP property. The VISIBLEPROP contains the binding to an adapter property that decides at runtime if a control is visible or not.<br><br>This property defines how these controls behave if there is no implementation available for the property.<br><br>Example: the VISIBLEPROP of a CHECKBOX is binding to a property "cbvisible" but there is not corresponding implementation "getCbvisible". If set to "true" then all controls with undefined visibility are displayed. If set to "false" then they are hidden.
page_desc_basic;This are the basic properties of the page. The most important property is the 'model'.
page_desc_rangeoccupied;Here are the properties for the image that is displayed to indicate that the screen is just communicating to the server.
page_desc_rangepopup;Here are the properties for show the page as a popup.
page_tag;The PAGE control is always the top node of a layout definition. The most important definition of the PAGE control is the definition which Java class is bound to a page. The Java class is the counter part to the page.
pagebody_attr_horizdist;Defines if there is always a small horizontal distance kept between the border of the PAGEBODY area and its content. Set to 'false' if you want controls in the page body to directly start at the very left and to end at the very end - without any distance. <br><br>Default is 'true'.
pagebody_attr_hscroll;The same as VSCROLL - but for the horizontal scroll bar behaviour.
pagebody_attr_paddingbottom;Number of pixels which you want to keep as margin between the pagebody's border and its content. If you want that all contents inside your page body keeps a vertical distance of 50 pixels on the bottom then specify: <br><br>PADDINGBOTTOM = 50
pagebody_attr_paddingleft;Number of pixels which you want to keep as margin between the pagebody's border and its content. If you want that all contents inside your page body keeps a horizontal distance of 50 pixels on the left then specify: <br><br>PADDINGLEFT = 50 <br><br>The PADDINGLEFT and PADDINGRIGHT values are added in addition to the small horizontal distance which is added via the HORIZDIST property.
pagebody_attr_paddingright;Number of pixels which you want to keep as margin between the pagebody's border and its content. If you want that all contents inside your page body keeps a horizontal distance of 50 pixels on the right then specify: <br><br>PADDINGRIGHT = 50 <br><br>The PADDINGLEFT and PADDINGRIGHT values are added in addition to the small horizontal distance which is added via the HORIZDIST property.
pagebody_attr_paddingtop;Number of pixels which you want to keep as margin between the pagebody's border and its content. If you want that all contents inside your page body keeps a vertical distance of 50 pixels on the top then specify: <br><br>PADDINGTOP = 50
pagebody_desc_padding;Properties to control the padding behaviour of PAGEBODY.
pivot_attr_pivotprop;Name of adapter property that represents the pivot report on server side. Must be of type "PIVOTInfo".
pushlet_attr_valueprop;Name of adapter property that represents the pushlet control on server side. Must be of type "PUSHLETInfo". Find more detailed information inside the Javadoc-documentation.
radiobutton_attr_value;Value that represents this instance of the RADIOBUTTON control.<br><br>The value is set into the adapter property that is defined by the VALUEPROP property when the user clicks onto the control. - Vice versa: the control is switched to "marked" when the adapter property holds the value defined.
report_attr_reportprop;Name of adapter property that is referenced by the REPORT control.<br><br>The adapter property must be of type "REPORTInfo". See the corresponding Java API documentation in order to get more information how to define report output for this control.
report_attr_showpdf;If set to "true" then a PDF icon is rendered in the right top corner of the control. When the user clicks on the icon then the report is automatically rendered as PDF - and the result will show up in a popup window.<br><br>Pay attention: if setting this property to "true" then you also have to choose a special constructor when creating the REPORTInfo instance on server side, in which the instance of the model is passed as argument.<br><br>Example:<br>public class XYZAdapter extends Adapter<br>{<br> REPORTInfo m_report = new REPORTInfo(this)<br> ...<br>}
report_attr_showprintversion;If switched to "true" then a small print icon will appear right from the report area. The print icon opens up a modal popup from which the HTML produced inside the report can be directly sent to the printer.<br><br>Pay attention: if specifying "true" then the adapter property holding the REPORTInfo object must create the REPORTInfo instance with passing "this" in the constructor.
resizable_attr_width;Initial default width in pixels ("100") or as percentage value ("10%").
resizable_attr_widthprop;Name of property that defines the width of the control. When the user changes the size then the current pixel width value is written into this property.
rowarea_attr_contenttablestyle;CSS style definition that is applied to the content part of the ROWAREA control.
rowarea_attr_leftindent;Number of pixel between the left border and the container content. Default is 5 pixel.
rowarea_attr_rightindent;Number of pixel between the right border and the container content. Default is 5 pixel.
rowareaheader_attr_align;Horizontal alignment of the controls inside the header line.
rowtabarea_attr_name;Text that is shown in the corresponding "tab". Either define the text as NAME or as language dependent TEXTID.
rowtabarea_attr_openedindexprop;Name of adapter property that represents the index of the "tab" that is currently opened.<br><br>There are two ways of using the property: either you can define by the adapter property's value which "tab" should be opened. Or you can react inside your adapter object when the user does a "tab" selection (also have a look onto the property OPENMETHOD!).<br><br>The property must be of type "int" or "Integer" (or "String"). The left most "tab" represents index "0", the next one "1", etc.
rowtabarea_attr_openmethod;Name of the adapter method that is invoke when the user does a "tab" selection. The index of the "tab" that is opened can be transferred to the adapter by using the property OPENEDINDEXPROP.
rowtabarea_attr_page;Id of the TABPAGE that is defined as child of the TABAREA. Use an id that is unique within the page and that is a "healthy" id: starting with characters, without blanks and without "strange" characters.<br><br>For each "tab" of the TABAREA you have to create one corresponding TABPAGE below - holding exactly the id that is defined in the PAGE property.
rowtabarea_attr_textid;Text ID that is transferred in a corresponding literal at runtime by the multi language management.
rowtabarea_attr_title;Tooltip text that appears on the corresponding tab.
rowtabarea_attr_titletextid;Text ID for the tooltip of the corresponding "tab". At runtime the multi language management replaces the textid with a language dependent literal.
rowtabarea_attr_visibleprop;Name of property that defines if the corresponding tag is visible or not. NOTICE: If you want the framework to automatically set the focus to the first visible tab you also must apply a name for the attribute OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
rowtabarea_attr_withbottomborder;If specified as "false" then no bottom border will be drawn.
rowtabarea_attr_withleftborder;If specified as "false" then no left border will be drawn.
rowtabarea_attr_withrightborder;If specified as "false" then no right border will be drawn.
rowtablearea_attr_bwdtabkeyfilter;By default the BWDTABKEYMETHOD is called if the user presses the SHIFT and TAB keys within the very first cell of the grid. Input the name of a cell's VALUEPROP to associate the method call with any other column.
rowtablearea_attr_bwdtabkeymethod;Name of an adapter method that is called if the user presses SHIFT and TAB keys within the first cell of a grid line. Use property BWDTABKEYFILTER to associate this call with a cell of choice.
rowtablearea_attr_clipboardaccess;If switched to true then the content of the grid can be selected and exported into the client's clipboard.
rowtablearea_attr_firstrowcolwidths;If set to "true" then the grid is sized according to its first row. This first row typically is a header-TR-row in which GRIDCOLHEADER controls are used as column headers for the subsequent rows.<br><br>Default is "false", i.e. the grid is sized according to its "whole content".<br><br>Please note: when using the GRIDCOLHEADER control within the header-TR-row this property must be set to "true" - otherwise column resizing (by drag and drop) does not work correctly.
rowtablearea_attr_fwdtabkeyfilter;By default the FWDTABKEYMETHOD is called if the user presses the TAB key within the veryfirst cell of the grid. Input the name of a cell's VALUEPROP to associate the method call with any other column.
rowtablearea_attr_fwdtabkeymethod;Name of an adapter method that is called if the user presses the TAB key within the very last cell of the grid (last cell within the last line). Use property FWDTABKEYFILTER to associate this call with a grid column.
rowtablearea_attr_griddataprop;Name of adapter property representing the grid on server side.<br><br>Must be of type "GRIDCollection". The whole grid is represented by the GRIDCollection-object, each individual row of the grid is represented by one item inside the collection.<br><br>If using the control for building trees (TREENODE-control inside the grid's items) then use "TREECollection" on server side.
rowtablearea_attr_oncontextmenumethod;Name of adapter method that is called when the user presses right mouse button into the grid - but not on an existing row (then the row item object is responsible for handling the right mouse button) but on "empty area" of the grid.
rowtablearea_attr_touchpadinput;If set to "true" then touch screen icons for scrolling are displayed in addition.<br><br>Default is "false".
rowtablearea_attr_withborder;If set to "false" then no thin border is drawn around the controls that are contained in the grid.<br><br>Default is "true".
rowtabsubpages_attr_borderwidth;Border width (in pixels) of the sub-page that is contained inside this control. Define "0" to avoid rendering any border.
rowtabsubpages_attr_fastbufferswitch;If this property is switched to "true" (default is "false") then the contained subpages are buffered in a way that switching between tabs is not done by loading a new page but by just switching the visibility of pages. Please pay attention to that switching between pages in this case does not reload the page content from the server when switching!<br><br>In order to enable fast switching you have to set the framebuffersize in cisconfig (n +1), n being the number of tabs to switch.
rowtabsubpages_attr_paddingbottom;Number of pixels which you want to keep as margin between the bottom of the tab control and the inner sub page. Default is 5 pixel.
rowtabsubpages_attr_paddingleft;Number of pixels which you want to keep as margin between the tab control's left border and the inner sub page. Default is 5 pixel.
rowtabsubpages_attr_paddingright;Number of pixels which you want to keep as margin between the tab control's right border and the inner sub page. Default is 5 pixel.
rowtabsubpages_attr_paddingtop;Number of pixels which you want to keep as margin between the upper tab row and the inner sub page. Default is 5 pixel.
rowtabsubpages_attr_pagesprop;Name of adapter property representing the control on server side.<br><br>The property must be of type "TABSUBPAGESInfo". View the Java API Documentation for further information.
rowtabsubpages_attr_triggerserver;Flag indicating whether the adapter should be triggered if the user switches between pages. If set to true, method trigger() inside the TABSUBPAGESInfo object is called - before switching the page. Therefore the adapter can abort a page switch - maybe a user has to enter some data first on the current page before switching to another one.
chart_attr_stackedxaxis;If set to true the bars or lines of the chart are stacked on the x-axis.
scheduleline_attr_cellalign;Horizontal alignment of the text inside the control's schedule items.
scheduleline_attr_cellnowrap;If switched to "true" then the text inside the schedule item cells is not broken if exceeding the size of the control - the text is cut instead.<br><br>Default is "false".
scheduleline_attr_cellstyle;Style that is used inside the schedule item cells. Can be any CSS style.
scheduleline_attr_cellvalign;Vertical alignement of the text inside the control's schedule items.
scheduleline_attr_pixelheight;Height of the control in pixels.
scheduleline_attr_pixelsizemode;A schedule line consists of sections, each one rendered with a certain width. By default the width does not represent a pixel value but represents a logical size. The width of the section depends on the logical size of one section compared with the logical size of the other sections.<br><br>When switching this property to "true" then the size of the sections are interpreted as real pixel values.
scheduleline_attr_preselectmode;If set to "true" then schedule items holding an id can be "preselected": the user can click on a schedule item and it is "grayed" as consequence - without directly calling the selection method. The selection method is called when double clicking onto the schedule item.<br><br>Default is "false". <br><br>The reaction of the control when clicking with the right mouse button remains untouched: still the selection method is called by a single right mouse button click.
scheduleline_attr_selectmethod;Adapter method that is called when the user selects one schedule item with the mouse.
scheduleline_attr_selscheduleprop;Name of adapter property in which the id of the selected schedule item is passed. The property is correctly set before the method for reacting on the selection event is called.
scheduleline_attr_seltypeprop;Name of an adapter property that is used in the following way:<br><br>If the user selects an item it can also be determined, if the item is selected by the left or by the right mouse button. In case the user uses the left mouse button, the value LEFT is passed into the property, which is referenced by the SELTYPEPROP property. In case the user uses the right mouse button, the value RIGHT is passed.
scheduleline_attr_valueprop;Name of the adapter property representing the control's content on server side.<br><br>The property must be of type "String". It returns a semicolon separated list of schedule items. Each item is represented by a color, a width, a text and a selection id. The width is not a pixel width but represents a "portion" that this schedule item represents.<br><br>Example: #FF0000\:1000\;Text 1\;1\;#00FF00\;500\;Text 2\;2<br><br>The total "logical width" is 1500. The first item occupies 2/3 of the width, the right item occupies 1/3 of the width.<br><br>The selection is required in case you want to react on user selections. If a user clicks onto one schedule item then the adapter is notified by a certain method - the id of the schedule item is passed as reference. Please have a look into the corresponding property descriptions.
selector_attr_alwaysshowicon;Flag that indicates if the selector shows its image - independent from whether the corresponding line is selected or not. With ALWAYSHOWICON you can show icons on unselected lines, too. For that specify WITHLINENUM to be "false" and use IMAGEPROP.<br><br>Default is "false".
selector_attr_image;If specifying WITHLINENUM to be "false" then a small arrow icon is shown inside the control if selecting a corresponding row. Input the URL of the icon to be shown if you do not want to use the default icon.<br><br>If specifying WITHLINENUM to be "true" then the line number of selected lines is output in bold font.
selector_attr_imageprop;The URL of the image to be shown for displaying selected rows is not hard wires via the IMAGE property but "soft wired": you refer an adapter property that dynamically passes the URL of the image to be shown.
selector_attr_singleselect;Indicates if the multiple lines can be selected ("false") or only one line can be selected ("true"). Default is "true".
selector_attr_valueprop;Name of adapter property that is indicating the selection status of the row that the selector refers to. The property is set and get by the SELECTOR control.
selector_attr_withlinenum;There are two usage variants: either the line number of the corresponding row is shown as content of the SELECTOR control ("true") - or nothing is shown inside ("false").<br>In case of selecting "true" then the line number is automatically retrieved, i.e. you do not have to specify a property on adapter side to indicate the value of the line number.
shape_attr_descriptionheight;Each shape that is displayed inside the control may have some explanation text associated. When moving the cursor over the shape then this text is displayed in a certain text area at the bottom of this control. The height of the text area is defined by this property. Use pixel sizes ("50").
shape_attr_shapeprop;Name of adapter property that represents the control on server side. Must be of type "SHAPEInfo".
sscolumn_attr_valuesprop;Name of row item property provding an HTML-string that is put into the text grid control for every row item.<br><br>The string must be created using the SSColumnUtil methods. Please have a look into the corresponding Java API Documentation.
statusbar_attr_longtextprop;Name of the adapter property providing the long message text. The long text pops up if clicking onto the short text mesage. The default property name is messageLongText and is provided by the Model-class.<br><br>Please pay attention: changing this property means that you also have to override the "outputMessage(...)" methods inside your adapter accordingly.
statusbar_attr_shorttextprop;Name of the adapter property providing the message text that is visible inside the status bar. The default property name is messageShortText and is provided by the Model-class.<br><br>Please pay attention: changing this property means that you also have to override the "outputMessage(...)" methods inside your adapter accordingly.
statusbar_attr_typeprop;Name of the adapter property holding the information about the type of the status message. The type defines the image that is rendered at the beginning of the message.<br><br>Currently there are 3 supported values that can be passed back from the property: E for error, W for warning, S for success.<br><br>The default property name is messageType provided by the Model-class, from which you derive your adapter class.<br><br>Please pay attention: changing this property means that you also have to override the "outputMessage(...)" methods inside your adapter accordingly.
str_attr_onclickmethod;Name of the method inside the row item class that is called if the user clicks a line.
str_attr_ondblclickmethod;Name of the method inside the row item class that is called if the user double clicks a line.
str_attr_proprefprop;Name of the property inside the row item class that is called if the user clicks a FIELD control. The VALUEPROP of the clicked field control will passed.
str_attr_showifempty;Flag that indicates if an unused row is visible. Example: if set to false a grid with rowcount ten and a server side collection size of seven will hide the three remaining rows.<br><br>Default is false.
str_attr_valueprop;Name of the adapter property that defines if the row is selected (value "true") or not selected ("false").
str_attr_withalterbackground;Flag that indicates if the grid line shows alternating background color (like rows within a textgrids). Default is false. Please note: controls inside the row must have transparent background. In case of the FIELD control simply set property TRANSPARENTBACKGROUND to true.
subcispage_attr_modelidprop;Within one subsession you may define by using a "modelid" that not only one adapter instance is kept per adapter class but more than one - separated by the "modelid" value.<br><br>If using this mechanism then you can explicitly specify the name of the adapter property providing the modelid-value that is to be used for the contained page.<br><br>You should be familiar with the CIS session management prior to using this property.
subcispage_attr_processidprop;You can define that the page you show inside the SUBCISPAGE control is running in a different CIS subsession then the containing page. In this case this property specifies the name of the adapter property that provides the name of the CIS subssession id the contained page should run in.<br><br>You should be familiar with the CIS session management before using this property!<br><br>"Process" is the former name of "subsession"... - sorry for the naming.
subcispage_attr_refreshprop;Name of the adapter property, which passes back the information if the embedded page should reload its data from the server.<br><br>The property must return a boolean value. If the property holds value "true" then the contained page will refetch its content from its adapter. If the property holds value "false" then nothing happens.<br><br>Use this property to indicate that the contained page needs to refresh its data content. Maybe you have an "outside navigation page" and a "contained detail page": in case you select an object in the outside page you want to update the inner page showing the details.<br><br>Pay attention to that the refresh-property is not always switched to "true" - otherwise the inner page will be reloaded with every response from the server. The property should only be "true" if really a refresh is required! - You may use the method "reactOnDataCollectionEnd()" of your adapter to set back the refresh property to "false".
subcispage_attr_sessionidprop;You can define that the page you show inside the SUBCISPAGE control is running in a different CIS session then the containing page. In this case this property specifies the name of the adapter property that provides the name of the CIS session id the contained page should run in.<br><br>You should be familiar with the CIS session management before using this property!
subcispage_attr_valueprop;Name of the adapter property providing the name of the CIS page to be shown inside the SUBCISPAGE control.<br><br>If the contained page resides in the same project than the containing page then you just have to pass the simple name of the page, e.g. "pagexyz.html".<br><br>If the contained page resides in a different project you have to specify "/projectxyz/pagexyz.html".<br><br>Please note: use the REFRESHPROP property in order to explicitly specify when to refresh the data of the contained page.
subpage_attr_valueprop;Name of adapter property providing the URL to be displayed inside the SUBPAGE control.<br><br>The URL may either be an absolute URL ("http://....) or may be a relative URL.<br><br>Please note: the SUBPAGE control only re-renders its inner content if the URL provided by the property really changes. The SUBPAGE control does not "know" if something changed inside the contained page and that it has to redraw the page. - If you want to refresh the inner page explicitly append some random number to your URL, e.g.: http://...url...?RANDOM=45435. By changing the number the browser will relaod the URL.
tabpage_attr_display;Initial display status of the TABPAGE. The first TABPAGE inside the ROW/COLTABAREA control must be set to "". All others need to be set ot "none". - If a ROW/COLTABAREA should show up with two or more pages being visible one below the other then check the setting of this property!"
tabpage_attr_id;Id of the TABPAGE. Each page has an id that refers to the PAGE1 .. PAGE9 definition inside the ROW/COLTABAREA control that contains the TABPAGE. Clicking a "tab" will display the TABPAGE with the associated id.
tabsel_attr_bottomborder;If set to "true" then a bottom border is rendered below the tab selection. If set to "false" then no bottom border will be drawn.
tabsel_attr_reversecolors;Reverses the color scheme of the TABSEL control.
tabsel_attr_tabselprop;Name of the adapter property representing the TABSEL control on server side.<br><br>The property must be of type "TABSELInfo". Please find further information inside the Java API Documentation.
tabstrip_attr_scrollable;If set to "true" then small icons will appear on the right border of the control. If the size of the "tabs" is too big and some tabs are cut as consequence then you can use these icons for scrolling left and right.
tabstrip_attr_tabstripprop;Name of the adapter property that represents the control on server side.<br><br>The property must be a subclass of "TABSTRIPInfo". In your implementation you must override mehotd "reactOnTabSelection(index)".
text_attr_cols;Width of control specified by number of characters. Either define the width by the WIDTH property or by the COLS property. Do not specify both!<br><br>When specifying the width by COLS then be aware of that the width depends from the font size used inside the control (that is defined in the styles sheet definition).
text_attr_rows;Height of control specified by number of rows. Either define the height by the HEIGHT property or by the ROWS property. Do not specify both!<br><br>When specifying the height by ROWS then be aware of that the height depends from the font size used inside the control (that is defined in the styles sheet definition).
text_attr_wrap;Specifies the line wrapping inside the control. By default a line that exceeds the width of the control is broken automatically.<br><br>You may define this property to not wrap at all ("off") - in this case the text control offers horizontal scroll bars to scroll the text.<br><br>There are two styles of wrapping "soft" and "hard". The difference between "soft" and "hard" is the way the text is - if changed by the user - passed back to the adapter property: when specifying "soft" then line breaks which are caused by wrapping are not sent to the server, when specifying "hard" then line breaks caused by wrapping are sent as carriage return/ line feed. - Be carefule when specifying "hard" as consequence!<br>The wrap attribute is not part of the HTML standard. It depends on the browser if wrap=hard/soft are supported. 
textgrid2_attr_minapparentrows;Number of rows that are displayed independent of the size of the server side collection.
textgrid2_attr_ondblclickmethod;Adapter method that is called when the user selects a row by a double click.<br><br>Inside the adapter you can find the selected rows by iterating through the row objects and finding out which one's selection-property is switched to "true". In case of multiple row selection you can also use the method "findLastSelectedItem()" of your corresponding TEXTGRIDCollection object.
textgrid2_attr_vscroll;Definition of the vertical scrollbar's appearance.<br><br>You can define that scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "auto".
textgrid_attr_directselectevent;Use ONCLICKMETHOD and ONDBLCLICKMETHOD instead.
textgrid_attr_directselectmethod;Use ONCLICKMETHOD and ONDBLCLICKMETHOD instead.
textgrid_attr_disablecolumnmoving;Flag that indicates if the user can change the order of grid columns. Default is false.
textgrid_attr_disablecolumnresizing;Flag that indicates if the user can change the width of the grid columns. Default is false.
textgrid_attr_enabledefaultcontextmenu;Use this property to enable the default context menu of the browser within the textgrid. Please note: do not enable the browser's context menu if your application itself provides for a context menu.<br><br>Default is "false".
textgrid_attr_fgselect;if switched to true then an additional "graying" of selected lines will be activated. Switch this property to "true" if you have coloured textgrid cells: the selection colour will not override the colour of each cell, as consequence you require an additional effect in order to make the user see which row is selected.
textgrid_attr_fixedcolumnsizes;When switching the FIXEDCOLUMNSIZES property to value "true" then internally the grid is arranged in a way that the area always determines its size out of the width specification of the COLUMN controls. The browser does not look into the column contents in order to try to optimise the size of the area - but always follows the width that you define.
textgrid_attr_focusedprop;Name of property of the item objects - representing the individual rows of the text grid - that indicates if the line should receive focus.<br><br>Must be of type "boolean"/ "Boolean".
textgrid_attr_griddataprop;Name of adapter property that represents the grid on server side. The property must be of type "TEXTGRIDCollection".<br><br>var m_items = new TEXTGRIDCollection()<br><br>Pay attention: once you have created an instance of TEXTGRIDCollection inside your adapter always exactly use this <b>one</b> instance. Do not re-instantiate collection objects! - Example:<br><br>Instead of...<br>WRONG: m_items = new TEXTGRIDCollection()\;<br>...use...<br><br>CORRECT: m_items.clear()\;
textgrid_attr_oncontextmenumethod;If clicking on a row of the text grid with the right mouse button then always the method "reactOnContexMenuRequest()" is called inside the corresponding row item object (that itself is kept inside the TEXTGRIDCollection object).<br><br>If the user clicks with the right mouse button onto an empty area of the grid then there is no object to call - instead the adapter method that is specified by this property is called.
textgrid_attr_personalizable;If defined to "false" then no re-arranging of columns is offered to the user.<br><br>Default is "true". This means: if using COLUMN controls inside the grid definition then the user can re-arrange the sequence of columns by dragging and dropping them within the top title row.
textgrid_attr_selectprop;Name of property of the item objects - representing the individual rows of the text grid - that is used for selecting rows.<br><br>Must be of type "boolean"/ "Boolean".<br><br>If the user selects a text grid row then the value "true" is passed into the corresponding row object's property.
textgrid_attr_singleselect;If set to "true" then only one row can be selected inside the text grid. - If set to "false" then multiple lines can be selected by using Ctrl- and Shift-key during mouse selection.<br><br>Default is "false".
textgrid_attr_singleselectcontextmenu;With SHIFT and CTRL key the user can select multiple lines (use property SINGLESELECT to suppress this feature). Use this property to ensure that the context menu is requested only for a single line.<br><br>Default is "false".
textgrid_attr_touchpadinput;Boolean property that decides if touch pad support is offered for the TEXTGRID control. The default is "false". If switched to "true" then you can scroll the grid via a touch pad. As consequence you can use this control for making inputs through a touch terminal.
textgrid_attr_withrollover;The textgrid controls provide for a so called "roll over" effect. The row that is currently below the mouse pointer is highlighted in a certain way. Use this property to disable the roll over effect (Default is TRUE).
textgrid_attr_withselectioncolumn;When defining a SELECTPROP property then automatically a selection column is added as first left column of the grid. Inside the column an icon inidicates if a row is currently selected.<br><br>Set this property to "false" in order to avoid the selection column.
textgrid_attr_withtitlerow;If defined as "false" then no top title row is shown.<br><br>"True" is default.
textgridsss2_attr_enabledefaultcontextmenu;Use this property to enable the default context menu of the browser within the textgrid. Please note: do not enable the browser's context menu if your application itself provides for a context menu.<br><br>Default is "false".
textgridsss2_attr_fixedcolumnsizes;When switching the FIXEDCOLUMNSIZES property to value "true" then internally the grid is arranged in a way that the area always determines its size out of the width specification of the COLUMN controls. The browser does not look into the column contents in order to try to optimise the size of the area - but always follows the width that you define.
textgridsss2_attr_withrollover;The textgrid controls provide for a so called "roll over" effect. The row that is currently below the mouse pointer is highlighted in a certain way. Use this property to disable the roll over effect (Default is TRUE).
textout_attr_bgcolorprop;Name of adapter property that passes back a color value (e.g. "#FF0000" for red color). The color value is used as background color in the control. - The color of the text color is automatically chosen dependent from the background color: for light background colors the text color is black, for dark background colors the color is white. Use FGCOLORPROP to choose the text color on your own.
textout_attr_fgcolorprop;Name of adapter property that passes back a color value (e.g. "#FF0000" for red color). The color value is used as text color in the control. - The background color is automatically chosen dependent from the text color: for dark text colors the background color is transparent (default), for light text colors the color is black. Use BGCOLORPROP to choose both - the text and background color.
textout_attr_textcolor;Colour of the text. Input a value like "#FF0000".
textout_attr_textsize;The HTML font size of the text. Corresponding to the HTML definition "1" means "smallest" and "6" means "biggest".
timer_attr_interval;Duration in milliseconds the timer waits between calling the adapter method defined in the METHOD property.<br><br>Use this property to "hard code" the duration - or use INTERVALPROP to define the duration by an adapter property.
timer_attr_intervalprop;Name of adapter property that defines the timer interval's duration.<br><br>The adapter property must be of type "int" or "Integer" ("long"/ "Long"/ "String"). If "0" is passed then the timer is stopped.
timer_attr_method;Name of adapter method that is called by the timer.
titlebar_attr_helpid;Id that is passed to the online help management.<br><br>If this "helpid" is specified then a help-icon will be displayed in the right top corner. If clicking on the icon then the corresponding help will show up.
titlebar_attr_valueprop;Property of the server side adapter from which the titlebar text is dynamically derived.<br><br>In situations in which the titlebar should contain some context dependent information you specify an adapter property to provide the text for the control. Do not use "name" or "textid" when using this "valueprop" property.
titlebar_attr_withclose;In the right top corner of the titlebar there is by default a close-icon. Define "false" in this property in order to hide this icon.<br><br>The close-icon calls the method "endProcess" of your adapter. "endProcess" is implemented in the class "com.softwareag.cis.server.Model" and by default ends the subsession the adapter is running in. - Override this implementation if this default implementation does not fit to your needs.
titlebar_attr_withcloseprop;Name of adapter property that indicates if the close icon of the titlebar is visible. <br><br>The server side property needs to be of type "boolean".
toggle_attr_controlmethod;Name of adapter method that is invoked if the user clicks on the toggle control and presses the Ctrl-key the same time.
toggle_attr_falseimage;Image URL that is shown if the corresponding property value is "true".
toggle_attr_partialimage;Image URL that is shown if the corresponding property value is "null".
toggle_attr_shiftmethod;Name of adapter method that is invoked if the user clicks on the toggle control and presses the Shift-key the same time.
toggle_attr_trueimage;Image URL that is shown if the corresponding property value is "true".
toggle_attr_valueprop;Name of the adapter property that represents the value of the control.<br><br>Must be of type "boolean" or "Boolean".<br><br>Typically the TOGGLE control knows one image to represent "true" and one image to represent "false". If using "Boolean" objects on server side (not "boolean" values) then you can also use a third image that is defined within the property PARTIALIMAGE. This image is shown if the corresponding value is "null". As consequence you can define a "triple-state-toggle" switching between "true", "false" and "null".
treenode_attr_flush;Flush behaviour when using the possibility of having editable tree nodes. If double clicking on the tree node then you can edit its content. The FLUSH property defines how the browser behaves when leaving the tree node's input field:<br><br>If not defined ("") then nothing happens - the changed tree node text is communicated to the server side adapter object with the next roundtrip.<br><br>If defined as "server" then immediately when leaving the field a roundtrip to the server is initiated - in case you want your adapter logic to directly react on the item change.<br><br>If defined as "screen" then the changed tree node text is populated inside the page inside the front end.
treenode_attr_imageprop;Name of property of the item objects that provides for a image for the tree node.<br><br>Each node may provide for its own image, e.g. dependent on the type of node.<br><br>If the adapter property passes back "null" then the image is taken from the static definitions that you may parallely do by using the properties IMAGEOPENED, IMAGECLOSED and IMAGEENDNODE.
treenode_attr_withtextinput;If set to "true" then the tree node can also be edited. Editing is started when the user double clicks the node. <br><br>The text that is input is passed into the property "text" which is implemented in the default NODEInfo implementation.
vdist_attr_height;Height of the VDIST control, either in pixels or as percentage value. If no width is defined then a default width of 3 pixels is assigned.
vsplit_attr_overflow;Definition of the vertical scrollbar's appearance.<br><br>You can define that the scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "auto".
vsplit_attr_widthleft;Definition of the initial width of the left split area.<br><br>The width either is a pixel value ("100") or a percentage value ("50%").<br><br>You can also define the width dynamically by your adapter - see documentation for WIDTHLEFTPROP property.
vsplit_attr_widthleftprop;Name of adapter property that specifies the width of the left split area.<br><br>The adapter property must return either a pixel value ("100") or a percentatge value ("50%").
wizardInitHelpText;Click onto a name of an property to see a help text
wzdbcolumnalign;Horizontal alignment of the text within the column. Default is "left", other values are "center" or "right".
wzdbcolumncolumn;Name of the table column the DBCOLUMN control refers to. Please pay attention: If you use column aliases in the SQL query (refer to property QUERY of the DBQUERY control) you must specify the column alias here. Example: If you use the query "Select CUSTNAME as CN FROM CUSTOMER" you have to use column alias "CN" here. "
wzdbcolumnconvertspaces;Flag which indicates if spaces inside the text of a cell should be converted in "non-breakable-spaces". In general HTML converts several appearances of space-characters ("blanks") into one space-character. If you set CONVERTSPACES to "true", this default behaviour is switched off.
wzdbcolumncuttextline;If a text does not fit into a cell then it is cut off. If you set CUTTEXTLINE to "false", it will be broken - following HTML rules for breaking text. Therefore the cell will contain more than one text line.
wzdbcolumndatatype;Data type of the content of the column. Therefore certain rendering rules are applied (e.g. in case of "date", a YYYYMMDD date is converted into a proper date format).
wzdbcolumndbbinding;This property binds the grid column to column of the report result set.
wzdbcolumnname;Name of the title cell of the grid column.
wzdbcolumnstraighttext;Flag which indicates whether the text displayed inside the column if formatted as HTML text or as straight text. Default is "false".
wzdbcolumntag;The DBCOLUMN represents one column within the result grid. It is bound to a name (column name or column alias) in the result set of the report. This result set is defined by the QUERY property inside the DBQUERY definition.
wzdbcolumntextid;Text ID (name) for the multi language management.
wzdbcolumnwidth;Width of the column in pixels or as percentage value.
wzdbcolumnwidthpdf;Width in centimetres the column should occupy inside the PDF document.
wzdbdbcolumnappearance;Use this properties to define the appearance of the result grid column .
wzdbdbfilterfield;Properties that relate to the filter input field. The field is displayed behind the filters name.
wzdbdbfilterlabel;Properties that relate to the name of the filter. The name is displayed in front of the input field.
wzdbfilterdbbinding;Use this properties bind the filter to column of the report and (optionally) to a separate "value help" table ".
wzdbfilterfielddatatype;Specifies the data type of the filter. As a consequence the fields inside the grid of the value help popup are checking the data during input (e.g. if the DATATYPE is "int", it is not allowed to enter alphabetic characters) and adds a logic to transfer the data into various output formats (e.g. if the DATATYPE is "date", the date is formatted into the right date format). In addition these fields have a standard "value help" popup dialog for some data types (e.g. if the DATATYPE is "date" then automatically a date input dialog pops up if invoking "value help").
wzdbfilterfieldhelpid;Name that is used to identify the online help page to be opened if the user presses the F1-key inside the FIELD control. Please refer to chapter "Online Help Management" for details.
wzdbfilterfieldlength;Width of the filter input field in amount of characters. FIELDWIDTH and FIELDLENGTH should not be used together.
wzdbfilterfieldstyle;Explicit style information for the input field. Example: if you want the text to be right aligned, define "text-align: right".
wzdbfilterfielduppercase;Flag which indicates if the alphabetic characters input should be converted to upper case if necessary. Default is "false".
wzdbfilterfieldwidth;Width of the filter input field in pixels or as percentage value.
wzdbfilterlabelname;Name of the filter.
wzdbfilterlabeltextid;Text ID (filter name) for the multi language management.
wzdbfilterlabelwidth;Width of the filter name in pixels or as percentage value.
wzdbfilterquerycolumn;Name of the column within the reports query the DBFILTER control is bound to. With this name user input will be added to the SQL statement on report execution. The SQL statement is defined in the property QUERY of the DBQUERY control. Example: If you define the SQL statement like "SELECT STREET, ZIPCODE, TOWN FROM ADDRESS" in property QUERY of the DBQUERY control you can specify any column name of table "ADDRESS" here.
wzdbfiltertag;The DBFILTER control represents a report filter. It defines one filter criteria with its binding to a table column (property QUERYCOLUMN). The parameter value(s) are added dynamically to the WHERE clause of the SQL query prior to the report execution. The SQL statement is defined within the QUERY property of the DBQUERY control.
wzdbfilterusequeryforvaluehelp;Flag that indicates that the value help is coming from the query result set. 
wzdbfiltervaluehelpcolumn;You may have a table in that the valid values for this filter are kept. In that case you can provide for a filter value help by using the properties VALUEHELPTABLE and VALUEHELPCOLUMN. Input the name of the column here.
wzdbfiltervaluehelptable;You may have a table in that the valid values for this filter are kept. In that case you can provide for a filter value help by using the properties VALUEHELPTABLE and VALUEHELPCOLUMN. Input the name of the table here.
wzdbqueryattrdirectselectevent;The DIRECTSELECTEVENT property is used to define whether the direct select method is called by a single or a double click. Typically you use a single click ("onclick") if you want to select something in the grid and to display simultaneously details of what was selected in the same page. Use a double click ("ondblclick") to navigate to the next page.
wzdbqueryattrdirectselectmethod;The DIRECTSELECTMETHOD property is used to point to a method of your adapter class, which is called when a selection event occurs within the result grid.
wzdbqueryattrvalueprop;Property VALUEPROP points to a property of type DBQUERYInfo (package com.softwareag.cis.server.util). This class encapsulates the reports execution, the variant management and the PDF and CSV output. 
wzdbquerybackgroundstyle;Direct style manipulation of the table style which surrounds the table cells inside the result grid.
wzdbquerydatasource;Logical identifier of the database on that the report is executed. This value is passed in the method "IDBQUERYConnectionProvider. GetDBConnection".
wzdbqueryexecutebuttonname;Name that is displayed on the execute button.
wzdbqueryexecutebuttontextid;Text ID (execute button) for the multi language management.
wzdbqueryexecuteonload;Flag which indicates if the report is to be executed on page load. Default is "false".
wzdbqueryfilterlinkoperator;The values of the DBFILTER controls are added dynamically to QUERY prior the reports execution. With this property you can specify the operator to be used to add the DBFILTER values. Default is "AND".
wzdbqueryfixlayout;When switching the FIXLAYOUT property to value "true" then internally the result grid is arranged in a way that the area always determines its size out of the width specification of the DBCOLUMN controls. The browser does not look into the column contents in order to try to optimise the size of the area - but always follows the width and height that you define.
wzdbqueryfoldable;The surrounding row area can be shrinked by clicking on its title. This standard behaviour can be disabled by setting FOLDABLE to "false".
wzdbqueryheight;The height of the DBQUERY control in pixels or as percentage value.
wzdbqueryhscroll;Indicator if the result grid shows a horizontal scroll bar. 
wzdbqueryimage;URL of the image that is shown at the right hand of the filters. The URL can be relative or absolute.
wzdbquerymaxrows;Specifies the maximum number of rows fetched from database. The value "0" represents unlimited. Default is "200".
wzdbqueryoutputmesstostatusbar;Flag that indicates if messages that are generated by the report (DBQUERYInfo) are displayed within the status bar (default) or inside the DBQUERY control above the result grid ("false").
wzdbqueryquery;SQL statement with a complete SELECT and FROM clause and with an optional WHERE clause. With the SELECT clause you define the result set of the report (each DBCOLUMN control refers to one element/column name of this result set via the property COLUMN). Prior the reports execution the values of the DBFILTER controls are added to this query.
wzdbqueryrangeappearance;Use this properties to specify how the control should look like.
wzdbqueryrangegrid;Result grid related properties. Internally the DBQUERY uses a TEXTGRIDSSS2 control to display the result.
wzdbqueryrangeheight;The overall controls height.
wzdbqueryrangejava;Use this properties to bind the control to properties/ methods of the corresponding adapter class.
wzdbqueryrangerowarea;The report is embedded within a row area. Use this properties to set names, an image, style,...
wzdbqueryrangesql;With this properties you specify the database access.
wzdbqueryrangetitle;Title related properties (name, width, style,...).
wzdbqueryrowareaname;Name of the surrounding row area.
wzdbqueryrowareastyle;Inline style for the surrounding row area.
wzdbqueryrowareatextid;Text ID (row area) for the multi language management.
wzdbqueryrowcount;The property ROWCOUNT defines the number of rows that are fetched from the server. 
wzdbquerytag;The DBQUERY control is designed to significantly reduce the effort for developing queries against relational databases. The reports execution (append filter values to the report query, trigger the JDBC API, convert a JDBC result set into text grid collection), user specific report variants (persistent data about filter criteria, sorting, grouping, ...), PDF and CSV output is encapsulated in class DBQUERYInfo - the server side counterpart of the control. Using the DBQUERY control you are free to provide for this typical report aspects on your own. 
wzdbquerytitle;Name of the database report.
wzdbquerytitlelabelwidth;Width of the title in pixels or as percentage value.
wzdbquerytitlestyle;Direct manipulation of title style.
wzdbquerytitletextid;Text ID (report title) for the multi language management.
wzdbquerywithselectioncolumn;Flag which indicates if the result grid does have a selection column. Default is "true".
wzdbquerywithtitlerow;Flag indicates if the result grid does have a title row (default) or not ("false").
wzpagebodyrangebasic;This are the basic properties of the page body.
wzpagebodyrangepadding;Specifies the width of the padding of the page body.
wzpagebodytag;The page body is the main area where you place the body part of your layout. The body adapts its height to the current window's height - while elements as TITLEBAR, HEADER and STATUSBAR keep a constant height. If the page body's size is too small to hold its content, you scroll through the elements that are inside the PAGEBODY.
chart_attr_xaxisbarthickness;Width of the bars in pixels. If not set, the bars are sized automatically.
_attr_linieborderwidth;Border width of the slider line.
_attr_menucollectionprop;
_attr_stylesheet;Style sheet that should be used for the workplace itself.
_attr_tooltipid;
absfolder_attr_name;A name for the ABSFOLDER can be defined here, without any effect on rendering and behaviour.
area_attr_paddingbottom;Number of pixels between the bottom border and the area's content. Default is 5 pixels. 
area_attr_paddingtop;Number of pixels between the top border and the area's content. Default is 5 pixels. 
area_attr_toggleimgtitle;A text that is displayed as tooltip of the toggle image. 
area_attr_toggleimgtitletextid;Multi language dependent text that is displayed as tooltip of the toggle image.<br> Do not specify a "toogleimagetitle" inside the control if specifying a "toggleimagetextid".
area_attr_withcontentbottompadding;The control by default renders some blank vertical space (3 pixels) on bottom of the content area.<br><br>By specifying "false" you can avoid this behaviour.
area_attr_withcontenttoppadding;The control by default renders some blank vertical space (3 pixels) on bottom of the content area.<br><br>By specifying "false" you can avoid this behaviour.
button_attr_submitbutton;Set this property to true and the button will work as an 'Submitbutton', that is neccessary if you want to transfer and/or save form values.<br> i.e. password and username or complete search forms<br>Default value is false.<br> You should only use a 'Submitbutton' if the withformtag option of the pagebody tag is set true.
colarea_attr_titlerowontop;Default value is 'true'. If set to 'false' the titlerow is rendered at the bottom of this area.
colarea_attr_withtoppadding;If set to 'true', this colarea is rendered with toppadding.
column_attr_celltitleprop;Name of the property of the row item object that passes back the tooltip of this cell.
dbradiobutton_attr_value;Value that represents this instance of the DBRADIOBUTTON control.<br><br>The value is set into the adapter property that is defined by the VALUEPROP attribute when the user clicks onto the control. - Vice versa: the control is switched to "marked" when the adapter property holds the value defined.
field_attr_autocallpopupmethod;Use property AUTOCALLPOPUPMETHOD to invoke the field's value help method with a certain offset (milliseconds) after last key down event
field_attr_formula;Contains information used by the Formula Editor. <br>Use the Formula Editor to make changes!
field_attr_validationrules;Contains information used for Data Validation. <br>Use the Validation Rules Editor to make changes!
fileupload2_attr_darkbackground;Normally the background is in light colour but the CIS style sheets also have a dark(er) grey colour to be used.<br><br>If DARKBACKGROUND is set to true then the darker background colour is chosen. This property typically is used to integrate light coloured controls into darker container areas.
icon_attr_displaymenuindicator;If set to true a small indicator signals that there is a corresponding menu 'behind this icon'. Default is false.
icon_attr_nameposition;Position of the (optional) text to the icon. Aside or below, default is aside.<br> Set the corresponding text in the name or the text id property.
icon_attr_size;
icon_attr_textsize;The HTML font size of the text. Corresponding to the HTML definition "1" means "smallest" and "6" means "biggest".
innerdiv_attr_leftprop;Name of adapter property that dynamically defines the left position of the control. Must return a valid value for 'left position'.
innerdiv_attr_widthprop;Name of adapter property that dynamically defined the width of the control. Must return a valid width.
mfwpbootstrapinfo_attr_translationproject;Name of the project where the actual used multilanguage file is located.<br> e.g. cisdemos<br>
mfwpbootstrapinfo_attr_translationreference;Name of the multilanguage .csv file. <br>e.g. test <br> (if the file test.csv should be used)<br> 
mfwpcallback_attr_textid;Text ID of the items text.
mfwpcallback_attr_tooltip;Tooltip of the item.
mfwpcallback_attr_tooltipid;Tooltip Text ID of the item.
mfwpfolder_attr_tooltip;Text of the tooltip of the tree node folder.
mfwpfolder_attr_tooltipid;Text ID of the tooltip.
mfwpfunctions_attr_defaultcontentpage;URL of a page that is shown in the 'content area' by default.
mfwpfuntions_attr_withplusminus;If set to "true" then +/- Icons will be rendered in front of the mfwpfuntions.
mfwpnode_attr_tooltip;Tooltip of the node.
mfwpnode_attr_tooltipid;Text ID of the tooltip.
mfwpopencispage_attr_tooltip;Text of the tooltip of the tree node.
mfwpopencispage_attr_tooltipid;Text ID of the tooltip.
mfwpopencispopup_attr_tooltip;Tooltip of the node.
mfwpopencispopup_attr_tooltipid;Text ID of tooltip.
newsfeed_attr_infoprop;Name of the adapter property that represents the control on server side.<br>Return type must be "NEWSFeedInfo".<br><br>Pay attention: The NEWSFeedInfo Constructor needs a valid Adapter i.e. <br>NEWSFeedInfo m_nfi = new NEWSFeedInfo(<b>this</b>) 
newsfeed_attr_splitstyle;By default the newsfeed control appears within a vsplit control. Headers on the left and content on the right. Set this value to hsplit and the control appears within a hsplit control. Headers on top, content on the bottom.
njx__attr_valueprop;Name of the adapter parameter that provides the content of the control.
njx_csvcolumn_attr_titlesprop;Name of adapter property provding a semicolon-separated string containing the titles to be displayed.<br><br>Example for a value that is passed back by the property:<br>"First Name\;Last Name\;Street""
njx_csvcolumn_attr_widthsprop;Name of adapter property provding a semicolon-separated string containing the widths of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"100\;200\;100%""
njx_textgrid_attr_griddataprop;Name of the adapter parameter that represents the grid in the adapter.
page_attr_flushmethod;Name of an adapter method that is invoked in case the page loses the focus  to another CIS page.
pagebody_attr_withformtag;Default value is false. If set to true all controls included in the pagebody tag will be surrounded by a form tag - only in the generatet html page. <br> That makes it possible to save or transfer forms.<br>i.e. save username and password or a complete search form.<br><br>You will also need an 'submitbutton' - please have a look at the button control.
rowarea_attr_withfadedtoggling;The animation of the controls can be switched off! Please take a look in your cisconfig.xml file. Set animatecontrols="true" (default) if you generally want to animate all of your controls.<br>The rowarea control has a seperate switch (withfadedtoggling = true/false) to (de)activate the 'FadedToggling' animation especially for this single rowarea control.<br>Notice: Entering true or false into the withfadedtoggling attribute overwrites the general animatecontrols setting ! 
slider_attr_backgroundcolor;Background color of the slider container. <br><br>This should be a valid CSS color value. For example a name(blue, red), a hexadecimal value(#99CCFF) or others.
slider_attr_displayonly;If set to true, the SLIDER will not be accessible for input. It is just used as an output.
slider_attr_liniebordercolor;Border color of the slider line. <br><br>This should be a valid CSS border-color value. You can specify a different color for the top, right, bottom and left border in this sequence. For example: #BBBBBB #666666 #666666 #BBBBBB
slider_attr_mainbordercolor;Border color of the slider container. <br><br>This should be a valid CSS border-color value. You can specify a different color for the top, right, bottom and left border in this sequence. For example: #BBBBBB #666666 #666666 #BBBBBB
slider_attr_mainborderwidth;Border width of the slider container.
slider_attr_pointbordercolor;Border color of the slider point. <br><br>This should be a valid CSS border-color value. You can specify a different color for the top, right, bottom and left border in this sequence. For example: #BBBBBB #666666 #666666 #BBBBBB
slider_attr_pointborderwidth;Border width of the slider point.
slider_attr_pointheight;Height of the slider point in pixels. The value must be an integer value.
slider_attr_pointwidth;Width of the slider point in pixels. The value must be an integer value.
slider_attr_rangefontsize;Font size of the slider range.
slider_attr_showcurrentvalue;Boolean value. Whether to show the current value of the slider while it is moving.
slider_attr_showrange;Boolean value. Whether to show the range of the slider. The range is the "from" and "to" values.
slider_attr_sliderliniecolor;Background color of the slider line. <br><br>This should be a valid CSS color value. For example a name(blue, red), a hexadecimal value(#99CCFF) or others.
slider_attr_sliderpointcolor;Background color of the slider point. <br><br>This should be a valid CSS color value. For example a name(blue, red), a hexadecimal value(#99CCFF) or others.
slider_attr_slidervaluecolor;Background color of the slider current value which is shown if the "showcurrentvalue" property is set to true. <br><br>This should be a valid CSS color value. For example a name(blue, red), a hexadecimal value(#99CCFF) or others.
slider_attr_valuebordercolor;Background color of the slider current value which is shown if the "showcurrentvalue" property is set to true. <br><br>This should be a valid CSS border-color value. You can specify a different color for the top, right, bottom and left border in this sequence. For example: #bbb #666 #666 #bbb
slider_attr_valueborderwidth;Border width of the slider current value which is shown if the "showcurrentvalue" property is set to true.
slider_attr_valuefontsize;Font size of the slider current value which is shown if the "showcurrentvalue" property is set to true.
slider_attr_width;Width of the slider. Can be given in pixels or percentage.
subcispage2_attr_withownborder;Default is false. If WITHOWNBORDER is set to true, the subcispage2 control is rendered with its own 3D lookalike border. Set BORDERWIDTH to 0 if WITHOWNBORDER is set to true.
tagcloud_attr_backgroundcolor;Sets the background color of the control.
tagcloud_attr_bordercolor;Sets the border color of the control.
tagcloud_attr_borderstyle;Choose the style the controls border.
tagcloud_attr_borderwidth;Border size of control in pixels. Specify "0" not to render<br>any border at all.<br>
tagcloud_attr_tagcloudprop;Name of the adapter property that represents the control on server side.<br>Return type must be "TAGCLOUDInfo".
tagcloud_attr_textcolor;Sets the text color of the control.
textgrid2_attr_singleselectprop;Name of adapter property that dynamically defined whether SINGLESELECT is true or false. Must return 'true' or 'false'.
textgridsss2_attr_minapparentrows;Minimum number of apparent rows. Insert a valid number to make sure that (e.g. 10) rows are shown for sure.
textgridsss2_attr_showemptylines;If set to false, no empty line will be rendered. By default empty lines are shown.
titlebar_attr_closetitle;The text that is entered here appears as tooltip on the close-icon on the right top border of the titlebar.
titlebar_attr_closetitletextid;Multi language dependent text that displays the tooltip on the close-icon. Do not specify a CLOSETITLE if you are specifying a CLOSETITLEID.
treenode3_attr_validdraginfosprop;Name of a property that contains a 'comma separated list' of valid drag informations. 
wzdbfiltercolumnalias;Alias of the database column
xci__attr_dropmethod;Method that is executed when the user is dragging another DROPICON control over this control and drops it there. Do not use this attribute if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). 
xci__attr_method;Method that is executed when clicking on the control.
xci__attr_nameprop;Name of server side XML element that provides as value the text that is shown inside the control.
xci__attr_onclickmethod;Method that is called when the user selects a row.
xci__attr_sorttitlesprop;Name of server side XML element provding a semicolon-separated string containing the titles to be displayed.<br><br>Example for a value that is passed back by the property:<br>"Click here to sort column First Name\" Click here to sort column Last Name\; Click here to sort column Street""
xci__attr_statusprop;Name of the XML element that represents the control's edit status. The server side processing can dynamically control the edit status by assigning values like "DISPLAY", "EDIT", "ERROR", "INVISIBLE", "FOCUS".
xci__attr_styleprop;Name of server side XML element that dynamically provides explicit style information for the control.
xci__attr_subcispageprop;Name of XML element representing the control on server side.<br><br>The element is containing the name of the page, e.g. "xyz.html" and contains an indicator that content of the page has changed and the page needs to be reloaded as consequence.
xci__attr_titleimageprop;Name of server side XML element that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
xci__attr_titleprop;Name of the XML element of the server side processing that dynamically defines the title of the control. The title is displayed as tool tip when the user moves the mouse onto the control.
xci__attr_tooltiptitlesprop;Name of server side XML element provding a semicolon-separated string containing the tooltip tip texts to be displayed when the mouse is moved over the column headers.
xci__attr_valueprop;Name of the XML element that represents the field's value in the server side processing.
xci__attr_visibleprop;Name of XML element in the server side processing that provides the information if this control is displayed or not. As consequence you can control the visibility of the control dynamically.
xci__icon_attr_imageprop;Name of server side XML element that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
xci__mfpageactivitytimeout_attr_method;Name of method that is called after a period of user inactivity. If the method does not exist for the adapter of the target frame then the standard method "processAsDefault" is called.
xci__tree_attr_tooltipprop;Name of node's XML element that provides for a text that is shown if the user moves the mouse over the tree item (tooltip). 
xci_area_attr_foldedprop;Name of server side XML element that controls whether the content of the ROWAREA is folded (true) or displayed (false).<br><br>By using this XML lement you can dynamically control the "folded"-status of the control by your adapter object.
xci_button_attr_method;Name of the server side method that is called when the user presses the button.<br>Following JAVA coding conventions a method name typically starts with a non-capital character, e.g. "onSave" instead of "ONSave".
xci_button_attr_nameprop;Name of the server side XML element that provides the text to be displayed inside the button. Typically buttons have static texts either defined by the property "name" or "textid". Via "nameprop" you can dynamically set the button's text by your application. Use the nameprop in cases the button's text should change dependent on your logic.<br><br>Example: you may want to define the button's text to reflect the next status the user can set to a business object.
xci_buttonlist_attr_buttonlistprop;Name of the server side XML element that rerpesents the control<br><br>. The XML element is a structure in which each button of the button list is represented accrodingly.
xci_checkbox_attr_valueprop;Name of server side XML element that is represented by checkbox.<br><br>The property must be of type "boolean" or "Boolean" (or "String").
xci_clienttree_attr_imageclosedprop;Name of node's XML element that provides for the image URL which is shown for closed tree nodes. The value may be different from tree node to tree node - each tree node may have an own image.
xci_clienttree_attr_imageopenedprop;Name of node's XML element that provides for the image URL which is shown for opened tree nodes or end tree nodes. The value may be different from tree node to tree node - each tree node may have an own image.
xci_clienttree_attr_oncontextmenumethod;Name of the method that is called if the user presses the right mouse button in an empty area of the client tree.
xci_clienttree_attr_treeclassprop;Name of the XML element that passes back the name of a style sheet class that is taken to render the client tree's background area. - Similar to the property TREESTYLEPROP, but now a style class is passed, not the style itself.
xci_clienttree_attr_treecollectionprop;Name of XML element representing the tree of items on server side.<br><br>The element is a XML tree structure in which each node is represented by one XML element with having the tree node's attributes as data elements.
xci_clienttree_attr_treestyleprop;Name of the XML element that dynamically provides for a style value that is passed to the control's area (background of the client tree). You can as consequence e.g. define the background-colour of the tree dependent on your server side logic.
xci_clipboardicon_attr_valueprop;Name of XML element into which the clipboard content of the client is passed or from which the clipboard content on client side is filled (dependent on property "type").
xci_colinfo_attr_visibleprop;Name of server side XML element that tells if the corresponding column that is associated with the colinfo-control is displayed or not.
xci_coltable0_attr_widthprop;Name of server side XML element that dynamically defined the height of the control. Must return a valid width.
xci_column_attr_celltitleprop;Name of the XML element of the row item that passes back the tooltip of this cell.
xci_column_attr_imageprop;Name of the server side XML element of the row item object passing back an image URL. The image is rendered at the very left of the column's area - in front of the text (PROPERTY property definition).
xci_column_attr_linkmethod;Name of a method within the row item that is called if user clicks the column's text. 
xci_column_attr_textclassprop;Name of the server side XML element of the row item object that defines a style class to be used for rendering the content.<br><br>You can set up a limited number of style classes inside your style sheet definition - and dynamically reference them per grid cell.
xci_column_attr_textstyleprop;Name of the server side XML element of the row item that passes back a style-string that is used for rendering the column's content.<br><br>As consequence you can indiviudally assign a CSS-style to each cell of your text grid.
xci_combo_attr_validvaluesprop;Server side XML element that provides for the valid values that are available as selectable options.<br><br>The server side data structure is an array of items, each one reflecting one selectable item that is shown inside the combo box.
xci_csvcolumn_attr_alignsprop;Name of server side XML element provding a semicolon-separated string containing the horizontal alignment of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"left\"center\;right""
xci_csvcolumn_attr_backgroundsprop;Name of server side XML element provding a semicolon-separated string containing the background color of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"\"#C0C0C0\;#FF0000""
xci_csvcolumn_attr_linkmethodsprop;Name of the server side XML element of the row item object that passes back (comma separated) names of row item methods. The corresponding columns will show the text as method links. On click the provided row item method is called.
xci_csvcolumn_attr_proprefsprop;Name of server side XML element provding a semicolon-separated string containing the row item properties that are internally used to build up the value string.<br><br>The property names are used for sorting: if the user invoke the sorting of the grid by clicking on the corresponding icons inside the title cell then this column needs to be associated with an internal property that is used for sorting.<br><br>Example: "firstName\"lastName\;street""
xci_csvcolumn_attr_titlesprop;Name of server side XML element provding a semicolon-separated string containing the titles to be displayed.<br><br>Example for a value that is passed back by the property:<br>"First Name\;Last Name\;Street""
xci_csvcolumn_attr_valuesprop;Name of row item XML element that passes back the content of the cells - as semicolon-separated string.
xci_csvcolumn_attr_widthsprop;Name of the server side XML element provding a semicolon-separated string containing the widths of the columns to be displayed.<br><br>Example for a value that is passed back by the property:<br>"100\;200\;100%""
xci_dlmenu_attr_menuprop;Name of the server side XML element that represents the control on server side.<br><br>A element structure is generated in which each top and sub item of the menu is represented as data element.
xci_dropicon_attr_draginfoprop;Name of an server side XML element that provides for information that is passed to the adapter when dropping this control over another DROPICON. Do not use this property (or property DROPINFO respectively) if you do not want the user to drag this control. <br><br>The server side property needs to be of type "String".
xci_dropicon_attr_dropinfoprop;Name of an server side XML element to that the "drag info" of the dragged DROPICON control is set. Do not use this property if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). <br><br>The server side property needs to be of type "String".
xci_dynavis_attr_valueprop;Name of XML element that defines if the area is visible ("true") or invisible ("false").
xci_field_attr_autocallpopupmethod;Use property AUTOCALLPOPUPMETHOD to invoke the field's value help method with a certain offset (milliseconds) after last key down event.
xci_field_attr_bgcolorprop;Name of the XML element that represents the field's background color's value in the server side processing. The value that is set into the XML element must be in the format "#RRGGBB", e.g. "#FF0000" for red.
xci_field_attr_decimaldigitsprop;Name of XML element that passes back information how many decimal digits are to be displayed. If using this feature then the DATATYPE property must be set to 'float'.
xci_field_attr_fgcolorprop;Name of the XML element that represents the field's foreground color's value in the server side processing. The value that is set into the XML element must be in the format "#RRGGBB", e.g. "#FF0000" for red.
xci_field_attr_maxlengthprop;Name of XML element that passes back the maximum number of characters that a user may enter into this FIELD. Consider to use MAXLENGTH to define this number in a static way.
xci_field_attr_popupmethod;Name of the server side method that is called when the user requests value help by pressing F4 or F7 or by clicking into the FIELD with the right mouse button. See at chapter 'Popup Dialog Management' for more details. If the POPUPMETHOD is defined, a small icon is shown inside the field to indicate to the user that there is some value help available.
xci_field_attr_popupprop;Name of an server side's XML element to provide information whether a POPUPMETHOD is available (true) or not (false). This feature is used in scenarios in which a FIELD offers e.g. value help or not, depending on business logic inside the adapter.
xci_field_attr_validationprop;Name of the XML element out of which the regular expression is dynamically read. Works the same way as VALIDATION but in a dynamic way.
xci_field_attr_validationuserhintprop;If using validation expressions (either property "validation" or "validationprop") then a popup comes up if the user inputs wrong values into a field. Inside this popup a certain text may be added in order to explain to the user what he/she did not correctly input. This text can be either statically defined or dynamically - by using this XML element.
xci_field_attr_valuetextprop;Name of the XML element of the server side processing that represents the text value of the field. The value provides a "human understandable" description for the value: in some cases you enter an id into a FIELD but want to display the id and a description to the user. At runtime, the values provided by the VALUEPROP- and the VALUETEXTPROP-property are combined into one text (string) that is returned into the FIELD.
xci_fileupload_attr_cfileprop;Name of server side XML element in which the client's file name is passed at upload time.
xci_fileupload_attr_method;Method called when a file is uploaded. The file's data is available at the point of time this method is called.
xci_fileupload_attr_sfileprop;Name of server side XML element, in which at upload time - the name of the file is written - which is a copy of the client file but in the server's file system. Please pay attention that this file name is a unique one and has nothing to do with the client's file name!
xci_googlemap_attr_infotextprop;Name of server side XML element that provides for an additional help text. If used the text is displayed within an info window that points to the center of the map. 
xci_googlemap_attr_latitudeprop;Name of server side XML element that returns the latitude within decimal format. Example: in order to display Palo Alto (United States) return "34.4419". Return "1000.0" in order to hide the map.
xci_googlemap_attr_longitudeprop;Name of server side XML element that returns the longitude within decimal format. Example: in order to display Palo Alto (United States) return "-122.1419". Return "1000.0" in order to hide the map.
xci_googlemap_attr_zoomlevelprop;Name of server side XML element that provides for the zoom level (integer). Default value is 4. 
xci_grid_attr_focusprop;Name of XML element of the item objects - representing the individual rows of the collection - that indicates if the row receives the keyboard focus.<br><br>Must be of type "boolean"/ "Boolean".<br><br>If more than one lines are returning "true" the first of them is receiving the focus.
xci_hsplit_attr_heighttopprop;Name of server side XML element that specifies the height of the top split area.<br><br>The adapter property must return either a pixel value ("100") or a percentatge value ("50%").
xci_iconlist_attr_iconlistprop;Name of server side XML element representing the control on server side.<br><br>The XML structure is an array in which each icon is represented as own element.
xci_imageout_attr_valueprop;Name of server side XML element that provides as value the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
xci_innerdiv_attr_leftprop;Name of server side XML element that dynamically defines the left position of the control. Must return a valid value for 'left position'.
xci_innerdiv_attr_widthprop;Name of server side XML element that dynamically defined the width of the control. Must return a valid width.
xci_menu_attr_menucollectionprop;Name of server side XML element that represents the menu's item hierarchy on server side.<br><br>A tree structure is generated for the element in which each item of the menu is represented as own element - with an hierarchical containment of items. Each item is associated with a method that is called once the user presses the corresponding menu item.
xci_menu_attr_toggleimageprop;Name of server side XML element that provides a URL-string that defines the toggle image. The toggle icon is shown on the right end of a menu item that has subitems.
xci_methodlink_attr_valueprop;Name of server side XML element providing the text that is shown as link.
xci_multiselect_attr_valueprop;Name of XML element representing the control on server side. A complex structure is created for the server side processing in which each element of the control is represented by one corresponding data element.
xci_page_attr_flushmethod;Name of an method that is invoked in case the page loses the focus.
xci_rowtablearea_attr_bwdtabkeymethod;Name of method that is called if the user presses the TAB key within the very last cell of the grid (last cell within the last line). Use property FWDTABKEYFILTER to associate this call with a grid column.
xci_rowtablearea_attr_fwdtabkeymethod;Name of an method that is called if the user presses the TAB key within the very last cell of the grid (last cell within the last line). Use property FWDTABKEYFILTER to associate this call with a grid column.
xci_rowtablearea_attr_griddataprop;Name of XML element representing the grid on server side.<br><br>The element is a complex data structure in which each grid element (or if used with tree: each tree node) is rerpresented as one data element - containing the columns values as contained XML data elements.
xci_rowtablearea_attr_oncontextmenumethod;Name of method that is called when the user presses right mouse button into the grid - but not on an existing row (then the row item object is responsible for handling the right mouse button) but on "empty area" of the grid.
xci_rowtabsubpages_attr_pagesprop;Name of XML element representing the control on server side.<br><br>The XML element is a array data structure in which each page of the control is represented as one array item.
xci_scheduleline_attr_valueprop;Name of the XML elementrepresenting the control's content on server side.<br><br>The property must be of type "String". It returns a semicolon separated list of schedule items. Each item is represented by a color, a width, a text and a selection id. The width is not a pixel width but represents a "portion" that this schedule item represents.<br><br>Example: #FF0000\"1000\;Text 1\;1\;#00FF00\;500\;Text 2\;2<br><br>The total "logical width" is 1500. The first item occupies 2/3 of the width, the right item occupies 1/3 of the width.<br><br>The selection is required in case you want to react on user selections. If a user clicks onto one schedule item then the adapter is notified by a certain method - the id of the schedule item is passed as reference. Please have a look into the corresponding property descriptions.
xci_selector_attr_valueprop;Name of server side XML element that is indicating the selection status of the row that the selector refers to. The property is set and get by the SELECTOR control.
xci_statusbar_attr_longtextprop;Do not use this attribute with Application Composer.
xci_statusbar_attr_shorttextprop;Do not use this attribute with Application Composer.
xci_statusbar_attr_typeprop;Do not use this attribute with Application Composer.
xci_str_attr_onclickmethod;Name of the method inside the row item class that is called if the user clicks a line.
xci_str_attr_ondblclickmethod;Name of the method inside the row item class that is called if the user double clicks a line.
xci_str_attr_proprefprop;Name of the XML element inside the row item class that is called if the user clicks a FIELD control. The VALUEPROP of the clicked field control will passed.
xci_str_attr_valueprop;Name of the server side XML element that defines if the row is selected (value "true") or not selected ("false").
xci_subpage_attr_valueprop;Name of XML element providing the URL to be displayed inside the SUBPAGE control.<br><br>The URL may either be an absolute URL ("http://....) or may be a relative URL.<br><br>Please note: the SUBPAGE control only re-renders its inner content if the URL provided by the property really changes. The SUBPAGE control does not "know" if something changed inside the contained page and that it has to redraw the page. - If you want to refresh the inner page explicitly append some random number to your URL, e.g.: http://...url...?RANDOM=45435. By changing the number the browser will relaod the URL.
xci_tabsel_attr_tabselprop;Name of the XML element representing the TABSEL control on server side.<br><br>An array is created in which each tab is represented as element.
xci_tabstrip_attr_tabstripprop;Name of the XML element that represents the control on server side.
xci_tagcloud_attr_tagcloudprop;Name of the XML elmeent that represents the control on server side.
xci_textgrid2_attr_ondblclickmethod;Method that is called when the user selects a row via double click.
xci_textgrid2_attr_singleselectprop;Name of server side XML element that dynamically defined whether SINGLESELECT is true or false. Must return 'true' or 'false'.
xci_textgrid_attr_directselectmethod;Use ONCLICKMETHOD and ONDBLCLICKMETHOD instead.
xci_textgrid_attr_focusedprop;Name of server side XML element of the item objects - representing the individual rows of the text grid - that indicates if the line should receive focus.
xci_textgrid_attr_griddataprop;Name of XML element that represents the grid on server side. The element is an array structure in which each grid item is represented as one item of the array. Each column of the grid is represented as data element inside an item.
xci_textgrid_attr_selectprop;Name of XML element of the item objects - representing the individual rows of the text grid - that is used for selecting rows. If the user selects a text grid row then the value "true" is passed into the corresponding row object's property.
xci_textout_attr_bgcolorprop;Name of XML element that passes back a color value (e.g. "#FF0000" for red color). The color value is used as background color in the control. - The color of the text color is automatically chosen dependent from the background color: for light background colors the text color is black, for dark background colors the color is white. Use FGCOLORPROP to choose the text color on your own.
xci_textout_attr_fgcolorprop;Name of XML element that passes back a color value (e.g. "#FF0000" for red color). The color value is used as text color in the control. - The background color is automatically chosen dependent from the text color: for dark text colors the background color is transparent (default), for light text colors the color is black. Use BGCOLORPROP to choose both - the text and background color.
xci_timer_attr_intervalprop;Name of XML element that defines the timer interval's duration - for dynamically defining the poll rate. Value that is passed during runtime must be of type "integer".
xci_timer_attr_method;Name of method that is called by the timer.
xci_titlebar_attr_valueprop;Name of XML element of the server processing from which the titlebar text is dynamically derived.<br><br>In situations in which the titlebar should contain some context dependent information you specify an adapter property to provide the text for the control. Do not use "name" or "textid" when using this "valueprop" property.
xci_titlebar_attr_withcloseprop;Name of server side XML element that indicates if the close icon of the titlebar is visible. 
xci_toggle_attr_controlmethod;Name of method that is invoked if the user clicks on the toggle control and presses the Ctrl-key the same time.
xci_toggle_attr_shiftmethod;Name of method that is invoked if the user clicks on the toggle control and presses the Shift-key the same time.
xci_toggle_attr_valueprop;Name of the server side XML element that represents the value of the control.<br><br>Typically the TOGGLE control knows one image to represent "true" and one image to represent "false". If using "Boolean" objects on server side (not "boolean" values) then you can also use a third image that is defined within the property PARTIALIMAGE. This image is shown if the corresponding value is "null". As consequence you can define a "triple-state-toggle" switching between "true", "false" and "null".
xci_treenode3_attr_validdraginfosprop;Name of a XML element that contains a 'comma separated list' of valid drag informations. 
xci_treenode_attr_imageprop;Name of XML element of the item objects that provides for a image for the tree node.<br><br>Each node may provide for its own image, e.g. dependent on the type of node.<br><br>If the adapter property passes back "null" then the image is taken from the static definitions that you may parallely do by using the properties IMAGEOPENED, IMAGECLOSED and IMAGEENDNODE.
chart_attr_xaxisbarpercentage;Percent (0-1) of the available width each bar should be within the category percentage. 1.0 will take the whole category width and put the bars right next to each other.
chart_attr_xaxiscategorypercentage;Percent (0-1) of the available width (the space between the gridlines for small datasets) for each data-point to use for the bars.
_attr_flashprop;Name of server side property/data element that triggers a "flashing" of the area. "Flashing" means that the area is animated for a short point of time in order to make the user that e.g. some change of data happened inside the area. The server side property/data element is an index - whenever you change the index then a flashing of the control is triggered on client side.<br><br>Pay attention: do not mix the "flashing" of an area with the "flushing" of controls - "flushing" is the way an input control (e.g. field) triggers server side updates when the user changed the value, "flashing" is pure animation.
_attr_flushmethod;When the data synchronization of the control is set to FLUSH="server" then you can specify an explicit method to be called when the user updates the content of the control. By doing so you can distinguish on the server side from which control the flush of data was triggered. 
_attr_itrstyleprop;Name of server side property/data element that directly controls the style of the control.
_attr_withflash;Adds animation effects when the user uses the control.
_desc_Vertical;Vertical Rendering
chart_attr_arrayprop;Not used for Application Designer.
chart_attr_charttype;Type of chart - i.e. whether the output should be rendered as a set of lines, a set of bars, etc.
chart_attr_height;Height of the chart. Use pixel definitions only, not percentage definitions.
chart_attr_outputformat;Output format: SVG as default. Creation of various image types is supprted as well - please open valid values for seeing the list of supported types.
chart_attr_width;Width of chart. Use pixel definitions only, not percentage definitions.
chartcolumn_attr_color;Color for the corresponding item.
chartcolumn_attr_property;Each item of a chart represents one line. Each line holds as information (1) the text of the line and (2) multiple key figures that are the values to be rendered as line. E.g. a line may have the values "region,revenue,cost,profit". In this case the "region" is the element passing the text of the line, whereas the other elements are passing the key figure information. For each element you maintain one CHARTCOLUMN item, each one pointing to the data element that passes the value at runtime.
chartcolumn_attr_xaxisproperty;This is an indicator of the attribute "PROPERTY" is holding a text value (then "true") or a key figure value (then "false"). In the example of a line "region,revenue,cost,profit" the corresponding XAXISPROPERTY would be "true,false,false,false".
field_attr_digits;Number that specifiies how many digits are to be displayed (ie digits before the comma). If using this feature then the DATATYPE property must be set to 'float'. See also DECIMALDIGITS.
field_attr_digitsprop;Property of the adapter that passes back information how many digits are to be displayed (ie digits before the comma).  If using this feature then the DATATYPE property must be set to 'float'.
googlemap2_attr_infoprop;Name of adapter property representing the control on server side.<br><br>The property must be of type GOOGLEMAPInfo. Read further information inside the Java API Documentation.
googlemap_attr_addressprop;Name of adapter property that returns the address to be displayed - e.g. "New York" or "1600 Amphitheatre Pky, Mountain View, CA"
netmeeting_attr_calltoprop;Has to contain the contact data of  'contact' that should be called. <br>The data has to have the following semantics.<br><br>ILS Server/email adress e.g. ils.netmeeting.de/contact@testmail.com
netmeeting_attr_modeprop;Holds the mode of the control.<br><br>Possible are:<br><br>FULL, PREVIEWONLY, PREVIEWNOPAUSE, REMOTEONLY, REMOTENOPAUSE, DATAONLY<br>
njx__attr_dropmethod;Name of the event that is sent to the adapter when the user is dragging another DROPICON control over this control and drops it there. Do not use this parameter if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). 
njx__attr_method;Name of the event that is sent to the adapter when clicking on the control.
njx__attr_onclickmethod;Name of the event that is sent to the adapter when the user selects a row.<br><br>In the event handler you can find the selected rows by iterating through the rows and finding out which one's selected element is set to "true". 
njx__attr_statusprop;Name of the adapter parameter that dynamically passes information how the control should be rendered and how it should act. Valid parameter values at runtime: "INVISIBLE", "FOCUS", "FOCUS_NO_SELECT", "ERROR", "ERROR_NO_FOCUS". Use DISPLAYPROP to dynamically define whether the field is displayonly.
njx__attr_styleprop;Name of the adapter parameter that dynamically provides explicit style information for the control.
njx__attr_titleprop;Name of the adapter parameter that dynamically defines the title of the control. The title is displayed as tool tip when ther user moves the mouse onto the control.
njx__attr_visibleprop;Name of the adapter parameter that provides the information if this control is displayed or not. As consequence you can control the visibility of the control dynamically.
njx__dateinput_attr_valueprop;Name of the adapter parameter that provides the content of the control. 
njx__icon_attr_imageprop;Name of adapter parameter that provides as value the URL of the image that is shown inside the control.
njx__tree_attr_tooltipprop;Name of the adapter parameter that provides for a text that is shown if the user moves the mouse over the tree item (tooltip).
njx_absarea_attr_xprop;Name of adapter parameter for the x-coordinate.
njx_absarea_attr_yprop;Name of adapter parameter for the y-coordinate.
njx_absarea_attr_zprop;Name of adapter parameter for the z-coordinate.
njx_absdynicon_attr_heightprop;Name of parameter returning the height.
njx_absdynicon_attr_method;Event being sent to the adapter when clicking on the icon. You do not have to define a value but can also use the icon just as a dynamic image display.
njx_absdynicon_attr_valueprop;Name of the adapter parameter providing the URL of the image to be displayed as an icon.
njx_absdynicon_attr_widthprop;Name of parameter returning the width.
njx_absdynicon_attr_xprop;Name of parameter returning the X position.
njx_absdynicon_attr_yprop;Name of parameter returning the Y position.
njx_absdynicon_attr_zprop;Name of parameter returning the Z position.
njx_absfield_attr_popupmethod;Name of the event that is sent to the adapter when the user requests value help by pressing F4 or F7 or by clicking into the FIELD with the right mouse button. See at chapter 'Popup Dialog Management' for more details. If the POPUPMETHOD is defined, a small icon is shown inside the field to indicate to the user that there is some value help available.
njx_absfield_attr_statusprop;Name of the adapter parameter that dynamically passes information how the field should be rendered and how it should act.
njx_absfield_attr_valueprop;Parameter of the adapter to provide the content of the control.
njx_absicon_attr_method;Name of the event that is sent to the adapter when clicking on the icon. If the name is not specified, the data of the page is synchronized with the server by clicking on the icon.
njx_abstable0_attr_xprop;Name of adapter parameter for the x-coordinate.
njx_abstable0_attr_yprop;Name of adapter parameter for the y-coordinate.
njx_abstable0_attr_zprop;Name of adapter parameter for the z-coordinate.
njx_abstextout_attr_valueprop;Name of the adapter parameter providing the text to be displayed.
njx_abstr_attr_visibleprop;Name of an adapter parameter that provides the information if this control is displayed or not. As consequence you can control the visibility of the control dynamically.
njx_abstr_attr_xprop;Name of adapter parameter for the x-coordinates.
njx_abstr_attr_yprop;Name of adapter parameter for the y-coordinates.
njx_abstr_attr_zprop;Name of adapter parameter for the z-coordinates.
njx_activex_attr_reloadprop;Name of the adapter parameter that indicates that the ActiveX control is reloaded with every response from the server that changed data of the ActiveX control.
njx_attr_valueprop;Server side representation of the control's value.
njx_breadcrumb_attr_breadcrumbprop;Name of the adapter parameter that represents the control in the adapter.
njx_button_attr_method;Name of the event that is sent to the adapter when the user presses the button.
njx_button_attr_nameprop;Name of an adapter parameter that provides the text to be displayed inside the button. Typically buttons have static texts either defined by the property "name" or "textid". Via "nameprop" you can dynamically set the button's text by your application. Use the nameprop in cases the button's text should change dependent on your logic.<br><br>Example: you may want to define the button's text to reflect the next status the user can set to a business object.
njx_buttonlist_attr_buttonlistprop;Name of the adapter parameter that represents the control in the adapter.
njx_chart_attr_arrayprop;The chart control renders a set of items. Each item represents a line (or corresponding chart visualization, e.g. a set of bars). The ARRAYPROP attribute  defines the name of the adapter parameter that represents this lines-structure.
njx_checkbox_attr_valueprop;Name of the adapter parameter that represents the control in the adapter.
njx_clienttree_attr_imageclosedprop;Name of the adapter parameter that provides for the image URL which is shown for closed tree nodes. The value may be different from tree node to tree node. Each tree node may have an own image.
njx_clienttree_attr_imageopenedprop;Name of the adapter parameter that provides the image URL which is shown for opened tree nodes or end tree nodes. The value may be different from tree node to tree node. Each tree node may have an own image.
njx_clienttree_attr_oncontextmenumethod;Name of the event that is sent to the adapter when the user presses the right mouse button in an empty area of the client tree.
njx_clienttree_attr_treeclassprop;Name of the adapter parameter that passes back the name of a style sheet class that is taken to render the client tree's background area. - Similar to the property TREESTYLEPROP, but now a style class is passed, not the style itself.
njx_clienttree_attr_treecollectionprop;Name of the adapter parameter that represents the control in the adapter.
njx_clienttree_attr_treestyleprop;name of the adapter parameter that dynamically provides for a style value that is passed to the control's area (background of the client tree). You can as consequence e.g. define the background-colour of the tree dependent on your server side logic.
njx_colinfo_attr_visibleprop;Name of the adapter parameter that tells if the corresponding column that is associated with the COLINFO control is displayed or not.
njx_column_attr_celltitleprop;Name of the adapter parameter that provides the tooltip of this cell.
njx_column_attr_imageprop;Name of the adapter parameter that provides an image URL. The image is rendered at the very left of the column's area - in front of the text (PROPERTY property definition).
njx_column_attr_linkmethod;Name of the event that is sent to the adapter if user clicks the column's text. 
njx_column_attr_textclassprop;Name of the adapter parameter that provides a style class to be used for rendering the content.<br><br>You can set up a limited number of style classes inside your style sheet definition - and dynamically reference them per grid cell.
njx_column_attr_textstyleprop;Name of the adapter parameter that provides a style-string that is used for rendering the column's content.<br><br>As consequence you can indiviudally assign a CSS-style to each cell of your text grid.
njx_combo_attr_validvaluesprop;Name of the adapter parameter that provides the valid values that are available as selectable options.
njx_dateinput_attr_fromprop;Name of the adapter parameter that provides a lower limit for the value of the control. The value is used for client side validation of user input.
njx_dateinput_attr_infoprop;Name of the adapter parameter that provides style information that is used inside the date popup.
njx_dateinput_attr_secondsvisprop;Name of the adapter parameter that provides a boolean that indicates if to show additional seconds. This property make sense only if property DATATYPE is set to "daytime".
njx_dateinput_attr_toprop;Name of the adapter parameter that provides an upper limit for the value of the control. The value is used for client side validation of user input.
njx_dlmenu_attr_menuprop;Name of the adapter parameter that represents the control in the adapter.
njx_dropicon_attr_draginfoprop;Name of the adapter parameter that provides for information that is passed to the adapter when dropping this control over another DROPICON. Do not use this property (or property DROPINFO respectively) if you do not want the user to drag this control. 
njx_dropicon_attr_dropinfoprop;Name of the adapter parameter to that the "drag info" of the dragged DROPICON control is set. Do not use this property if this control should not accept other DROPICON controls within a drag and drop process (i.e. is not a drop target). 
njx_field_attr_autocallpopupmethod;Name of the adapter parameter that controls that the field's value help event is sent to the adapter with a certain offset (milliseconds) after last key down event.
njx_field_attr_bgcolorprop;Name of the adapter parameter that provides the background color of the control.
njx_field_attr_decimaldigitsprop;Name of the adapter parameter that provides information how many decimal digits are to be displayed (i. e. digits before the decimal character). If this feature is used, the DATATYPE property must be set to 'float'.
njx_field_attr_digitsprop;Name of the adapter parameter that provides information how many digits are to be displayed (i. e. digits before the decimal character).  If this feature is used, the DATATYPE property must be set to 'float'.
njx_field_attr_fgcolorprop;Name of the adapter parameter that passes back a color value (e.g. "#FF0000" for red color). The color value is used as text color in the control. - The background color is automatically chosen dependent from the text color: for light text colors the background color is black, for dark text colors the color is default. Use BGCOLORPROP to choose both - text and background color.
njx_field_attr_maxlengthprop;Name of the adapter parameter that provides the maximum number of characters that a user may enter. Consider to use MAXLENGTH to define this number in a static way.
njx_field_attr_popupmethod;Name of the event that is sent to the adapter when the user requests value help by pressing F4 or F7 or by clicking into the FIELD with the right mouse button. When using the popupmethod together with the NJX:EVENTDATA control in a grid, then the event name must have the griddataprop name as prefix. Example: mygrid.mypopupmethod. If the POPUPMETHOD is defined, a small icon is shown inside the field to indicate to the user that there is some value help available.
njx_field_attr_popupprop;Name of the adapter parameter that provides the information whether a POPUPMETHOD is available or not. This feature is used in scenarios in which a FIELD offers e.g. value help or not, depending on business logic inside the adapter.
njx_field_attr_validationprop;Name of the adapter parameter that provides a regular expression for the validation of the field. Works the same way as VALIDATION but in a dynamic way.
njx_field_attr_validationuserhintprop;If using validation expressions (either property "validation" or "validationprop") then a popup comes up if the user inputs wrong values into a field. Inside this popup a certain text may be added in order to explain to the user what he/she did not correctly input. This text can be either statically defined or dynamically - by using this property.
njx_field_attr_valuetextprop;Name of the adapter parameter that provides a "human understandable" description for the value: in some cases you enter an id into a FIELD but want to display the id and a description to the user. At runtime, the values provided by the VALUEPROP- and the VALUETEXTPROP-property are combined into one text (string) that is returned into the FIELD.
njx_fileupload_attr_cfileprop;Name of the adapter parameter in which the client file name is passed at upload time.
njx_fileupload_attr_method;Name of the event that is sent to the adapter when a file is uploaded. The file data is available on the server at the point of time this method is called.
njx_fileupload_attr_sfileprop;Name of the adapter parameter in which at upload time the name of the target  file is written, which is a copy of the client file in the server file system. Note that this file name is not the same as the client file name.
njx_flexline_attr_infoprop;Name of the adapter parameter that represents the control in the adapter.
njx_googlemap_attr_addressprop;Name of adapter parameter that returns the address to be displayed - e.g. "New York" or "1600 Amphitheatre Pky, Mountain View, CA"
njx_googlemap_attr_infotextprop;Name of the adapter parameter that provides for an additional help text. If used the text is displayed within an info window that points to the center of the map. 
njx_googlemap_attr_latitudeprop;Name of the adapter parameter that returns the latitude in decimal format. Example: in order to display Palo Alto (United States) return "34.4419". Return "1000.0" in order to hide the map.
njx_googlemap_attr_longitudeprop;Name of the adapter parameter that returns the longitude in decimal format. Example: in order to display Palo Alto (United States) return "-122.1419". Return "1000.0" in order to hide the map. 
njx_googlemap_attr_zoomlevelprop;Name of the adapter parameter that provides for the zoom level (integer). Default value is 4. 
njx_grid_attr_focusprop;Name of the adapter parameter that indicates if the row receives the keyboard focus.<br><br>If more than one lines are returning "true", the first of them is receiving the focus.
njx_iconlist_attr_iconlistprop;Name of the adapter parameter that represents the control in the application.
njx_imageout_attr_valueprop;Name of the adapter parameter that provides as value the URL of the image that is shown inside the control.
njx_menu_attr_menucollectionprop;Name of the adapter parameter that represents the control in the adapter.
njx_menu_attr_toggleimageprop;Name of the adapter parameter that provides a URL that defines the toggle image. The toggle icon is shown on the right end of a menu item that has subitems.
njx_methodlink_attr_valueprop;Name of the adapter parameter that provides the text that is shown as link.
njx_multiselect_attr_valueprop;Name of the adapter parameter representing this control in the application.
njx_netmeeting_attr_calltoprop;Name of the adapter parameter that provides the contact data of the 'contact' that should be called. <br>The data has to have the following semantics.<br><br>ILS Server/email adress e.g. ils.netmeeting.de/contact@testmail.com
njx_netmeeting_attr_modeprop;Name of the adapter parameter that holds the mode of the control.<br><br>Possible are:<br><br>FULL, PREVIEWONLY, PREVIEWNOPAUSE, REMOTEONLY, REMOTENOPAUSE, DATAONLY<br>
njx_newsfeed_attr_infoprop;Name of the adapter parameter that represents the control in the adapter.
njx_report_attr_reportprop;Name of the server side data representation of the control.
njx_rowtablearea_attr_bwdtabkeymethod;Name of the event that is sent to the adapter when the user presses SHIFT and TAB keys within the first cell of a grid line. Use property BWDTABKEYFILTER to associate this call with a cell of choice.
njx_rowtablearea_attr_fwdtabkeymethod;Name of the event that is sent to the adapter when the user presses the TAB key within the very last cell of the grid (last cell within the last line). Use property FWDTABKEYFILTER to associate this call with a grid column.
njx_rowtablearea_attr_griddataprop;Name of the adapter parameter that represents the control in the adapter.
njx_rowtablearea_attr_oncontextmenumethod;Name of the event that is sent to the adapter when the user presses the right mouse button in the grid, but not on an existing row, but in an empty area of the grid.
njx_scheduleline_attr_controlkeyprop;Name of an adapter parameter to that the information is set whether the user pressed the CTRL key when selecting a cell.
njx_scheduleline_attr_dropinfoprop;Name of the adapter parameter to that the id of the dragged cell is set. Do not use this property if you do not want to support drag and drop within the SCHEDULELINE. The server side property needs to be of type "String".
njx_scheduleline_attr_imageprop;Name of an adapter parameter that returns a comma separated string of image URLs. An URL either is an absolute URL or a relative URL. If using a relative URL then be aware of that the generated page is located directly inside your project's directory.<br>Example: "images/green.gif\;\;red.gif"
njx_scheduleline_attr_ondropmethod;
njx_scheduleline_attr_onmovemethod;Name of the event that is sent to the adapter on drop of one cell (source) over another cell (target). Use property DROPINFOPROP to get the id of the dragged cell (source). Use SELSCHEDULEPROP to get the id of the cell that got the drop (target).
njx_scheduleline_attr_selectmethod;Name of the event that is sent to the adapter when the user selects one schedule item with the mouse.
njx_scheduleline_attr_selscheduleprop;Name of an adapter parameter in which the id of the selected schedule item is passed.
njx_scheduleline_attr_seltypeprop;Name of an adapter parameter that is used in the following way:<br><br>If the user selects an item it can also be determined, if the item is selected by the left or by the right mouse button. In case the user uses the left mouse button, the value LEFT is passed into the property, which is referenced by the SELTYPEPROP property. In case the user uses the right mouse button, the value RIGHT is passed.
njx_scheduleline_attr_tooltipprop;Name of an adapter parameter that contains the comma separated list of help texts that are displayed on mouse over (tooltip).
njx_scheduleline_attr_valueprop;Name of the adapter parameter that represents the control in the adapter.<br><br>It returns a semicolon separated list of schedule items. Each item is represented by a color, a width, a text and a selection id. The width is not a pixel width but represents a "portion" that this schedule item represents.<br><br>Example: #FF0000\:1000\;Text 1\;1\;#00FF00\;500\;Text 2\;2<br><br>The total "logical width" is 1500. The first item occupies 2/3 of the width, the right item occupies 1/3 of the width.<br><br>The selection is required in case you want to react on user selections. If a user clicks onto one schedule item then the adapter is notified by a certain event - the id of the schedule item is passed as reference. Please have a look into the corresponding property descriptions.
njx_skypecall_attr_valueprop;Name of the adapter parameter that contains the phone number or the Skype ID of the person that should be called. It is also possible to set some parameters.<br>For further information, see the Skype API.<br><br>Note: The Skype client must be installed if you want to use this control.<br>
njx_str_attr_onclickmethod;Name of the event that is sent to the adapter when the user clicks a line.
njx_str_attr_ondblclickmethod;Name of the event that is sent to the adapter when the user double clicks a line.
njx_str_attr_proprefprop;Name of the adapter parameter that is filled when the user clicks a FIELD control. The VALUEPROP of the clicked field control will passed.
njx_str_attr_valueprop;Name of the adapter parameter that defines if the row is selected or not.
njx_subpage_attr_valueprop;Name of the adapter parameter that provides the URL to be displayed inside the SUBPAGE control.<br><br>Please note: the SUBPAGE control only re-renders its inner content if the URL provided by the property really changes. The SUBPAGE control does not "know" if something changed inside the contained page and that it has to redraw the page. - If you want to refresh the inner page explicitly append some random number to your URL, e.g.: http://...url...?RANDOM=45435. By changing the number the browser will reload the URL.
njx_tabsel_attr_tabselprop;Name of the adapter parameter that represents the control in the adapter.
njx_tabstrip_attr_tabstripprop;Name of the adapter parameter that represents the control in the adapter.
njx_tagcloud_attr_tagcloudprop;Name of the adapter parameter that represents the control in the adapter.
njx_textgrid2_attr_ondblclickmethod;Name of the event that is sent to the adapter when the user selects a row by a double click.<br><br>In the event handler you can find the selected rows by iterating through the rows and finding out which one's selected element is set to "true". 
njx_textgrid2_attr_singleselectprop;Name of an adapter parameter that dynamically defines whether SINGLESELECT is true or false.
njx_textgrid_attr_focusedprop;Name of an adapter parameter that is used to mark if an individual row of the text grid should receive the focus.<br><br>If the user selects a text grid row, the value "true" is passed into the corresponding array element of the adapter parameter.
njx_textgrid_attr_oncontextmenumethod;Name of the event that is sent to the adapter when the user clicks with the right mouse button onto an empty area of the grid.
njx_textgrid_attr_selectprop;Name of the adapter parameter that is used to mark if an individual row of the text grid is selected.<br><br>If the user selects a text grid row, the value "true" is passed into the corresponding array element of the adapter parameter.
njx_textout_attr_bgcolorprop;Name of an adapter parameter that passes back a color value (e.g. "#FF0000" for red color). The color value is used as background color in the control. The color of the text color is automatically chosen dependent from the background color: for light background colors the text color is black, for dark background colors the color is white. Use FGCOLORPROP to choose the text color on your own.
njx_textout_attr_fgcolorprop;Name of an adapter parameter that passes back a color value (e.g. "#FF0000" for red color). The color value is used as text color in the control. The background color is automatically chosen dependent from the text color: for dark text colors the background color is transparent (default), for light text colors the color is black. Use BGCOLORPROP to choose both - the text and background color.
njx_timer_attr_intervalprop;Name of the adapter parameter that defines the timer interval duration. If 0 is passed then the timer is stopped.
njx_timer_attr_method;Name of the event that is sent to the adapter by the timer.
njx_toggle_attr_controlmethod;Name of the event that is sent to the adapter when the user clicks on the toggle control and presses the Ctrl-key the same time.
njx_toggle_attr_shiftmethod;Name of the event that is sent to the adapter when the user clicks on the toggle control and presses the Shift-key the same time.
njx_toggle_attr_valueprop;Name of the adapter parameter that represents the value of the control.
njx_treenode3_attr_validdraginfosprop;Name of an adapter parameter that contains a comma separated list of valid drag informations. 
njx_treenode_attr_imageprop;Name of an adapter parameter that provides for a image for the tree node.<br><br>Each node may provide for its own image, e.g. dependent on the type of node.<br><br>If the adapter property passes back an empty string, then the image is taken from the static definitions that you may parallely do by using the properties IMAGEOPENED, IMAGECLOSED and IMAGEENDNODE.
page_attr_adapterlisteners;Semicolon separated list of classes which connect to the server side adapter processing as adapter listeners (each one supporting the interface IAdapterListener).
page_attr_hotkeys;
page_attr_openajaxsupport;Adds registration code into the page that registers globally used objects / evets etc. to the Open AHAX Hub in order to potencially synchronize the co-existance of different toolsets within one page. Only used when being familiar with OpenAJAX aspects.
rowchartarea_attr_gridlinesprop;Name of an adapter property that provides the information if 'automatic snap to grid' is enabled or disabled.<br><br>As consequence you can control the 'automatic snap to grid' function of the control dynamically.<br><br>The server side property needs to be of type "boolean".
rowchartarea_attr_gridlinexdistance;Define the X-Distance of the gridlines. Default is 50.<br><br>Notice: The X-Distance does not have any effect if 'automatic snap to grid' is disabled. Please have a look at the USEGRIDLINES and GRIDLINESPROP which are already explained above.
rowchartarea_attr_gridlineydistance;Define the Y-Distance of the gridlines. Default is 50.<br><br>Notice: The Y-Distance does not have any effect if 'automatic snap to grid' is disabled. Please have a look at the USEGRIDLINES and GRIDLINESPROP which are already explained above.
rowchartarea_attr_infoprop;Name of the adapter property that represents the control on server side.<br>Return type must be "CHARTAREAInfo".<br>
rowchartarea_attr_pagebaseddragdrop;Default is false. Allows to 'drag and drop' icons from another frame into the ROWCHARTAREA control. <br><br>Set to true if you want to enable 'drag and drop' only within the page the ROWCHARTAREA control is placed in.
rowchartarea_attr_usegridlines;Enables/Disables 'automatic snap to grid'. Default is true.<br><br>You can define the X- and Y-Distance of the grid.
scheduleline_attr_controlkeyprop;Name of an adapter property to that the information is set whether the user pressed the CTRL key when selecting a cell. Property needs to be of type "boolean".
scheduleline_attr_crosslineids;Flag (true | false) that indicates that cells of different lines (within ROWTABLEAREA2) does not have same ids. If set to false the control is able to detect and skip unnecessary re-draws (performance).
scheduleline_attr_draginfoprop;Name of an adapter property that returns a comma separated string of information that is passed to the adapter when dropping a cell's text over another cell. Do not use this property (or property DROPINFO respectively) if you do not want the user to drag cell texts.
scheduleline_attr_dropinfoprop;Name of an adapter property to that the id of the dragged cell is set. Do not use this property if you do not want to support drag and drop within the SCHEDULELINE. The server side property needs to be of type "String".
scheduleline_attr_imageorientation;Flag that indicates to render the image at the left or right hand of the text.
scheduleline_attr_imageprop;Name of the adapter property that returns a comma separated string of image URLs. An URL either is an absolute URL or a relative URL. If using a relative URL then be aware of that the generated page is located directly inside your project's directory.<br>Example: "images/green.gif\;\;red.gif"
scheduleline_attr_ondropmethod;Name of an adapter method that is called on drop of one cell (source) over another cell (target). Use property DROPINFOPROP to get the id of the dragged cell (source). Use SELSCHEDULEPROP to get the id of the cell that got the drop (target).
scheduleline_attr_onmovemethod;Name of an adapter method that is called on drop of one cell (source) over another cell (target). Use property DROPINFOPROP to get the id of the dragged cell (source). Use SELSCHEDULEPROP to get the id of the cell that got the drop (target).
scheduleline_attr_tooltipprop;Name of an adapter property of type "String" that contains the comma separated list of help texts that are displayed on mouse over (tooltip).
scheduleline_attr_verticalschedule;Flag that indicates if the line is rendered vertically. Default is false.
skypecall_attr_valueprop;Adapter object that contains the phone number or the Skype ID of the person that should be called. It is also possible to set some parameters.<br>For further information, see the Skype API.<br><br>Note: The Skype client must be installed if you want to use this control.<br>
stripsel_attr_scrollable;Flag that indicates if the control shows scroll icons on the right upper corner. Default is true
stripsel_attr_scrolllefttitle;Help text that is displayed if the user moves the mouse of the scroll to left icon.
stripsel_attr_scrollrighttitle;Help text that is displayed if the user moves the mouse of the scroll to right icon.
textgrid_attr_withselectioncolumnicon;Flag that indicates whether the selection column shows a "select all" icon on top. Default is true.
xci_attr_statusprop;Name of server side data element that controls the control's display status.
xci_attr_valueprop;Server side representation of the control's value.
xci_chart_attr_arrayprop;The chart control renders a set of items. Each item represents a line (or corresponding chart visualization, e.g. a set of bars). The ARRAYPROP attribute  defines the name of the server side data element that represents this lines-structure.
xci_dateinput_attr_fromprop;Name of server side data element that represents the from-value for controlling the selectable range of dates.g
xci_dateinput_attr_toprop;Name of server side data element that represents the to-value for controlling the selectable range of dates.
xci_report_attr_reportprop;Name of the server side data representation of the control.
xci_rowtabarea_attr_openedindexprop;Name of XML element that represents the index of the "tab" that is currently opened.<br><br>There are two ways of using the property: either you can define by value which "tab" should be opened. Or you can react on a user "tab" selection inside a processing method, (see also the property OPENMETHOD!).<br><br>The left most "tab" represents index "0", the next one "1", etc.
xci_rowtabarea_attr_openmethod;Name of the processing method that is invoked when the user does a "tab" selection. You can access the index of the "tab" that is opened via the property OPENEDINDEXPROP.
xcidatadef_attr_dataprop;The XCIDATADEF control allows to create data structures for the processing side that are created in addition ot data structures that are created by the normal controls. The DATAPROP represents the name of the data element that is created for the server side adapter processing.<br>
xcidatadef_attr_datatype;Data type of the data element.  One of the list of valid values. Using the reserved word "type" you can nest multiple XCIDATADEF structures.
xcipage_attr_xciname;Nam of the page that is the central anchor for addressing the corresponding processing on server side. The name is automatically filled when creating the page and should not be changed afterwards.
chart_attr_showlines;If set to false  the line is not drawn for this dataset.
njx_chart_attr_labelprop;Name of the adapter parameter, which contains the label value. The field is generated as child of the valueprop field of the RCHART control.
_attr_contextmenumethod;Name of the method on adapter level that is called when the user presses the right mouse button in an empty area.
_attr_dropoffsetprop;Name of the adapter property that dynamically defines the offset used for the drop target.
_attr_dropwidthprop;Name of the adapter property that dynamically defines the width of the drop target.
_attr_styleclass;CSS style class used for rendering.
_attr_testtoolid;Use this attribute to assign a fixed control identifier that can be later on used within your test tool in order to do the object identification
_attr_withupdown;If set to true, corresponding up and down arrows appear on the right hand side. These arrows allow for changing the order of the selected items.
_desc_DragDrop;Drag And Drop
_desc_Miscellaneous;Miscellaneous
chart_attr_charttypeprop;Not used for Application Designer.
chart_attr_colors;Comma seperated list of colors. Example: #FF6060;#60FF60;#6060FF. A color is used to render a line. The first color is used for the first line, the second color for the second line and so on. If more lines exist than colors, the colors are used in turns. If no colors are specified a set of default colors is used. 
chart_attr_colorsprop;Not used for Application Designer.
chart_attr_outputformatprop;Not used for Application Designer.
chartcolumn_attr_title;The text shown for this item as corresponding title on the xaxis. If no title is specified then the property name (see property above)  is used as xaxis title.
chartcolumn_attr_titleprop;Not used in Application Designer.
combo_attr_allowmultiselection;If set to true then multiple selections are allowed.
csvcolumn_attr_celltooltiptitleprop;Name of the property of the row item object that passes back (comma separated) tool tip titles. The titles will show up if the user is moving slowly the mouse over the grid cells.
csvcolumn_attr_headerimageprop;Name of the property that passed back (comma separated) image URLs. The images are applied to the header.
csvcolumn_attr_imageprop;Name of the property of the row item object that passes back (comma separated) image URLs. The URL must either be an absolute URL or a relative URL.
csvcolumn_attr_straighttextprop;Name of the property which dynamicalle defines whether STRAIGHTTEXT is true or false.
dlmenu_attr_cellseparatoronly;If set to "true" then only a very thin cell separator is added between two menu items. Otherwise the separation is rendered explicitely.
field_attr_autocallpopupmethodoffset;The offset  (milliseconds) after the last key down event for calling the AUTOCALLPOPUPMETHOD. Makes only sense if an AUTOCALLPOPUPMETHOD is specified.
gridcolheader_attr_visibleprop;Not supported in PAGE.
iconlist_attr_withrightpadding;Flag (boolean) that indicates whether to insert a padding right hand of the last icon. This attribute does apply for horizontal ICONLIST only (see attribute VERTICAL). Default is true.
intpopuppage_attr_intpopuppageonly;Open popups always as page-based popups.
intpopuppage_attr_preferedframe;Prefered frame for the popup.
intpopuppage_attr_withclose;Controls the visibility of the closebutton in the titlebar.Default value is true.
methodlink_attr_linkstatusprop;Name of the adapter property that dynamically passes information how the link should be rendered and how it should act. Valid values are "DISPLAY" and "EDIT".
njx__attr_dropoffsetprop;Name of the adapter parameter that dynamically provides the offset used for the drop target.
njx__attr_dropwidthprop;Name of the adapter parameter that dynamically provides the width of the drop target.
njx__attr_flushmethod;When the data synchronization of the control is set to FLUSH="server" then you can specify an explicit event to be sent when the user updates the content of the control. By doing so you can distinguish on the server side from which control the flush of data was triggered. 
njx_attr_natcomment;The value of this attribute is generated as comment line into the parameter data area of the Natural adapter, before the field name. The Map Converter, for instance, uses this attributes to indicate for a generated statusprop variable to which field the statusprop belongs.
njx_attr_natdc;Specifies the character that is to be used as the decimal character in the format specifications of variables with decimal format in the parameter data area of the Natural adapter. For example, if a comma (,) is specified, "(N7,2)" is generated. If a period (.) is specified, "(N7.2)" is generated. The default is the period (.). 
njx_attr_natname;If a Natural variable with a name not valid for Application Designer (for instance #FIELD1) shall be bound to the control, a different name (for instance HFIELD1) can be bound instead. If the original name (in this case #FIELD1) is then specified in this attribute, the original name is generated into the parameter data area of the Natural adapter and a mapping between the two names is generated into the PROCESS PAGE statement of the Natural adapter. This mapping must not break a once defined group structure. If for instance a grid control that is bound to a name of GRID1 contains fields that are bound to FIELD1 and FIELD2 respectively, the corresponding njx:natname values may be #GRID1.#FIELD1 and #GRID1.#FIELD2, but not #GRID1.#FIELD1 and #MYGRID1.#FIELD2. 
njx_attr_natrecursion;Properties of controls used in the page might have a recursive structure. These structures are mapped to multi-dimensional arrays in the Natural adapter. Natural arrays are limited to three dimensions. Therefore, the recursion depth of these structures can be limited using this property.
njx_attr_natsinglebyte;Specifies whether string properties of the page are to be mapped to Unicode strings (U) or code page strings (A) in Natural. The value "true" means code page strings. The value "false" means Unicode strings (default). 
njx_attr_natsource;Specifies a name for the Natural adapter object that will later be generated from your page layout. During adapter generation, this name is checked to match the Natural naming conventions for objects. If you do not specify a name here, the adapter name is taken from the layout name. This might result in names that are not valid for Natural objects. These adapters can only be used in Natural for Eclipse. 
njx_attr_natsss;The controls ROWTABLEAREA2 and MGDGRID support server-side scrolling and sorting. The corresponding data structures are generated into the parameter data area of the Natural adapter only if this attribute has been set to true. The default is false. This is for compatibility with earlier versions. For the control TEXTGRIDSSS2, the server-side scrolling data structures are always generated.
njx_attr_natstringtype;If the control shall be bound to a Natural system variable of string format with the attribute njx:natsysvar, this attribute indicates the format of the string, A (code page) or U (Unicode). The default is A.
njx_attr_natsysio;If the control shall be bound to a Natural system variable with the attribute njx:natsysvar, this attribute indicates if the system variable is modifiable. The default is false.
njx_attr_natsysvar;If the control shall be bound to a Natural system variable, this attribute specifies the name of the system variable.
njx_attr_statusprop;Name of the adapter property that dynamically passes information how the field should be rendered and how it should act.
njx_attr_titleprop;
njx:buttonitemlist_attr_buttoncount;Maximum count of buttons in the buttonlist. <br><br>If no buttoncount is defined then a default of 10 is assigned.
njx:buttonitemlist_attr_buttonlistprop;Name of the adapter parameter that represents the control in the adapter.<br>
njx:buttonitemlist_attr_hdist;Horizontal distance between the buttons. Can be specified either in pixels or as percentage value.<br><br>If no width is defined then a default width of 2 pixels is assigned.
njx:buttonitemlistfix_attr_buttonlistprop;Name of the adapter parameter that represents the control in the adapter.
njx:buttonitemlistfix_attr_hdist;Horizontal distance between the buttons. Can be specified either in pixels or as percentage value.<br><br>If no width is defined then a default width of 2 pixels is assigned.
njx_chart_attr_charttypeprop;The name of the adapter parameter which provides the charttype.
njx_chart_attr_colorsprop;The name of the adapter parameter which provides the colors to be used in the chart as comma separated list.
njx_chart_attr_outputformatprop;The name of the adapter parameter which provides the outputformat.
njx_chartcolumn_attr_titleprop;The name of the adapter parameter which provides the title.
njx_csvcolumn_attr_celltooltiptitleprop;Name of the property of the row item object that passes back (comma separated) tool tip titles. The titles will show up if the user is moving slowly the mouse over the grid cells.
njx_csvcolumn_attr_headerimageprop;Name of the adapter parameter which provides a comma separated list of image URLs. The images are applied to the header.
njx_csvcolumn_attr_imageprop;Name of the property of the row item object that passes back (comma separated) image URLs. The URL must either be an absolute URL or a relative URL.
njx_csvcolumn_attr_straighttextprop;Name of the adapter parameter which dynamically defines whether STRAIGHTTEXT is true or false.
njx:fieldlist_attr_fieldcount;Maximum count of fields in the fieldlist. If no fieldcount is defined then a default of 10 is assigned.
njx:fieldlist_attr_fieldlistprop;Name of the adapter parameter that represents the control in the adapter.<br>
njx:fieldlist_attr_hdist;Horizontal distance between the fields Can be specified either in pixels or as percentage value.<br><br>If no width is defined then a default width of 2 pixels is assigned.
njx_googlemap2_attr_infoprop;Name of adapter parameter that represents the control in the adapter.
njx_gridcolheader_attr_visibleprop;Name of the adapter parameter that provides the information if the column is displayed or not.
njx_innerdiv_attr_leftprop;Name of adapter parameter that dynamically provides the left position of the control. Must return a valid value for 'left position'.
njx_innerdiv_attr_widthprop;Name of adapter parameter that dynamically prvides the width of the control. Must return a valid width.
njx_methodlink_attr_linkstatusprop;Name of the adapter parameter that dynamically defines how the link should be rendered and how it should act. Valid values are "DISPLAY" and "EDIT".
njx_njx:buttonitemlist_attr_buttonlistprop;Name of the adapter parameter that represents the control in the adapter.

njx:njxvariable_attr_name;The name of the variable.
njx_page_attr_contextmenumethod;Name of the event that is sent to the adapter when the user clicks into the page with the right mouse button and no other control (e.g. texgrid, tree,...) handled the click so far.
njx_page_attr_xciname;
njx__attr_contextmenumethod;Name of the event that is sent to the adapter when the user presses the right mouse button in an empty area.
njx_text_attr_titleprop;Property of adapter that dynamically defines the title of the control. The title is displayed as tool tip when ther user moves the mouse onto the control.
njx_textgrid_attr_directselectmethod;Use ONCLICKMETHOD and ONDBLCLICKMETHOD instead.
njx_textgrid_attr_draginfoprop;Name of the row item property that passes back the line's "drag info". When using this attribute the grid lines can be dragged onto "drop targets" (e.g. DROPICON control). The dragged line is identified by its "drag info". Use any string/information applicable.
njx_xmlns;Internal use only. Do not modify this.
page_attr_centralcontextmenu;If set to 'true' then the context menu is rendered in a central frame. This central frame can be specified via the "popupdivframe" setting in cisconfig. 
page_attr_framebufferpriority;Priority (integer) that is used to manage the page within the CIS frame buffer. Use value "-1" to indicate that the page should not be buffered at all (typically used when having a FILEUPLOAD2 control on the page). Default is "0". Use any other integer value to indicate higher priority.
page_attr_usexmlhttprequest;By default CIS framework is using hidden frame communication (asynchronous server communication). Use this attribute in order to use "XMLHTTPRequests". Typical usage is with timer pages (to avoid seeing ongoing communication to server on browser's statusbar).
pghead_attr_openajaxsupport;Flag that indicates whether the Open AJAX Support is switched ON or OFF. Default is OFF.
pghead_attr_stylesheetfile;URL of a style sheet file used for control rendering.<br> i.e. '../cis/styles/CIS_DEFAULT.css'.
rowtablearea2_attr_invisiblemodeincompletelastrow;If set to "invisible" an incomplete last row is not shown.
textgrid_attr_draginfoprop;Name of the row item property that passes back the line's "drag info". When using this attribute the grid lines can be dragged onto "drop targets" (e.g. DROPICON control). The dragged line is identified by its "drag info". Use any string/information applicable.
treenode3_attr_directselectelement;If set to "textonly" only user clicks on the tree node text will select the node. If set to "allspace" also user clicks outside the area occupied by the node text will select the node.
xci__attr_dropoffsetprop;Name of the server side XML element that dynamically defines the offset used for the drop target.
xci__attr_dropwidthprop;Name of the server side XML element that dynamically defines the width of the drop target.
xci_attr_titleprop;
xci_chart_attr_charttypeprop;The name of the data element which provides the charttype.
xci_chart_attr_colorsprop;The name of the data element which provides the colors to be used in the chart as comma separated list.
xci_chart_attr_outputformatprop;The name of the data element which provides the outputformat.
xci_chartcolumn_attr_titleprop;The name of the data element which provides the title.
xci_csvcolumn_attr_celltooltiptitleprop;Name of the server side XML element of the row item object that passes back (comma separated) tool tip titles. The titles will show up if the user is moving slowly the mouse over the grid cells.
xci_csvcolumn_attr_headerimageprop;Name of the data element which provides a comma separated list of image URLs. The images are applied to the header.
xci_csvcolumn_attr_imageprop;Name of the server side XML element of the row item object that passes back (comma separated) image URLs. The URL must either be an absolute URL or a relative URL.
xci_csvcolumn_attr_straighttextprop;Name of the data element which dynamically defines whether STRAIGHTTEXT is true or false.
xci_gridcolheader_attr_visibleprop;Name of XML element in the server side processing that provides the information if the column is displayed or not.
xci_methodlink_attr_linkstatusprop;Name of the XML element of the server side processing that dynamically defines  how the link should be rendered and how it should act. Valid values are "DISPLAY" and "EDIT".
xci_page_attr_xciname;
xci__attr_contextmenumethod;Name of the method that is called if when the user presses the right mouse button in an empty area.
xci_textgrid_attr_draginfoprop;Name of XML element that that passes back the line's "drag info". When using this attribute the grid lines can be dragged onto "drop targets" (e.g. DROPICON control). The dragged line is identified by its "drag info". Use any string/information applicable.
xciparameter_attr_paramname;Name of the parameter.
xciparameter_attr_paramtype;Type of the parameter. 
_attr_direction;Presets the default(BiDi) direction of the control. Use black string in order to have the default value.
_attr_displayprop;Name of adapter property that controls whether the field is displayonly(true) or not (false).<br><br>By using this property you can dynamically control the "display"-status of the control by your adapter object.
textgrid_attr_selectableprop;Name of the adapter parameter used for selectable property for the textgrid(textgridsss) control.
_attr_backgroundcolorprop;Name of the adapter property that dynamically sets the background color for the control.
_attr_colspanprop;Colspan property name. 
_attr_onloadbehaviour;DEPRECATED: Loading behaviour of the items into the client.<br><br> "block" (=default). Only "block" is supported´. All other settings are automatically mapped to "block". 
_attr_withsliderfreeze;Setting this to "true" prevents unwanted slider jumps while scrolling up/down in a grid with a huge number of lines (for example 20000).


area_attr_foldableprop;Name of adapter property that dynamically controls whether clicking on the title of the area will fold/unfoald this area. <br><br>Valid values provided by the adapter property are TRUE (=foldable) and FALSE(=not foldable). 
column_attr_width;Width of the control.<br><br>There are two possibilities to define the width:<br><br>(A) Pixel sizing: just input a number value (e.g. "100").<br>(B) Percentage sizing: input a percentage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element (textgrid2, textgridsss2) of the control properly defines a width this control can reference.
field_attr_spinrangemax;An integer value which defines the upper bound of the value range.
field_attr_spinrangemin;An integer value which defines the lower bound of the value range.
fileupload2_attr_submitbuttonname;The name of the submit button in case WITSUBMITBUTTON is set to "true".
fileupload2_attr_submitbuttontextid;"Textid" for the name of the submitbutton if WITHSUBMITBUTTON is set to "true".<br><br>
The "textid" is translated into a corresponding string at runtime.<br><br>Do not specify WITHSUBMITBUTTONNAME if specifying WITHSUBMITBUTTONID.
fileupload2_attr_withsubmitbutton;If set to "TRUE" adds an additional button to the control to start the file upload.
njx__attr_backgroundcolorprop;Name of the adapter parameter that dynamically provides the background color for this control.
njx__attr_displayprop;Name of the adapter parameter that dynamically passes information whether the field is displayonly("true") or not ("false"). Notice that in the Natural code the type for the field is alphanumeric.
njx_area_attr_foldableprop;Name of the adapter parameter that dynamically controls whether clicking on the title of the area will fold/unfoald this area. <br><br>Valid values provided by the adapter parameter are TRUE (=foldable) and FALSE(=not foldable). 
njx_attr_natcv;Name of a Natural control variable that shall be assigned to the control. 
njx_attr_natcvp;Name of a Natural control variable that shall be assigned to the page. The control variable must be defined in a Data Definition (XCIDATADEF) control on the same page. The application can use the control variable to check the modification status of the page.

njx_page_attr_flushmethod;Name of the event that is sent to the adapter in case the page loses the focus.
njx_page_attr_userinputprop;Name of the adapter parameter which will have a value of "true" if some userinput in the page or one of its subpages has been done since the last server-roundtrip.
njx_textgrid_attr_selectableprop;Name of the adapter parameter that specifies wether a row in the grid is selectable (=true) or not (=false). The default is selectable.
njx_xcidatadef_attr_dataprop;The XCIDATADEF control allows to create data structures for the processing side that are created in addition to data structures that are created by the normal controls. The DATAPROP represents the name of the data element that provides the content of the control.<br>
page_attr_userinputprop;Property of the adapter which will have a value of "true" if some userinput in the page or one of its subpages has been done since the last server-roundtrip.
page_attr_withownborder;If set to "true" the page will be surrounded by an additional border.
xcidatadef_attr_array;If set to true, the XCIDATADEF will be an array.
_attr_headernowrap;The textual content of the header is not wrapped automatically. No line break will be performed automatically by the browser. If you want the text of the header to be wrapped, set the value to "false".
_attr_linechartinfoprop;Name of adapter property that represents the line chart on server side. The property must be of type "LINECHARTInfo".
xcidatadef_attr_clientdata;Default is false. If set to true then the data is also send to the browser. Usually applications use the default setting. Only set this to true for small data that is really rendered in the browser.
csvcolumn_attr_celllinkmethodsprop;Name of the row item property that passes back (comma separated) names of cell methods. The corresponding columns (cells) will show the text as method links. On click the provided row item cell method is called.
column_attr_celllinkmethodprop;Name of the row item property that passes back the name of a method or null. If the method name is not null then the corresponding column (cells) will show the text as method link. On click the provided row item cell method is called.
njx__attr_linechartinfoprop;Name of the adapter parameter that represents the line chart in the adapter.
njx__attr_arrayprop;The line chart renders a set of items. Each item represents a point in the line chart. The ARRAYPROP attribute defines the name of the adapter parameter that represents these items.
njx__attr_startdateprop;The line chart renders the values for a specific time range. The STARTDATEPROP attribute  defines the name of the adapter parameter that provides the value for the start date.
njx__attr_enddateprop;The line chart renders the values for a specific time range. The ENDDATEPROP attribute  defines the name of the adapter parameter that provides the value for the end date.
series_attr_id;An id which is used to identify single items or a series of items rendered from this control.
series_attr_name;Text that is displayed inside of this controls for a single series.
njx__attr_loadmethod;Name of the event that is sent to the adapter when the image is loaded.
njx__attr_idsprop;Name of the adapter parameter that dynamically provides a comma separated list of series ids.
njx_series_attr_namesprop;Name of the adapter parameter that dynamically provides a comma separate list of series names.
njx_series_attr_measuresprop;Name of the adapter parameter that dynamically provides a comma separate list of measure names for the series rendered in the line chart.
njx__attr_colorsprop;Name of the adapter parameter that dynamically provides a comma separated list of colors used by this control.
series_attr_measure;Text that is displayed inside of this control for the measure of this series.
_attr_always_flush;If set to TRUE then a specified server flushmethod is also called in case the value has not changed. The default is FALSE, meaning that a server flushmethod is only called for a changed value.
field_attr_editmask;NATPAGE only:  Natural edit mask.
button_attr_switchvisibleproponuserinput;If set to TRUE, the visibleprop is automatically switched to TRUE in case of user input to any input control in this page. The default is FALSE.
_attr_stylevariantprop;Name of the adapter property which dynamically defines the STYLEVARIANT value at runtime.
njx__attr_stylevariantprop;Name of the adapter parameter which dynamically defines the STYLEVARIANT value at runtime.
_attr_linkprop;Name of adapter property providing the URL for the document which should  be opened in a popup dialog when clicking on the link. The URL may either be an absolute URL ("http://....) or may be a relative URL.



njx__attr_linkprop;Name of adapter parameter providing the URL for the document which should  be opened in a popup dialog when clicking on the link. The URL may either refer to a document on the Natural sever (nat:mydoc.pdf) or may be an absolute or relative browser URL ("http://....", ".../mydoc.pdf").
report_attr_showupload;NATPAGE layouts only: If set to "true" then a PDF icon is rendered in the right top corner of the control. When the user clicks on the icon then the report is automatically rendered as PDF and the PDF content is added to the NJX:OBJECTS cache for an upload to the Natural server. The event value-of-reportprop.onUploadPDF is triggered in the Natural application. The Natural application can access the PDF in the NJX:OBJECTS data structure during this event. 
njx_column_attr_celllinkmethodprop;Name of the row item property that passes back the name of a method or null. If the method name is not null then the corresponding column (cells) will show the text as method link. On click the provided row item cell method is called.
njx_selector_attr_valueprop;Name of adapter parameter that indicates the selection status of the row the selector refers to. The value is set and get by the SELECTOR control.
njx_selector_attr_imageprop;Name of the adapter parameter which provides an image URL dynamically at runtime. The image is shown for displaying selected rows.
njx__attr_colspanprop;Name of the adapter parameter which dynamically provides a colspan value at runtime.
njx__attr_nameprop;Name of adapter parameter which dynamically provides the text that is shown inside the control.
njx_area_attr_foldedprop;Name of adapter parameter which controls whether the content of the ROWAREA is folded (true) or displayed (false).<br><br>By using this property you can dynamically control the "folded"-status of the control at runtime.
njx__attr_titleimageprop;Name of adapter parameter which dynamically provides the URL of the image that is shown inside the control.<br><br>The URL must either be an absolute URL or a relative URL.
njx_rowtabarea_attr_openedindexprop;Name of adapter parameter which represents the index of the "tab" that is currently opened.<br><br>There are two ways of using the property: either you can define which "tab" should be opened or you can react to "tab" selections by the user. (Also have a look onto the property OPENMETHOD!).<br><br>The property must be of type "int" or "Integer" (or "String"). The left most "tab" represents index "0", the next one "1", etc.
njx_rowtabarea_attr_openmethod;Name of the event that is sent to the adapter when the user does a "tab" selection. The index of the "tab" that is opened can be transferred to the adapter by using the property OPENEDINDEXPROP.

njx__attr_flashprop;Name of the adapter parameter that triggers a "flashing" of the area. "Flashing" means that the area is animated for a short point of time in order to make the user aware that e.g. some change of data happened inside the area. The value is an index - whenever you change the index then a flashing of the control is triggered on client side.<br><br>Pay attention: do not mix the "flashing" of an area with the "flushing" of controls - "flushing" is the way an input control (e.g. field) triggers server side updates when the user changed the value, "flashing" is pure animation.

njx_coltable0_attr_widthprop;Name of adapter parameter that dynamically defines the height of the control. Must return a valid width.
njx_dynavis_attr_valueprop;Name of adapter parameter that defines if the area is visible ("true") or invisible ("false"). 
njx_hsplit_attr_heighttopprop;Name of adapter parameter that specifies the height of the top split area.<br><br>The value must either be a pixel value ("100") or a percentatge value.

njx_vsplit_attr_widthleftprop;Name of adapter parameter that specifies the width of the left split area.<br><br>The value must either be a pixel value ("100") or a percentatge value.
_attr_autotab;If set to true, an automatic tab is executed for fields with a specified MAXLENGTH when the maxlength value is reached. For fields without a MAXLENGTH specified it has no effect. Default is true.
page_attr_autotab;Sets the default behavior if an automatic tab should be executed for FIELD controls in this layout. Notice that this default is not used for FIELD controls in FLEXLINEs.
_attr_imagedisabledprop;Name of adapter property that provides as value the URL of the image that is shown when the control is disabled.
njx__attr_imagedisabled;Name of adapter parameter that provides as value the URL of the image that is shown inside the control
_attr_imageinactiveprop;Name of adapter property that provides as value the URL of the image that is shown when the control is inactive.
njx__attr_imageinactiveprop;Name of the adapter parameter that provides as value the URL of the image that is shown when the control is inactive.
mfwpfuntions_attr_workplaceproject;If set to a valid project name, standard messages and standard dialogs used by the default workplace framework will be generated into this project. At runtime the messages and dialogs of this project will be used instead of the default ones of the HTMLBasedGUI project. Generated multilanguage files:workplace and popups. Generated layouts:popupyesno and popupok. 
njx__attr_itrstyleprop;Name of the adapter parameter that dynamically provides the style of the control.
_attr_lengthprop;Property of the adapter that defines the width of FIELD in amount of characters.
njx__attr_lengthprop;Name of the adapter parameter that dynamically provides the width of the FIELD in amount of characters.
_attr_focusmgt;Name of adapter property that dynamically controls the focus management in the browser for the current server roundtrip. Valid values provided by the adapter property are: 0 (=default),  1 (= suppress focus), 2 (= set focus), 3 (= open tabs in TABPAGE controls).
njx__attr_focusmgt;Name of adapter parameter that dynamically controls the focus management in the browser for the current server roundtrip. Valid values provided by the adapter are: 0 (=default),  1 (= suppress focus), 2 (= set focus), 3 (= open tabs in TABPAGE controls).
_attr_lookupname;The name for the value within the shared context.
njx__attr_imagedisabledprop;Name of the adapter parameter that provides as value the URL of the image that is shown when the control is disabled.
njx_rowtabsubpages_attr_pagesprop;Name of the adapter parameter that provides the content of the control

njx_statusbar_attr_typeprop;Name of the adapter parameter that provides as value the type of the status message. The type defines the image that is rendered at the beginning of the message.<br><br>Currently there are 3 supported values: E for error, W for warning, S for success.<br><br>Please pay attention: Do not use the name messageType. This name is internally used when no property name is specified.

njx_statusbar_attr_shorttextprop;Name of the adapter parameter that provides as value the message text that is visible inside the status bar. <br><br>Please pay attention: Do not use the name messageShortText. This name is internally used when no property name is specified.
njx_statusbar_attr_longtextprop;Name of the adapter parameter that provides as value the long message text. The long text pops up if clicking onto the short text mesage. <br><br>Please pay attention: Do not use the name messageLongText. This name is internally used when no property name is specified.

njx__attr_subcispageprop;Name of the adapter parameter that provides the content of the control.

njx_titlebar_attr_valueprop;Name of the adapter parameter that provides a value from which the titlebar text is dynamically derived.<br><br>Do not use "name" or "textid" when using this "valueprop" property.
njx_titlebar_attr_withcloseprop;Name of the adapter parameter that indicates if the close icon of the titlebar is visible. <br><br>The server side property will be of type (L).
_attr_focusedprop;Name of property that indicates if the control should receive focus.<br><br>Must be of type "boolean"/ "Boolean"
njx__attr_focusedprop;Name of the adapter parameter which indicates if the control should receive focus. 
activex_attr_useparamtag;Set to false if setting the parameters in your ActiveX does not work using the html param tag. Normally you don't have to set this attribute.
mfwpbootstrapinfo_attr_browsertitleappendix;Customize the browser title. An empty string means, that you don't want to set the activity title as browser title. A non-empty string means, that for each activity the browser title is set to a concatenated value of the activity title and the browsertitleappendix you specified. Example: My Activity - My Browser Title Appendix.
_attr_movemethod;Name of the method on adapter level, which is called when the image is moved in the browser.
njx_rowtabarea_attr_visibleprop;Name of the adapter property that dynamically sets the visibility at runtime.
 NOTICE: If you want the framework to automatically set the focus to the first visible tab you also must apply a name for the attribute OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
_attr_contextmenu;If set to TRUE for a field myfield, method/event reactOnContextMenuMyfield will be called/triggered on right mouse click. In this method/event you can set a contextmenu correspondingly. Please use the attribute CONTEXTMENUMETHOD in case you would like to use a different method/eventname. In case a valid value is specified for the  CONTEXTMENUMETHOD attribute, the value for the CONTEXTMENU attribute is ignored. Default value is FALSE.
_attr_loadmethod;Name of the method on adapter level, which is called when the image is loaded.
njx__attr_movemethod;Name of the event that is sent to the adapter when the image is moved in the browser.
_attr_zoominmethod;Name of the method on adapter level, which is called on zoom in of the image in the browser.
_attr_zoomoutmethod;Name of the method on adapter level, which is called on zoom out of the image in the browser.
njx__attr_zoominmethod;Name of the event that is sent to the adapter on zoom in of the image in the browser.
njx__attr_zoomoutmethod;Name of the event that is sent to the adapter on zoom out of the image in the browser.
gridcolheader_attr_movable;Set this attribute to TRUE if you want the columns to be movable at runtime.  Default is FALSE. Please notice that only specific controls like FIELD in a grid support movable columns.
_attr_pseudo_classes;Set this attribute to TRUE when you have set an own CSS style class for the LINKCLASS property which uses pseudo classes like ':hover' and ':link'. A HREF attribute will be created, which is required to make the pseudo classes work correctly. Set this property only if you use pseudo classes. Note: If you set this property the text "javascript:void(0)" will be displayed in the status bar when the mouse pointer hovers over the link. This cannot be avoided.
xcipopupmenu_attr_withinactivenodes;Set the value of this property to true if  you want to disable menu items. In this case, the Natural adapter is generated with an additional INACTIVE field.
page_attr_popupendmethod;When set to TRUE the event nat:popup.end is raised when the page is running as popup. Default value is FALSE.
_attr_alwaysreload;When setting to false, the subpage is not reloaded when a page switch is executed, default is true.
njx_attr_natkcheck;For many controls a data structure is generated into the Natural adapter. The user can choose the name of the data structure, but the variable names inside the data structure are predefined. If this property is set to “true”, it is guaranteed that these predefined names do not collide with Natural reserved keywords and conform to the checks that the Natural parameter KCHECK defines. If this property is set to “false”, this is not guaranteed. For compatibility reasons the default value of the property is “false”.
_attr_withdistance_bt;If set to TRUE then an additional distance will be added at the bottom of the header. Default is FALSE.
_attr_withdistance_tp;If set to TRUE then an additional distance will be added at the top of the statusbar. Default is FALSE:
_attr_vscroll2;Definition of the vertical scrollbar's appearance.<br><br>You can define that scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "scroll".
_attr_hscroll2;Definition of the horizontal scrollbar's appearance.<br><br>You can define that the scrollbars only are shown if the content is exceeding the control's area ("auto"). Or scrollbars can be shown always ("scroll"). Or scrollbars are never shown - and the content is cut ("hidden").<br><br>Default is "hidden".
njx_page_attr_popupendmethod;When set to TRUE the event nat:popup.end is raised when the page is running as popup. Default value is FALSE.
njx__attr_textid;Name of the adapter property that provides the multi language dependent text which is displayed inside the control. The "textid" is translated into a corresponding string at runtime.<br><br>Do not specify a "name" inside the control if specifying a "textid".
njx__attr_width;Name of the adapter parameter that provided the width of the control.<br><br>There are three possibilities to define the width:<br><br>(A) You do not define a width at all. In this case the width of the control will either be a default width or - in case of container controls - it will follow the width that is occupied by its content.<br>(B) Pixel sizing: just input a number value (e.g. "100").<br>(C) Percentage sizing: input a percantage value (e.g. "50%"). Pay attention: percentage sizing will only bring up correct results if the parent element of the control properly defines a width this control can reference. If you specify this control to have a width of 50% then the parent element (e.g. an ITR-row) may itself define a width of "100%". If the parent element does not specify a width then the rendering result may not represent what you expect.
njx__attr_title;Name of the adapter parameter that provides the text which is shown as tooltip for the control.<br><br>Either specify the text "hard" by using this TITLE property - or use the TITLETEXTID in order to define a language dependent literal.
njx__attr_titletextid;Name of the adapter parameter that provides the text ID which is passed to the multi lanaguage management - representing the tooltip text that is used for the control.
njx_gridcolheader_attr_withsorticon;Name of the adapter parameter that provides the flag which indicates if a small sort indicator is shown within the right corner of the control. Default is TRUE.
njx__attr_sorttitle;Name of the adapter parameter that provides the text which is shown as tooltip for the sort indicator.<br><br>Either input text by using this SORTTITLE property - or use the SORTTITLETEXTID in order to define a language dependent literal.
njx__attr_sorttiletextid;Name of the adapter parameter that provides the text ID which is passed to the multi lanaguage management - representing the tooltip text for the sort indicator.
njx__attr_gridpropsprop;Name of the adapter parameter that provides the rendering data for the grid cells. If no name is specified a default name derived from the GRIDDATAPROP name is used.
njx__attr_gridinfoprop;Name of the adapter parameter that provides the data related to scrolling and sorting. If no name is specified a default name derived from the GRIDDATAPROP is used.
xcidatadef_attr_arraydim;If ARRAY is set to TRUE you can specify the array dimension here. Supported values are "1" and "2". The default is "1".
text_attr_maxrows;Maximum number of rows. No automatic wrapping is done. Don't use this in combination with maxlength/maxlengthprop.
text_attr_maxrowlength;Maximum number of characters in a row. No automatic wrapping is done. Don't this in combination with maxlength/maxlengthprop.
text_attr_maxrowsprop;Name of the adapter property that dynamically sets the maximum number of rows.
njx_text_attr_maxrowsprop;Name of the adapter parameter that provides the maximum number of rows.
njx_text_attr_maxrowlengthprop;Name of the adapter parameter that provides the maximum number of characters in a row.
text_attr_maxrowlengthprop;Name of the adapter property that dynamically sets the maximum number of characters in a row.
_attr_disabledprop;Name of the adapter parameter that dynamically defines if the control is disabled or enabled at runtime. If the value at runtime is set to TRUE the control is visible but disabled. In COLTABAREA controls this property is only supported for IE.
njx__attr_disabledprop;Name of the adapter parameter that dynamically defines if the control is disabled or enabled at runtime. If the value at runtime is set to TRUE the control is visible but disabled. In COLTABAREA controls this property is only supported for IE.
_attr_tabunselectedstyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is not selected and not disabled. NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
_attr_tabdisplaystyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is disabled.	NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
_attr_tabselectedstyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is selected. NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
mfwpbootstrapinfo_attr_helpframewidth;The width of the cis help frame in pixels. Use this property in case you  are using the CISHELP frame in your workplace for showing online help pages. 
_desc_autocompleteid;The id of the autocomplete data source. This id can be referenced from FIELD controls.
_desc_source;The kind of data source like string, file, url.
_desc_sourcelocation;The source location. Depends on the kind of source. Examples: ./autocomplete/myfile, http://myremotedatasource...
_attr_minlength;The drop down selection box is not opened before a minlength number of characters is inserted into the FIELD control.
_attr_delay;The delay in milliseconds between when a keystroke occurs and when a search is performed
_desc_sourcelocationprop;Name of the adapter property that dynamically sets the sourcelocation at runtime.
njx__desc_sourcelocationprop;Name of the adapter parameter that specifies the sourcelocation dynamically at runtime.
njx__desc_sourceprop;Name of the adapter parameter that specifies the kind of source dynamically at runtime.
_desc_sourceprop;Name of the adapter property that provides the kind of source dynamically at runtime.
_attr_autocompleteref;Adds autocomplete functionality to the FIELD control. As value set the id of the AUTOCOMPLETE control.
_attr_autocompletedisplayref;Sets a reference to an additional control to display additional informaton on selection. As value set the valueprop of the control in which you would like to display the information.
_attr_autocompletedisplayname;Name of the value to be displayed in an additional control.
_attr_matchmode;Specify "start" to find all items which start with the typed in characters. Specify "all" to find all items which contain the typed in charachters. Default is "start". For source="url", the matchmode is ignored.
autocomplete_attr_rows;Height of the drop down box in rows. If more items are found, a scrollbar is shown.
_attr_togglestylevariant;Set a value for this attribute if you would like to apply your own sort images. Own sort images must be provided in the subfolder images of your user interface component. For a togglestylevariant ABC the name of the image files must be sort0ABC.gif, sort1ABC.gif, sort2ABC.gif.
rowtabarea_attr_withclose;If you want a close-icon to be shown at the right top corner of the tab, set this property value to "true".  Default is "false".
njx__attr_tabselectedstyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is selected. NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
njx__attr_tabunselectedstyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is not selected and not disabled. NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
njx__attr_tabdisplaystyleprop;Name of the adapter parameter that dynamically defines the style for a tab which is disabled.	NOTICE: When using this property you  must also set the property OPENEDINDEXPROP. You don't have to set a value at runtime, but you need to specify a valid name.
report_attr_name;A report can be downloaded as pdf file. If you specify a value, this value will be used as file name of the pdf file. Otherwise a default file name is used.
_attr_resetbefore;If set to TRUE, the control is reset before a server roundtrip is done.
_attr_formautocomplete;This property only has effects if the withformtag property in the PAGEBODY is activated. In this case you can switch on and off the browser's autocomplete behavior for HTML form tags in single FIELD controls. Default is TRUE.
_attr_vscrollposprop;Name of adapter property that dynamically sets the position of the vertical scrollbar. The value top will scroll up to the top, the value bottom will scroll down to the bottom of the container.
innerdiv_attr_dropmethod;Method which is called in the Adapter when the drop operation is finished.
njx_innerdiv_attr_dropmethod;Event which is triggerd in the Natural program when the drop operation is finished.
bmobile_attr_alert_typeprop;Name of the adapter parameter that provides as value the type of the alert message. The type defines the style in which the alert box is rendered.
njx_bmobile_attr_alert_typeprop;Name of the adapter parameter that provides as value the type of the alert message. The type defines the style in which the alert box is rendered.
bmobile_attr_alert_shorttextprop;Name of the adapter parameter that provides as value the message text that is visible inside the alert box. 
njx_bmobile_attr_alert_shorttextprop;Name of the adapter parameter that provides as value the message text that is visible inside the alert box. 
bmobile_attr_alert_longtextprop;Name of the adapter parameter that provides as value the message text that is visible inside the alert box. 
njx_bmobile_attr_alert_longtextprop;Name of the adapter parameter that provides as value the message text that is visible inside the alert box.
bmobile_attr_button_type;The type of the button like reset or submit.
bmobile_attr_styleclasses;CSS style classes separated by a blank.
bmobile_attr_placeholder;The text for the HTML placeholder attribute. The placeholder attribute specifies a short hint that describes the expected value.
bmobile_attr_email;If set to true E-Mail validation is done by the browser.
bmobile_attr_validation;The HTML validation attribute for input controls.
bmobile_attr_required;If set to true a value is required.
bmobile_attr_validationmessage;The message which is shown when the validation is not successful.
bmobile_attr_legend;A caption shown for the formarea.
bmobile_attr_brandprop;Name of the adapter parameter that dynamically defines a brand image.
njx_bmobile_attr_brandprop;Name of the adapter parameter that dynamically defines a brand image.
bmobile_attr_colprop;Name of the adapter parameter that dynamically defines the grid column value.
njx_bmobile_attr_colprop;Name of the adapter parameter that dynamically defines the grid column value.
iconlist_attr_withinvisibleprop;If set to true, a field invisible will be generated into the adapter interface.
njx__attr_vscrollposprop;Name of adapter property that dynamically sets the position of the vertical scrollbar. The value top will scroll up to the top, the value bottom will scroll down to the bottom of the container.
_attr_numberofmonths;Number of months shown for selection. Default is 1
njx__attr_selectprop;Name of the adapter parameter representing the selected item
_attr_sortcol;Index of the initial sorted column. Index starts with 0.
_attr_sortorder;Sort order (asc or desc) of the initial sorted column.
njx__attr_changeindexprop;Name of the adapter parameter providing a value which indicates whether the control should be refreshed with new data on the client or not. A different value than the previous triggers the refresh. It does not need to be a higher value. 
bmobile_attr_htmlheading;The rendering of the heading: H1-H6
chart_attr_rcharttype;The tyoe if chart. Examples: bar.
chart_attr_stackedyaxis;If set to true the bars or lines of the chart are stacked on the y-axis.
chart_attr_scalelabel;The text for the label of the scale for this axis.
chart_attr_yaxisbarthickness;Height of the bar in pixels. If not set, the bars are sized automatically.
chart_attr_label;The text for the label of this dataset.
chart_attr_backgroundcolor;The fill color of the bars or the fill color under the lines or the fill color of the arcs depending on the chart type.
chart_attr_borderwidth;Border width in pixels.
chart_attr_bordercolor;Border color.
njx_chart_attr_onclickmethod;The event which is triggered in the Natural program when for instance a bar of a bar chart is clicked.
chart_attr_hoverbackgroundcolor;Background color when hovered.
chart_attr_hoverborderwidth;Border width in pixel when hovered.
chart_attr_hoverbordercolor;Border color when hovered.
chart_attr_borderdash;Length and spacing of dashes separated by comma. Example: 10;2 
chart_attr_pointbordercolor;The border color for points.
chart_attr_pointbackgroundcolor;The fill color for points
chart_attr_pointborderwidth;The width of the point border in pixels
chart_attr_pointradius;The radius of the point shape. If set to 0, nothing is rendered. 
chart_attr_pointhoverradius;The radius of the point when hovered.
chart_attr_pointhitradius;The pixel size of the non-displayed point that reacts to mouse events.
chart_attr_pointhoverbackgroundcolor;Point background color when hovered.
chart_attr_pointhoverbordercolor;Point border color when hovered.
chart_attr_pointhoverborderwidth;Border width of point when hovered
chart_attr_pointstyle;The style of point. Options are : circle, triangle, rect, rectRounded, rectRot, cross, crossRot, star, line, and dash. 
chart_attr_steppedline;If true, the line is shown as a stepped line.
njx_chart_attr_selectedlabelprop;Name of the adapter parameter to which the value of the selected label is set on click.
chart_attr_data;A comma separated list with the data for the arcs. Example: 10;30;100
njx_chart_attr_dataprop;The name of the adapter parameter which provides the data for the arcs at runtime. The value must be a comma separated list. Example: 10;20;30
chart_attr_rotation;Starting angle to draw arcs from. Default is -0.5 * Math.PI.
chart_attr_circumference;Sweep to allow arcs to cover. Default is 2 * Math.PI.
chart_attr_animaterotate;If true, will animate the rotation of the chart.
chart_attr_animatescale;If true, will animate scaling the Doughnut from the centre.
njx_chart_attr_legendonclickmethod;Name of the event which is triggered when clicking on a legend.
_attr_features;Customize the rendering of the grid. Example: "autoWidth:false;info:false;paging:false;searching:false;ordering:false;lengthChange:false". For the supported features see the datatables documentation.
_attr_visible;If set to FALSE the column is not visible in the browser but the corresponding data is still accessable from within the Natural application. Example usage is an "id column".
bmobile_attr_renderaslink;If set to "TRUE" the control is rendered as a link.
page_attr_pdfpageprop;Name of the adapter property that dynamically defines the name of the pdf layout. If not specified a default name is used.
njx_page_attr_pdfpageprop;Name of the adapter parameter that dynamically defines the name of the pdf layout. This allows for applying different pdf layouts dynamically at runtime. If not specified a default name is used.
_attr_autocompletepopupicon;Set this property to use your own dropdown icon. URL of an icon, which is used to show the whole list when it is clicked. 
_attr_autocompletewithdropdown;If set to "TRUE" a dropdown button/icon will be appended to the field. When it is clicked,  all items are  shown.
str_attr_alwaysonclick;If no onclickmethod is defined, this property is ignored. If an onclickmethod is defined and this property is set to false, then the onclickmethod is only called if the clicked control does call a method itself. Example: A click on a button will only call the method defined in the button. Default is true, which means both methods will be called.
_attr_pixelratio;The ratio between physical pixels and device-independent pixels (dips) on the device.
_attr_maxzoom;The maximum zoom level (integer).
_attr_zoom;The initial zoom level (integer).
_attr_minzoom;The minimum zoom level (integer).
_attr_rotation;The initial rotation for the view in radians (positive rotation clockwise).
_attr_opacity;Opacity (0, 1). Default is 1
_attr_overviewmap;If set to true an icon to show an overview map is added to the lower left corner of the map.
njx__attr_maxzoomprop;Name of the adapter parameter which provides the value for the maximum zoom level at runtime.
njx__attr_minzoomprop;Name of the adapter parameter which provides the value for the minimum zoom level at runtime.
_attr_maxcount;Maximum count of markers for marker group.
njx__attr_textprop;Name of the adapter parameter which dynamically provides the text for the marker at runtime.
_attr_positioning;Defines the positioning with respect to the coordinates of the marker. Possible values are bottom-left, bottom-center, bottom-right, center-left, center-center, center-right, top-left, top-center, and top-right. 
_attr_offset;Offsets in pixels used when positioning the marker. The first value is the horizontal offset. A positive value shifts the overlay right.  The second value the vertical offset. A positive value shifts the overlay down. Example: 1;1 
_attr_insertfirst;If set to true, the markers are inserted first in the in the container.
_attr_autopan;If set to true the map is panned when calling setPosition, so that the marker is entirely visible in the current viewport.
_attr_autopananimation;Animation duration to pan the marker into view. 
_attr_autopanmargin;The margin (in pixels) between the marker and the borders of the map when autopanning
_attr_withgeocoder;Set this property to true if you want tje Ajax framework to use the external geocoder Nominatim to convert addresses to coordinates and vice versa. You need to follow the usage policies of Nominatim https://operations.osmfoundation.org/policies/nominatim/ .  Default is false.
_attr_locationmarker;If set to true the coordinate specified as location for the map is marked with a default location marker.
_attr_renderaspopover;If set to true the text is rendered as popover when clicking on the icon of the marker. Default is false.
_attr_popoverposition;The position of the popover relative to the icon: top, bottom, left, right.
njx__attr_flushindexprop;Name of a changeindexprop property of another control. On flush='screen" the value of the specified property is automatically increased so that the controls is automatically refreshed. This property is ignored for flush="server"
_attr_cap; Determines what the end of line should look like. Valid values are butt, round, square. Default is round. 
_attr_strokewidth;The width of the line .
njx__attr_coordinatesprop;Natural parameter which provides the coordinates of the polygon as a comma separated list: latitude1;longitude1;latitude2;longitude2...
_attr_showvalueinchart;Show the values in the chart. Per default the values are shown as tooltip.
njx_chart_attr_backgroundcolorprop;The name of the adapter parameter which provides the backgroundcolor value.
njx_chart_attr_borderwidthprop;The name of the adapter parameter which provides the borderwidth value
njx_chart_attr_bordercolorprop;The name of the adapter parameter which provides the bordercolor value
njx_chart_attr_borderdashprop;The name of the adapter parameter which provides the borderdash value
njx_chart_attr_pointbordercolorprop;The name of the adapter parameter which provides the pointbordercolor value
njx_chart_attr_pointbackgroundcolorprop;The name of the adapter parameter which provides the pointbackgroundcolor value
njx_chart_attr_pointborderwidthprop;The name of the adapter parameter which provides the pointborderwidth value
njx_chart_attr_pointradiusprop;The name of the adapter parameter which provides  the pointradius value
njx_chart_attr_pointhoverradiusprop;The name of the adapter parameter which provides the pointhoverradius value.
njx_chart_attr_pointhitradiusprop;The name of the adapter parameter which provides the pointhitradius value
njx_chart_attr_pointhoverbackgroundcolorprop;The name of the adapter parameter which provides  the pointhoverbackgroundcolor value
njx_chart_attr_pointhoverbordercolorprop;The name of the adapter parameter which provides the pointhoverbordercolor value
njx_chart_attr_pointhoverborderwidthprop;The name of the adapter parameter which provides the pointhoverborderwidth value
njx_chart_attr_pointstyleprop;The name of the adapter parameter which provides the pointstyle value
njx_chart_attr_steppedlineprop;The name of the adapter parameter which provides the steppedline value
njx_chart_attr_rotationprop;The name of the adapter parameter which provides the rotation value
njx_chart_attr_circumferenceprop;The name of the adapter parameter which provides the circumference value
njx_chart_attr_animaterotateprop;The name of the adapter parameter which provides the animaterotate value
njx_chart_attr_animatescaleprop;The name of the adapter parameter which provides the animatescale value
_attr_animateduration;The duration of the animation in milliseconds.
_attr_animaterepeat;How often the animation is repeated until it is automatically stopped.
_attr_animatestartradius;The radius with which the animation starts.
_attr_animateendradius;The radius with which the animation ends.
_attr_animatewidth;The stroke width for the animation.
_attr_animatergbcolor;The color for the stroke during animation. If specified as rgb color, for the  animation the corresponding rgba color will be used and the opacity is automatically set according to the elapsed animation time.
_attr_animatefillrgbcolor;The fill color during animation. If specified as rgb color, for the  animation the corresponding rgba color will be used and the opacity is automatically set according to the elapsed animation time.
njx__attr_animateprop;The name of the Adapter parameter which dynamically can start and stop the animation. A value of TRUE will start the animation, a value of false will stop the animation. The value will automatically be set to FALSE when the animation finished according to the specified animateduration and animaterepeat settings
_attr_animateonadd;If set to true, the animation is automatically started when the mappoint is added to a map. This happens when the control is loaded in the browser.
_attr_animatedash;In case the stroke line used for the animation should be dashed: Specify the length and spaces of the dashes as comma seperated list. Example: 10;2
_attr_withanimation;Set this property to true, if the layer contains animated markers. For optimizaton purpose, per default animation is switched off.
_attr_popuponF4F7;Per default the calendar is opened on F4 and F7. Set this property to false if you want to use F4 or F7 for other purpose.
_attr_inline;Set this property to true if you want the controls to appear in the same line.
_attr_legendprop;Adapter property which dynamically defines the caption of the formarea at runtime.
_attr_aspectratio;Defines the proportional relationship between width and height of the control. Example: 4by3
_attr_navmode;There are several rendering modes. For example set this property to nav-pills if you want the tabs to be rendered as pills.
_attr_navcolstyleclasses;CSS style classes separated by a blank applied to the navigation tabs. For responsive pages it is recommended to apply one of the col-* classes to define the width.
_attr_panecolstyleclasses;CSS style classes separated by a blank applied to the pane. For responsive pages it is recommended to apply one of the col-* classes to define the width.
_attr_navcolstyle;Inline CSS style settings applied to the navigation tabs.
_attr_panecolstyle;Inline CSS style settings applied to the pane.
_attr_withcollapse;If set to true a small button is added to hide and show the navigation tabs.
_attr_withdropdown;If set to true tabs can have drop-down menus. An additional Natural field level is generated.
pager_attr_maxcount;Maximum number of pager buttons. Each pager button holds a link for the last clicked tab.
_attr_holidaysurl;URL for json file, which contains custom holidays.
njx__attr_holidaysurlprop;Name of the Adapter paramter which provides the URL for a json file with custom holidays dynamically at runtime.
_attr_holidaysstyleclass;Name of the css style class, which is used for the rendering of custom holidays. Default is DATEINPUT2Holidays
_attr_holidaysdescriptionastooltip;Set this property to true if you want to show descriptions in the json file as tool tips.
_attr_videourl;URL of the video file
_attr_videotype;Type of the video format. Default is video/mp4.
_attr_videocontrols;Set this property to true if you want the controls for starting, pausing, resuming...of the video to be shown.
_attr_mediatype;Default is camera. If you want the picture to be taken from a video file instead of the camera device, set video.
njx__attr_fileinfoprop;Name of the adapter parameter that contains information of the file like name and size.	
njx__attr_videotypeprop;Name of the adapter parameter that dynamically defines the video format at runtime. Default value of the video format is video/mp4.
_attr_autoplay;If set to true the video automatically starts playing when the page is loaded.
njx__attr_autoplayprop;Name of the adapter parameter that dynamically defines if a video automatically starts playing. Default is FALSE.
